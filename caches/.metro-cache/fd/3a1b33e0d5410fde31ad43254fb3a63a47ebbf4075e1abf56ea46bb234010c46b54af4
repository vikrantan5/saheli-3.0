{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./NotificationScheduler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":60,"index":117}}],"key":"2z96lx/8U+vMEPJmMI1AQnQjTYQ=","exportNames":["*"]}},{"name":"./scheduleNotificationAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":118},"end":{"line":3,"column":59,"index":177}}],"key":"5SfnJH0WozYV5Mt1R15xcEHYaWM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getNextTriggerDateAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _NotificationScheduler = _interopRequireDefault(require(_dependencyMap[3], \"./NotificationScheduler\"));\n  var _scheduleNotificationAsync = require(_dependencyMap[4], \"./scheduleNotificationAsync\");\n  /**\n   * Allows you to check what will be the next trigger date for given notification trigger input.\n   * @param trigger The schedulable notification trigger you would like to check next trigger date for (of type [`SchedulableNotificationTriggerInput`](#schedulablenotificationtriggerinput)).\n   * @return If the return value is `null`, the notification won't be triggered. Otherwise, the return value is the Unix timestamp in milliseconds\n   * at which the notification will be triggered.\n   * @example Calculate next trigger date for a notification trigger:\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * async function logNextTriggerDate() {\n   *   try {\n   *     const nextTriggerDate = await Notifications.getNextTriggerDateAsync({\n   *       hour: 9,\n   *       minute: 0,\n   *     });\n   *     console.log(nextTriggerDate === null ? 'No next trigger date' : new Date(nextTriggerDate));\n   *   } catch (e) {\n   *     console.warn(`Couldn't have calculated next trigger date: ${e}`);\n   *   }\n   * }\n   * ```\n   * @header schedule\n   */\n  function getNextTriggerDateAsync(_x) {\n    return _getNextTriggerDateAsync.apply(this, arguments);\n  }\n  function _getNextTriggerDateAsync() {\n    _getNextTriggerDateAsync = (0, _asyncToGenerator2.default)(function* (trigger) {\n      if (!_NotificationScheduler.default.getNextTriggerDateAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoNotifications', 'getNextTriggerDateAsync');\n      }\n      return yield _NotificationScheduler.default.getNextTriggerDateAsync((0, _scheduleNotificationAsync.parseTrigger)(trigger));\n    });\n    return _getNextTriggerDateAsync.apply(this, arguments);\n  }\n});","lineCount":46,"map":[[8,2,1,0],[8,6,1,0,"_expoModulesCore"],[8,22,1,0],[8,25,1,0,"require"],[8,32,1,0],[8,33,1,0,"_dependencyMap"],[8,47,1,0],[9,2,2,0],[9,6,2,0,"_NotificationScheduler"],[9,28,2,0],[9,31,2,0,"_interopRequireDefault"],[9,53,2,0],[9,54,2,0,"require"],[9,61,2,0],[9,62,2,0,"_dependencyMap"],[9,76,2,0],[10,2,3,0],[10,6,3,0,"_scheduleNotificationAsync"],[10,32,3,0],[10,35,3,0,"require"],[10,42,3,0],[10,43,3,0,"_dependencyMap"],[10,57,3,0],[11,2,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,2,4,0],[34,11,27,30,"getNextTriggerDateAsync"],[34,34,27,53,"getNextTriggerDateAsync"],[34,35,27,53,"_x"],[34,37,27,53],[35,4,27,53],[35,11,27,53,"_getNextTriggerDateAsync"],[35,35,27,53],[35,36,27,53,"apply"],[35,41,27,53],[35,48,27,53,"arguments"],[35,57,27,53],[36,2,27,53],[37,2,27,53],[37,11,27,53,"_getNextTriggerDateAsync"],[37,36,27,53],[38,4,27,53,"_getNextTriggerDateAsync"],[38,28,27,53],[38,35,27,53,"_asyncToGenerator2"],[38,53,27,53],[38,54,27,53,"default"],[38,61,27,53],[38,63,27,15],[38,74,27,54,"trigger"],[38,81,27,61],[38,83,27,63],[39,6,28,4],[39,10,28,8],[39,11,28,9,"NotificationScheduler"],[39,41,28,30],[39,42,28,31,"getNextTriggerDateAsync"],[39,65,28,54],[39,67,28,56],[40,8,29,8],[40,14,29,14],[40,18,29,18,"UnavailabilityError"],[40,54,29,37],[40,55,29,38],[40,74,29,57],[40,76,29,59],[40,101,29,84],[40,102,29,85],[41,6,30,4],[42,6,31,4],[42,19,31,17,"NotificationScheduler"],[42,49,31,38],[42,50,31,39,"getNextTriggerDateAsync"],[42,73,31,62],[42,74,31,63],[42,78,31,63,"parseTrigger"],[42,117,31,75],[42,119,31,76,"trigger"],[42,126,31,83],[42,127,31,84],[42,128,31,85],[43,4,32,0],[43,5,32,1],[44,4,32,1],[44,11,32,1,"_getNextTriggerDateAsync"],[44,35,32,1],[44,36,32,1,"apply"],[44,41,32,1],[44,48,32,1,"arguments"],[44,57,32,1],[45,2,32,1],[46,0,32,1],[46,3]],"functionMap":{"names":["<global>","getNextTriggerDateAsync"],"mappings":"AAA;eC0B;CDK"}},"type":"js/module"}]}