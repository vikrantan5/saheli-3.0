{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}},{"name":"./addDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":39,"index":98}}],"key":"SmN07HKxNCN07W7zancFddtX2UQ=","exportNames":["*"]}},{"name":"./differenceInCalendarDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":73,"index":172}}],"key":"imq/EGPR6TLwAkGUJvGZSPH1SeI=","exportNames":["*"]}},{"name":"./isSameDay.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":173},"end":{"line":4,"column":43,"index":216}}],"key":"yVcsg/rObRkOAbeavGYlgwl+soE=","exportNames":["*"]}},{"name":"./isValid.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":217},"end":{"line":5,"column":39,"index":256}}],"key":"Sst1buy9uBfV7bjRtTAEggSwFYs=","exportNames":["*"]}},{"name":"./isWeekend.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":257},"end":{"line":6,"column":43,"index":300}}],"key":"tXlvsFxnziLZ0ZC1PO3HjxsfNHs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.differenceInBusinessDays = differenceInBusinessDays;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _normalizeDates3 = require(_dependencyMap[2], \"./_lib/normalizeDates.js\");\n  var _addDays = require(_dependencyMap[3], \"./addDays.js\");\n  var _differenceInCalendarDays = require(_dependencyMap[4], \"./differenceInCalendarDays.js\");\n  var _isSameDay = require(_dependencyMap[5], \"./isSameDay.js\");\n  var _isValid = require(_dependencyMap[6], \"./isValid.js\");\n  var _isWeekend = require(_dependencyMap[7], \"./isWeekend.js\");\n  /**\n   * The {@link differenceInBusinessDays} function options.\n   */\n\n  /**\n   * @name differenceInBusinessDays\n   * @category Day Helpers\n   * @summary Get the number of business days between the given dates.\n   *\n   * @description\n   * Get the number of business day periods between the given dates.\n   * Business days being days that aren't in the weekend.\n   * Like `differenceInCalendarDays`, the function removes the times from\n   * the dates before calculating the difference.\n   *\n   * @param laterDate - The later date\n   * @param earlierDate - The earlier date\n   * @param options - An object with options\n   *\n   * @returns The number of business days\n   *\n   * @example\n   * // How many business days are between\n   * // 10 January 2014 and 20 July 2014?\n   * const result = differenceInBusinessDays(\n   *   new Date(2014, 6, 20),\n   *   new Date(2014, 0, 10)\n   * )\n   * //=> 136\n   *\n   * // How many business days are between\n   * // 30 November 2021 and 1 November 2021?\n   * const result = differenceInBusinessDays(\n   *   new Date(2021, 10, 30),\n   *   new Date(2021, 10, 1)\n   * )\n   * //=> 21\n   *\n   * // How many business days are between\n   * // 1 November 2021 and 1 December 2021?\n   * const result = differenceInBusinessDays(\n   *   new Date(2021, 10, 1),\n   *   new Date(2021, 11, 1)\n   * )\n   * //=> -22\n   *\n   * // How many business days are between\n   * // 1 November 2021 and 1 November 2021 ?\n   * const result = differenceInBusinessDays(\n   *   new Date(2021, 10, 1),\n   *   new Date(2021, 10, 1)\n   * )\n   * //=> 0\n   */\n  function differenceInBusinessDays(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _normalizeDates3.normalizeDates)(options?.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    if (!(0, _isValid.isValid)(laterDate_) || !(0, _isValid.isValid)(earlierDate_)) return NaN;\n    var diff = (0, _differenceInCalendarDays.differenceInCalendarDays)(laterDate_, earlierDate_);\n    var sign = diff < 0 ? -1 : 1;\n    var weeks = Math.trunc(diff / 7);\n    var result = weeks * 5;\n    var movingDate = (0, _addDays.addDays)(earlierDate_, weeks * 7);\n\n    // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n    while (!(0, _isSameDay.isSameDay)(laterDate_, movingDate)) {\n      // sign is used to account for both negative and positive differences\n      result += (0, _isWeekend.isWeekend)(movingDate, options) ? 0 : sign;\n      movingDate = (0, _addDays.addDays)(movingDate, sign);\n    }\n\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = differenceInBusinessDays;\n});","lineCount":94,"map":[[9,2,1,0],[9,6,1,0,"_normalizeDates3"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,2,0],[10,6,2,0,"_addDays"],[10,14,2,0],[10,17,2,0,"require"],[10,24,2,0],[10,25,2,0,"_dependencyMap"],[10,39,2,0],[11,2,3,0],[11,6,3,0,"_differenceInCalendarDays"],[11,31,3,0],[11,34,3,0,"require"],[11,41,3,0],[11,42,3,0,"_dependencyMap"],[11,56,3,0],[12,2,4,0],[12,6,4,0,"_isSameDay"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_isValid"],[13,14,5,0],[13,17,5,0,"require"],[13,24,5,0],[13,25,5,0,"_dependencyMap"],[13,39,5,0],[14,2,6,0],[14,6,6,0,"_isWeekend"],[14,16,6,0],[14,19,6,0,"require"],[14,26,6,0],[14,27,6,0,"_dependencyMap"],[14,41,6,0],[15,2,8,0],[16,0,9,0],[17,0,10,0],[19,2,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,0,37,0],[45,0,38,0],[46,0,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,0,45,0],[53,0,46,0],[54,0,47,0],[55,0,48,0],[56,0,49,0],[57,0,50,0],[58,0,51,0],[59,0,52,0],[60,0,53,0],[61,0,54,0],[62,0,55,0],[63,0,56,0],[64,0,57,0],[65,0,58,0],[66,0,59,0],[67,0,60,0],[68,0,61,0],[69,2,62,7],[69,11,62,16,"differenceInBusinessDays"],[69,35,62,40,"differenceInBusinessDays"],[69,36,62,41,"laterDate"],[69,45,62,50],[69,47,62,52,"earlierDate"],[69,58,62,63],[69,60,62,65,"options"],[69,67,62,72],[69,69,62,74],[70,4,63,2],[70,8,63,2,"_normalizeDates"],[70,23,63,2],[70,26,63,37],[70,30,63,37,"normalizeDates"],[70,61,63,51],[70,63,64,4,"options"],[70,70,64,11],[70,72,64,13,"in"],[70,74,64,15],[70,76,65,4,"laterDate"],[70,85,65,13],[70,87,66,4,"earlierDate"],[70,98,67,2],[70,99,67,3],[71,6,67,3,"_normalizeDates2"],[71,22,67,3],[71,29,67,3,"_slicedToArray2"],[71,44,67,3],[71,45,67,3,"default"],[71,52,67,3],[71,54,67,3,"_normalizeDates"],[71,69,67,3],[72,6,63,9,"laterDate_"],[72,16,63,19],[72,19,63,19,"_normalizeDates2"],[72,35,63,19],[73,6,63,21,"earlierDate_"],[73,18,63,33],[73,21,63,33,"_normalizeDates2"],[73,37,63,33],[74,4,69,2],[74,8,69,6],[74,9,69,7],[74,13,69,7,"isValid"],[74,29,69,14],[74,31,69,15,"laterDate_"],[74,41,69,25],[74,42,69,26],[74,46,69,30],[74,47,69,31],[74,51,69,31,"isValid"],[74,67,69,38],[74,69,69,39,"earlierDate_"],[74,81,69,51],[74,82,69,52],[74,84,69,54],[74,91,69,61,"NaN"],[74,94,69,64],[75,4,71,2],[75,8,71,8,"diff"],[75,12,71,12],[75,15,71,15],[75,19,71,15,"differenceInCalendarDays"],[75,69,71,39],[75,71,71,40,"laterDate_"],[75,81,71,50],[75,83,71,52,"earlierDate_"],[75,95,71,64],[75,96,71,65],[76,4,72,2],[76,8,72,8,"sign"],[76,12,72,12],[76,15,72,15,"diff"],[76,19,72,19],[76,22,72,22],[76,23,72,23],[76,26,72,26],[76,27,72,27],[76,28,72,28],[76,31,72,31],[76,32,72,32],[77,4,73,2],[77,8,73,8,"weeks"],[77,13,73,13],[77,16,73,16,"Math"],[77,20,73,20],[77,21,73,21,"trunc"],[77,26,73,26],[77,27,73,27,"diff"],[77,31,73,31],[77,34,73,34],[77,35,73,35],[77,36,73,36],[78,4,75,2],[78,8,75,6,"result"],[78,14,75,12],[78,17,75,15,"weeks"],[78,22,75,20],[78,25,75,23],[78,26,75,24],[79,4,76,2],[79,8,76,6,"movingDate"],[79,18,76,16],[79,21,76,19],[79,25,76,19,"addDays"],[79,41,76,26],[79,43,76,27,"earlierDate_"],[79,55,76,39],[79,57,76,41,"weeks"],[79,62,76,46],[79,65,76,49],[79,66,76,50],[79,67,76,51],[81,4,78,2],[82,4,79,2],[82,11,79,9],[82,12,79,10],[82,16,79,10,"isSameDay"],[82,36,79,19],[82,38,79,20,"laterDate_"],[82,48,79,30],[82,50,79,32,"movingDate"],[82,60,79,42],[82,61,79,43],[82,63,79,45],[83,6,80,4],[84,6,81,4,"result"],[84,12,81,10],[84,16,81,14],[84,20,81,14,"isWeekend"],[84,40,81,23],[84,42,81,24,"movingDate"],[84,52,81,34],[84,54,81,36,"options"],[84,61,81,43],[84,62,81,44],[84,65,81,47],[84,66,81,48],[84,69,81,51,"sign"],[84,73,81,55],[85,6,82,4,"movingDate"],[85,16,82,14],[85,19,82,17],[85,23,82,17,"addDays"],[85,39,82,24],[85,41,82,25,"movingDate"],[85,51,82,35],[85,53,82,37,"sign"],[85,57,82,41],[85,58,82,42],[86,4,83,2],[88,4,85,2],[89,4,86,2],[89,11,86,9,"result"],[89,17,86,15],[89,22,86,20],[89,23,86,21],[89,26,86,24],[89,27,86,25],[89,30,86,28,"result"],[89,36,86,34],[90,2,87,0],[92,2,89,0],[93,2,89,0],[93,6,89,0,"_default"],[93,14,89,0],[93,17,89,0,"exports"],[93,24,89,0],[93,25,89,0,"default"],[93,32,89,0],[93,35,90,15,"differenceInBusinessDays"],[93,59,90,39],[94,0,90,39],[94,3]],"functionMap":{"names":["<global>","differenceInBusinessDays"],"mappings":"AAA;OC6D;CDyB"}},"type":"js/module"}]}