{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"abort-controller/polyfill","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"Zt445sKJeaqmd3t2yOR0GF+G/L0=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":56,"index":92}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":66,"index":159}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"]}},{"name":"./TokenEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":160},"end":{"line":4,"column":54,"index":214}}],"key":"5j/AymtYsxXL7qVrWh9rwW/7ePw=","exportNames":["*"]}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":64,"index":279}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"]}},{"name":"./utils/updateDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":280},"end":{"line":6,"column":120,"index":400}}],"key":"153jXZ66s6HybIv8YrABEWMrDwY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.__handlePersistedRegistrationInfoAsync = __handlePersistedRegistrationInfoAsync;\n  exports.setAutoServerRegistrationEnabledAsync = setAutoServerRegistrationEnabledAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  require(_dependencyMap[2], \"abort-controller/polyfill\");\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[4], \"./ServerRegistrationModule\"));\n  var _TokenEmitter = require(_dependencyMap[5], \"./TokenEmitter\");\n  var _getDevicePushTokenAsync = _interopRequireDefault(require(_dependencyMap[6], \"./getDevicePushTokenAsync\"));\n  var _updateDevicePushTokenAsync = require(_dependencyMap[7], \"./utils/updateDevicePushTokenAsync\");\n  var lastAbortController = null;\n  function updatePushTokenAsync(_x) {\n    return _updatePushTokenAsync.apply(this, arguments);\n  }\n  /**\n   * @hidden - the comment is misleading and the purpose of the function needs to be reevaluated\n   *\n   * Sets the registration information so that the device push token gets pushed\n   * to the given registration endpoint\n   * @param enabled\n   */\n  function _updatePushTokenAsync() {\n    _updatePushTokenAsync = (0, _asyncToGenerator2.default)(function* (token) {\n      // Abort current update process\n      lastAbortController?.abort();\n      lastAbortController = new AbortController();\n      return yield (0, _updateDevicePushTokenAsync.updateDevicePushTokenAsync)(lastAbortController.signal, token);\n    });\n    return _updatePushTokenAsync.apply(this, arguments);\n  }\n  function setAutoServerRegistrationEnabledAsync(_x2) {\n    return _setAutoServerRegistrationEnabledAsync.apply(this, arguments);\n  } // note(Chmiela): This function is exported only for testing purposes.\n  function _setAutoServerRegistrationEnabledAsync() {\n    _setAutoServerRegistrationEnabledAsync = (0, _asyncToGenerator2.default)(function* (enabled) {\n      // We are overwriting registration, so we shouldn't let\n      // any pending request complete.\n      lastAbortController?.abort();\n      if (!_ServerRegistrationModule.default.setRegistrationInfoAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'setRegistrationInfoAsync');\n      }\n      yield _ServerRegistrationModule.default.setRegistrationInfoAsync(enabled ? JSON.stringify({\n        isEnabled: enabled\n      }) : null);\n    });\n    return _setAutoServerRegistrationEnabledAsync.apply(this, arguments);\n  }\n  function __handlePersistedRegistrationInfoAsync(_x3) {\n    return _handlePersistedRegistrationInfoAsync.apply(this, arguments);\n  }\n  function _handlePersistedRegistrationInfoAsync() {\n    _handlePersistedRegistrationInfoAsync = (0, _asyncToGenerator2.default)(function* (registrationInfo) {\n      if (!registrationInfo) {\n        // No registration info, nothing to do\n        return;\n      }\n      var registration = null;\n      try {\n        registration = JSON.parse(registrationInfo);\n      } catch (e) {\n        console.warn('[expo-notifications] Error encountered while fetching registration information for auto token updates.', e);\n      }\n      if (!registration?.isEnabled) {\n        // Registration is invalid or not enabled, nothing more to do\n        return;\n      }\n      try {\n        // Since the registration is enabled, fetching a \"new\" device token\n        // shouldn't be a problem.\n        var latestDevicePushToken = yield (0, _getDevicePushTokenAsync.default)();\n        yield updatePushTokenAsync(latestDevicePushToken);\n      } catch (e) {\n        console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n      }\n    });\n    return _handlePersistedRegistrationInfoAsync.apply(this, arguments);\n  }\n  if (_ServerRegistrationModule.default.getRegistrationInfoAsync) {\n    // A global scope (to get all the updates) device push token\n    // subscription, never cleared.\n    (0, _TokenEmitter.addPushTokenListener)(/*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* (token) {\n        try {\n          // Before updating the push token on server we always check if we should\n          // Since modules can't change their method availability while running, we\n          // can assert it's defined.\n          var registrationInfo = yield _ServerRegistrationModule.default.getRegistrationInfoAsync();\n          if (!registrationInfo) {\n            // Registration is not enabled\n            return;\n          }\n          var registration = JSON.parse(registrationInfo);\n          if (registration?.isEnabled) {\n            // Dispatch an abortable task to update\n            // registration with new token.\n            yield updatePushTokenAsync(token);\n          }\n        } catch (e) {\n          console.warn('[expo-notifications] Error encountered while updating server registration with latest device push token.', e);\n        }\n      });\n      return function (_x4) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    // Verify if persisted registration\n    // has successfully uploaded last known\n    // device push token. If not, retry.\n    _ServerRegistrationModule.default.getRegistrationInfoAsync().then(__handlePersistedRegistrationInfoAsync);\n  } else {\n    console.warn(`[expo-notifications] Error encountered while fetching auto-registration state, new tokens will not be automatically registered on server.`, new _expoModulesCore.UnavailabilityError('ServerRegistrationModule', 'getRegistrationInfoAsync'));\n  }\n});","lineCount":117,"map":[[9,2,1,0,"require"],[9,9,1,0],[9,10,1,0,"_dependencyMap"],[9,24,1,0],[10,2,2,0],[10,6,2,0,"_expoModulesCore"],[10,22,2,0],[10,25,2,0,"require"],[10,32,2,0],[10,33,2,0,"_dependencyMap"],[10,47,2,0],[11,2,3,0],[11,6,3,0,"_ServerRegistrationModule"],[11,31,3,0],[11,34,3,0,"_interopRequireDefault"],[11,56,3,0],[11,57,3,0,"require"],[11,64,3,0],[11,65,3,0,"_dependencyMap"],[11,79,3,0],[12,2,4,0],[12,6,4,0,"_TokenEmitter"],[12,19,4,0],[12,22,4,0,"require"],[12,29,4,0],[12,30,4,0,"_dependencyMap"],[12,44,4,0],[13,2,5,0],[13,6,5,0,"_getDevicePushTokenAsync"],[13,30,5,0],[13,33,5,0,"_interopRequireDefault"],[13,55,5,0],[13,56,5,0,"require"],[13,63,5,0],[13,64,5,0,"_dependencyMap"],[13,78,5,0],[14,2,6,0],[14,6,6,0,"_updateDevicePushTokenAsync"],[14,33,6,0],[14,36,6,0,"require"],[14,43,6,0],[14,44,6,0,"_dependencyMap"],[14,58,6,0],[15,2,7,0],[15,6,7,4,"lastAbortController"],[15,25,7,23],[15,28,7,26],[15,32,7,30],[16,2,7,31],[16,11,8,15,"updatePushTokenAsync"],[16,31,8,35,"updatePushTokenAsync"],[16,32,8,35,"_x"],[16,34,8,35],[17,4,8,35],[17,11,8,35,"_updatePushTokenAsync"],[17,32,8,35],[17,33,8,35,"apply"],[17,38,8,35],[17,45,8,35,"arguments"],[17,54,8,35],[18,2,8,35],[19,2,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,14,0],[26,11,14,0,"_updatePushTokenAsync"],[26,33,14,0],[27,4,14,0,"_updatePushTokenAsync"],[27,25,14,0],[27,32,14,0,"_asyncToGenerator2"],[27,50,14,0],[27,51,14,0,"default"],[27,58,14,0],[27,60,8,0],[27,71,8,36,"token"],[27,76,8,41],[27,78,8,43],[28,6,9,4],[29,6,10,4,"lastAbortController"],[29,25,10,23],[29,27,10,25,"abort"],[29,32,10,30],[29,33,10,31],[29,34,10,32],[30,6,11,4,"lastAbortController"],[30,25,11,23],[30,28,11,26],[30,32,11,30,"AbortController"],[30,47,11,45],[30,48,11,46],[30,49,11,47],[31,6,12,4],[31,19,12,17],[31,23,12,17,"updateDevicePushTokenAsyncWithSignal"],[31,77,12,53],[31,79,12,54,"lastAbortController"],[31,98,12,73],[31,99,12,74,"signal"],[31,105,12,80],[31,107,12,82,"token"],[31,112,12,87],[31,113,12,88],[32,4,13,0],[32,5,13,1],[33,4,13,1],[33,11,13,1,"_updatePushTokenAsync"],[33,32,13,1],[33,33,13,1,"apply"],[33,38,13,1],[33,45,13,1,"arguments"],[33,54,13,1],[34,2,13,1],[35,2,13,1],[35,11,21,22,"setAutoServerRegistrationEnabledAsync"],[35,48,21,59,"setAutoServerRegistrationEnabledAsync"],[35,49,21,59,"_x2"],[35,52,21,59],[36,4,21,59],[36,11,21,59,"_setAutoServerRegistrationEnabledAsync"],[36,49,21,59],[36,50,21,59,"apply"],[36,55,21,59],[36,62,21,59,"arguments"],[36,71,21,59],[37,2,21,59],[37,4,30,0],[38,2,30,0],[38,11,30,0,"_setAutoServerRegistrationEnabledAsync"],[38,50,30,0],[39,4,30,0,"_setAutoServerRegistrationEnabledAsync"],[39,42,30,0],[39,49,30,0,"_asyncToGenerator2"],[39,67,30,0],[39,68,30,0,"default"],[39,75,30,0],[39,77,21,7],[39,88,21,60,"enabled"],[39,95,21,67],[39,97,21,69],[40,6,22,4],[41,6,23,4],[42,6,24,4,"lastAbortController"],[42,25,24,23],[42,27,24,25,"abort"],[42,32,24,30],[42,33,24,31],[42,34,24,32],[43,6,25,4],[43,10,25,8],[43,11,25,9,"ServerRegistrationModule"],[43,44,25,33],[43,45,25,34,"setRegistrationInfoAsync"],[43,69,25,58],[43,71,25,60],[44,8,26,8],[44,14,26,14],[44,18,26,18,"UnavailabilityError"],[44,54,26,37],[44,55,26,38],[44,81,26,64],[44,83,26,66],[44,109,26,92],[44,110,26,93],[45,6,27,4],[46,6,28,4],[46,12,28,10,"ServerRegistrationModule"],[46,45,28,34],[46,46,28,35,"setRegistrationInfoAsync"],[46,70,28,59],[46,71,28,60,"enabled"],[46,78,28,67],[46,81,28,70,"JSON"],[46,85,28,74],[46,86,28,75,"stringify"],[46,95,28,84],[46,96,28,85],[47,8,28,87,"isEnabled"],[47,17,28,96],[47,19,28,98,"enabled"],[48,6,28,106],[48,7,28,107],[48,8,28,108],[48,11,28,111],[48,15,28,115],[48,16,28,116],[49,4,29,0],[49,5,29,1],[50,4,29,1],[50,11,29,1,"_setAutoServerRegistrationEnabledAsync"],[50,49,29,1],[50,50,29,1,"apply"],[50,55,29,1],[50,62,29,1,"arguments"],[50,71,29,1],[51,2,29,1],[52,2,29,1],[52,11,31,22,"__handlePersistedRegistrationInfoAsync"],[52,49,31,60,"__handlePersistedRegistrationInfoAsync"],[52,50,31,60,"_x3"],[52,53,31,60],[53,4,31,60],[53,11,31,60,"_handlePersistedRegistrationInfoAsync"],[53,48,31,60],[53,49,31,60,"apply"],[53,54,31,60],[53,61,31,60,"arguments"],[53,70,31,60],[54,2,31,60],[55,2,31,60],[55,11,31,60,"_handlePersistedRegistrationInfoAsync"],[55,49,31,60],[56,4,31,60,"_handlePersistedRegistrationInfoAsync"],[56,41,31,60],[56,48,31,60,"_asyncToGenerator2"],[56,66,31,60],[56,67,31,60,"default"],[56,74,31,60],[56,76,31,7],[56,87,31,61,"registrationInfo"],[56,103,31,77],[56,105,31,79],[57,6,32,4],[57,10,32,8],[57,11,32,9,"registrationInfo"],[57,27,32,25],[57,29,32,27],[58,8,33,8],[59,8,34,8],[60,6,35,4],[61,6,36,4],[61,10,36,8,"registration"],[61,22,36,20],[61,25,36,23],[61,29,36,27],[62,6,37,4],[62,10,37,8],[63,8,38,8,"registration"],[63,20,38,20],[63,23,38,23,"JSON"],[63,27,38,27],[63,28,38,28,"parse"],[63,33,38,33],[63,34,38,34,"registrationInfo"],[63,50,38,50],[63,51,38,51],[64,6,39,4],[64,7,39,5],[64,8,40,4],[64,15,40,11,"e"],[64,16,40,12],[64,18,40,14],[65,8,41,8,"console"],[65,15,41,15],[65,16,41,16,"warn"],[65,20,41,20],[65,21,41,21],[65,125,41,125],[65,127,41,127,"e"],[65,128,41,128],[65,129,41,129],[66,6,42,4],[67,6,43,4],[67,10,43,8],[67,11,43,9,"registration"],[67,23,43,21],[67,25,43,23,"isEnabled"],[67,34,43,32],[67,36,43,34],[68,8,44,8],[69,8,45,8],[70,6,46,4],[71,6,47,4],[71,10,47,8],[72,8,48,8],[73,8,49,8],[74,8,50,8],[74,12,50,14,"latestDevicePushToken"],[74,33,50,35],[74,42,50,44],[74,46,50,44,"getDevicePushTokenAsync"],[74,78,50,67],[74,80,50,68],[74,81,50,69],[75,8,51,8],[75,14,51,14,"updatePushTokenAsync"],[75,34,51,34],[75,35,51,35,"latestDevicePushToken"],[75,56,51,56],[75,57,51,57],[76,6,52,4],[76,7,52,5],[76,8,53,4],[76,15,53,11,"e"],[76,16,53,12],[76,18,53,14],[77,8,54,8,"console"],[77,15,54,15],[77,16,54,16,"warn"],[77,20,54,20],[77,21,54,21],[77,127,54,127],[77,129,54,129,"e"],[77,130,54,130],[77,131,54,131],[78,6,55,4],[79,4,56,0],[79,5,56,1],[80,4,56,1],[80,11,56,1,"_handlePersistedRegistrationInfoAsync"],[80,48,56,1],[80,49,56,1,"apply"],[80,54,56,1],[80,61,56,1,"arguments"],[80,70,56,1],[81,2,56,1],[82,2,57,0],[82,6,57,4,"ServerRegistrationModule"],[82,39,57,28],[82,40,57,29,"getRegistrationInfoAsync"],[82,64,57,53],[82,66,57,55],[83,4,58,4],[84,4,59,4],[85,4,60,4],[85,8,60,4,"addPushTokenListener"],[85,42,60,24],[86,6,60,24],[86,10,60,24,"_ref"],[86,14,60,24],[86,21,60,24,"_asyncToGenerator2"],[86,39,60,24],[86,40,60,24,"default"],[86,47,60,24],[86,49,60,25],[86,60,60,32,"token"],[86,65,60,37],[86,67,60,42],[87,8,61,8],[87,12,61,12],[88,10,62,12],[89,10,63,12],[90,10,64,12],[91,10,65,12],[91,14,65,18,"registrationInfo"],[91,30,65,34],[91,39,65,43,"ServerRegistrationModule"],[91,72,65,67],[91,73,65,68,"getRegistrationInfoAsync"],[91,97,65,92],[91,98,65,93],[91,99,65,94],[92,10,66,12],[92,14,66,16],[92,15,66,17,"registrationInfo"],[92,31,66,33],[92,33,66,35],[93,12,67,16],[94,12,68,16],[95,10,69,12],[96,10,70,12],[96,14,70,18,"registration"],[96,26,70,30],[96,29,70,33,"JSON"],[96,33,70,37],[96,34,70,38,"parse"],[96,39,70,43],[96,40,70,44,"registrationInfo"],[96,56,70,60],[96,57,70,61],[97,10,71,12],[97,14,71,16,"registration"],[97,26,71,28],[97,28,71,30,"isEnabled"],[97,37,71,39],[97,39,71,41],[98,12,72,16],[99,12,73,16],[100,12,74,16],[100,18,74,22,"updatePushTokenAsync"],[100,38,74,42],[100,39,74,43,"token"],[100,44,74,48],[100,45,74,49],[101,10,75,12],[102,8,76,8],[102,9,76,9],[102,10,77,8],[102,17,77,15,"e"],[102,18,77,16],[102,20,77,18],[103,10,78,12,"console"],[103,17,78,19],[103,18,78,20,"warn"],[103,22,78,24],[103,23,78,25],[103,129,78,131],[103,131,78,133,"e"],[103,132,78,134],[103,133,78,135],[104,8,79,8],[105,6,80,4],[105,7,80,5],[106,6,80,5],[106,23,80,5,"_x4"],[106,26,80,5],[107,8,80,5],[107,15,80,5,"_ref"],[107,19,80,5],[107,20,80,5,"apply"],[107,25,80,5],[107,32,80,5,"arguments"],[107,41,80,5],[108,6,80,5],[109,4,80,5],[109,8,80,6],[110,4,81,4],[111,4,82,4],[112,4,83,4],[113,4,84,4,"ServerRegistrationModule"],[113,37,84,28],[113,38,84,29,"getRegistrationInfoAsync"],[113,62,84,53],[113,63,84,54],[113,64,84,55],[113,65,84,56,"then"],[113,69,84,60],[113,70,84,61,"__handlePersistedRegistrationInfoAsync"],[113,108,84,99],[113,109,84,100],[114,2,85,0],[114,3,85,1],[114,9,86,5],[115,4,87,4,"console"],[115,11,87,11],[115,12,87,12,"warn"],[115,16,87,16],[115,17,87,17],[115,156,87,156],[115,158,87,158],[115,162,87,162,"UnavailabilityError"],[115,198,87,181],[115,199,87,182],[115,225,87,208],[115,227,87,210],[115,253,87,236],[115,254,87,237],[115,255,87,238],[116,2,88,0],[117,0,88,1],[117,3]],"functionMap":{"names":["<global>","updatePushTokenAsync","setAutoServerRegistrationEnabledAsync","__handlePersistedRegistrationInfoAsync","addPushTokenListener$argument_0"],"mappings":"AAA;ACO;CDK;OEQ;CFQ;OGE;CHyB;yBII;KJoB"}},"type":"js/module"}]}