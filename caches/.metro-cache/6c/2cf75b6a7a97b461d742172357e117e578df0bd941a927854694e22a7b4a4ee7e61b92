{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"]}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachHourOfInterval = eachHourOfInterval;\n  var _normalizeInterval2 = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _constructFrom = require(_dependencyMap[1], \"./constructFrom.js\");\n  /**\n   * The {@link eachHourOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachHourOfInterval} function result type.\n   * Resolves to the appropriate date type based on inputs.\n   */\n\n  /**\n   * @name eachHourOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of hours within the specified time interval.\n   *\n   * @description\n   * Return the array of hours within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of hours from the hour of the interval start to the hour of the interval end\n   *\n   * @example\n   * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00\n   * const result = eachHourOfInterval({\n   *   start: new Date(2014, 9, 6, 12),\n   *   end: new Date(2014, 9, 6, 15)\n   * });\n   * //=> [\n   * //   Mon Oct 06 2014 12:00:00,\n   * //   Mon Oct 06 2014 13:00:00,\n   * //   Mon Oct 06 2014 14:00:00,\n   * //   Mon Oct 06 2014 15:00:00\n   * // ]\n   */\n  function eachHourOfInterval(interval, options) {\n    var _normalizeInterval = (0, _normalizeInterval2.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    date.setMinutes(0, 0, 0);\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFrom.constructFrom)(start, date));\n      date.setHours(date.getHours() + step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachHourOfInterval;\n});","lineCount":71,"map":[[7,2,1,0],[7,6,1,0,"_normalizeInterval2"],[7,25,1,0],[7,28,1,0,"require"],[7,35,1,0],[7,36,1,0,"_dependencyMap"],[7,50,1,0],[8,2,2,0],[8,6,2,0,"_constructFrom"],[8,20,2,0],[8,23,2,0,"require"],[8,30,2,0],[8,31,2,0,"_dependencyMap"],[8,45,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[18,2,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,2,42,7],[47,11,42,16,"eachHourOfInterval"],[47,29,42,34,"eachHourOfInterval"],[47,30,42,35,"interval"],[47,38,42,43],[47,40,42,45,"options"],[47,47,42,52],[47,49,42,54],[48,4,43,2],[48,8,43,2,"_normalizeInterval"],[48,26,43,2],[48,29,43,25],[48,33,43,25,"normalizeInterval"],[48,70,43,42],[48,72,43,43,"options"],[48,79,43,50],[48,81,43,52,"in"],[48,83,43,54],[48,85,43,56,"interval"],[48,93,43,64],[48,94,43,65],[49,6,43,10,"start"],[49,11,43,15],[49,14,43,15,"_normalizeInterval"],[49,32,43,15],[49,33,43,10,"start"],[49,38,43,15],[50,6,43,17,"end"],[50,9,43,20],[50,12,43,20,"_normalizeInterval"],[50,30,43,20],[50,31,43,17,"end"],[50,34,43,20],[51,4,45,2],[51,8,45,6,"reversed"],[51,16,45,14],[51,19,45,17],[51,20,45,18,"start"],[51,25,45,23],[51,28,45,26],[51,29,45,27,"end"],[51,32,45,30],[52,4,46,2],[52,8,46,8,"endTime"],[52,15,46,15],[52,18,46,18,"reversed"],[52,26,46,26],[52,29,46,29],[52,30,46,30,"start"],[52,35,46,35],[52,38,46,38],[52,39,46,39,"end"],[52,42,46,42],[53,4,47,2],[53,8,47,8,"date"],[53,12,47,12],[53,15,47,15,"reversed"],[53,23,47,23],[53,26,47,26,"end"],[53,29,47,29],[53,32,47,32,"start"],[53,37,47,37],[54,4,48,2,"date"],[54,8,48,6],[54,9,48,7,"setMinutes"],[54,19,48,17],[54,20,48,18],[54,21,48,19],[54,23,48,21],[54,24,48,22],[54,26,48,24],[54,27,48,25],[54,28,48,26],[55,4,50,2],[55,8,50,6,"step"],[55,12,50,10],[55,15,50,13,"options"],[55,22,50,20],[55,24,50,22,"step"],[55,28,50,26],[55,32,50,30],[55,33,50,31],[56,4,51,2],[56,8,51,6],[56,9,51,7,"step"],[56,13,51,11],[56,15,51,13],[56,22,51,20],[56,24,51,22],[57,4,52,2],[57,8,52,6,"step"],[57,12,52,10],[57,15,52,13],[57,16,52,14],[57,18,52,16],[58,6,53,4,"step"],[58,10,53,8],[58,13,53,11],[58,14,53,12,"step"],[58,18,53,16],[59,6,54,4,"reversed"],[59,14,54,12],[59,17,54,15],[59,18,54,16,"reversed"],[59,26,54,24],[60,4,55,2],[61,4,57,2],[61,8,57,8,"dates"],[61,13,57,13],[61,16,57,16],[61,18,57,18],[62,4,59,2],[62,11,59,9],[62,12,59,10,"date"],[62,16,59,14],[62,20,59,18,"endTime"],[62,27,59,25],[62,29,59,27],[63,6,60,4,"dates"],[63,11,60,9],[63,12,60,10,"push"],[63,16,60,14],[63,17,60,15],[63,21,60,15,"constructFrom"],[63,49,60,28],[63,51,60,29,"start"],[63,56,60,34],[63,58,60,36,"date"],[63,62,60,40],[63,63,60,41],[63,64,60,42],[64,6,61,4,"date"],[64,10,61,8],[64,11,61,9,"setHours"],[64,19,61,17],[64,20,61,18,"date"],[64,24,61,22],[64,25,61,23,"getHours"],[64,33,61,31],[64,34,61,32],[64,35,61,33],[64,38,61,36,"step"],[64,42,61,40],[64,43,61,41],[65,4,62,2],[66,4,64,2],[66,11,64,9,"reversed"],[66,19,64,17],[66,22,64,20,"dates"],[66,27,64,25],[66,28,64,26,"reverse"],[66,35,64,33],[66,36,64,34],[66,37,64,35],[66,40,64,38,"dates"],[66,45,64,43],[67,2,65,0],[69,2,67,0],[70,2,67,0],[70,6,67,0,"_default"],[70,14,67,0],[70,17,67,0,"exports"],[70,24,67,0],[70,25,67,0,"default"],[70,32,67,0],[70,35,68,15,"eachHourOfInterval"],[70,53,68,33],[71,0,68,33],[71,3]],"functionMap":{"names":["<global>","eachHourOfInterval"],"mappings":"AAA;OCyC;CDuB"}},"type":"js/module"}]}