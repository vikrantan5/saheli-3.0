{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameYear = isSameYear;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _normalizeDates3 = require(_dependencyMap[2], \"./_lib/normalizeDates.js\");\n  /**\n   * The {@link isSameYear} function options.\n   */\n\n  /**\n   * @name isSameYear\n   * @category Year Helpers\n   * @summary Are the given dates in the same year?\n   *\n   * @description\n   * Are the given dates in the same year?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same year\n   *\n   * @example\n   * // Are 2 September 2014 and 25 September 2014 in the same year?\n   * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n   * //=> true\n   */\n  function isSameYear(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _normalizeDates3.normalizeDates)(options?.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    return laterDate_.getFullYear() === earlierDate_.getFullYear();\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameYear;\n});","lineCount":43,"map":[[9,2,1,0],[9,6,1,0,"_normalizeDates3"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[14,2,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,2,26,7],[33,11,26,16,"isSameYear"],[33,21,26,26,"isSameYear"],[33,22,26,27,"laterDate"],[33,31,26,36],[33,33,26,38,"earlierDate"],[33,44,26,49],[33,46,26,51,"options"],[33,53,26,58],[33,55,26,60],[34,4,27,2],[34,8,27,2,"_normalizeDates"],[34,23,27,2],[34,26,27,37],[34,30,27,37,"normalizeDates"],[34,61,27,51],[34,63,28,4,"options"],[34,70,28,11],[34,72,28,13,"in"],[34,74,28,15],[34,76,29,4,"laterDate"],[34,85,29,13],[34,87,30,4,"earlierDate"],[34,98,31,2],[34,99,31,3],[35,6,31,3,"_normalizeDates2"],[35,22,31,3],[35,29,31,3,"_slicedToArray2"],[35,44,31,3],[35,45,31,3,"default"],[35,52,31,3],[35,54,31,3,"_normalizeDates"],[35,69,31,3],[36,6,27,9,"laterDate_"],[36,16,27,19],[36,19,27,19,"_normalizeDates2"],[36,35,27,19],[37,6,27,21,"earlierDate_"],[37,18,27,33],[37,21,27,33,"_normalizeDates2"],[37,37,27,33],[38,4,32,2],[38,11,32,9,"laterDate_"],[38,21,32,19],[38,22,32,20,"getFullYear"],[38,33,32,31],[38,34,32,32],[38,35,32,33],[38,40,32,38,"earlierDate_"],[38,52,32,50],[38,53,32,51,"getFullYear"],[38,64,32,62],[38,65,32,63],[38,66,32,64],[39,2,33,0],[41,2,35,0],[42,2,35,0],[42,6,35,0,"_default"],[42,14,35,0],[42,17,35,0,"exports"],[42,24,35,0],[42,25,35,0,"default"],[42,32,35,0],[42,35,36,15,"isSameYear"],[42,45,36,25],[43,0,36,25],[43,3]],"functionMap":{"names":["<global>","isSameYear"],"mappings":"AAA;OCyB;CDO"}},"type":"js/module"}]}