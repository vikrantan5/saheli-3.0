{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.getISODay = getISODay;\n  var _toDate = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The {@link getISODay} function options.\n   */\n\n  /**\n   * @name getISODay\n   * @category Weekday Helpers\n   * @summary Get the day of the ISO week of the given date.\n   *\n   * @description\n   * Get the day of the ISO week of the given date,\n   * which is 7 for Sunday, 1 for Monday etc.\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @param date - The given date\n   * @param options - An object with options\n   *\n   * @returns The day of ISO week\n   *\n   * @example\n   * // Which day of the ISO week is 26 February 2012?\n   * const result = getISODay(new Date(2012, 1, 26))\n   * //=> 7\n   */\n  function getISODay(date, options) {\n    var day = (0, _toDate.toDate)(date, options?.in).getDay();\n    return day === 0 ? 7 : day;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = getISODay;\n});","lineCount":40,"map":[[7,2,1,0],[7,6,1,0,"_toDate"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,2,28,7],[33,11,28,16,"getISODay"],[33,20,28,25,"getISODay"],[33,21,28,26,"date"],[33,25,28,30],[33,27,28,32,"options"],[33,34,28,39],[33,36,28,41],[34,4,29,2],[34,8,29,8,"day"],[34,11,29,11],[34,14,29,14],[34,18,29,14,"toDate"],[34,32,29,20],[34,34,29,21,"date"],[34,38,29,25],[34,40,29,27,"options"],[34,47,29,34],[34,49,29,36,"in"],[34,51,29,38],[34,52,29,39],[34,53,29,40,"getDay"],[34,59,29,46],[34,60,29,47],[34,61,29,48],[35,4,30,2],[35,11,30,9,"day"],[35,14,30,12],[35,19,30,17],[35,20,30,18],[35,23,30,21],[35,24,30,22],[35,27,30,25,"day"],[35,30,30,28],[36,2,31,0],[38,2,33,0],[39,2,33,0],[39,6,33,0,"_default"],[39,14,33,0],[39,17,33,0,"exports"],[39,24,33,0],[39,25,33,0,"default"],[39,32,33,0],[39,35,34,15,"getISODay"],[39,44,34,24],[40,0,34,24],[40,3]],"functionMap":{"names":["<global>","getISODay"],"mappings":"AAA;OC2B;CDG"}},"type":"js/module"}]}