{"dependencies":[{"name":"./getWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"JQpCU31TSQ7VLZQh7BLQCEFtbGo=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":37,"index":77}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.setWeek = setWeek;\n  var _getWeek = require(_dependencyMap[0], \"./getWeek.js\");\n  var _toDate = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link setWeek} function options.\n   */\n\n  /**\n   * @name setWeek\n   * @category Week Helpers\n   * @summary Set the local week to the given date.\n   *\n   * @description\n   * Set the local week to the given date, saving the weekday number.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param week - The week of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the local week set\n   *\n   * @example\n   * // Set the 1st week to 2 January 2005 with default options:\n   * const result = setWeek(new Date(2005, 0, 2), 1)\n   * //=> Sun Dec 26 2004 00:00:00\n   *\n   * @example\n   * // Set the 1st week to 2 January 2005,\n   * // if Monday is the first day of the week,\n   * // and the first week of the year always contains 4 January:\n   * const result = setWeek(new Date(2005, 0, 2), 1, {\n   *   weekStartsOn: 1,\n   *   firstWeekContainsDate: 4\n   * })\n   * //=> Sun Jan 4 2004 00:00:00\n   */\n  function setWeek(date, week, options) {\n    var date_ = (0, _toDate.toDate)(date, options?.in);\n    var diff = (0, _getWeek.getWeek)(date_, options) - week;\n    date_.setDate(date_.getDate() - diff * 7);\n    return (0, _toDate.toDate)(date_, options?.in);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = setWeek;\n});","lineCount":60,"map":[[7,2,1,0],[7,6,1,0,"_getWeek"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,6,2,0,"_toDate"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,2,46,7],[51,11,46,16,"setWeek"],[51,18,46,23,"setWeek"],[51,19,46,24,"date"],[51,23,46,28],[51,25,46,30,"week"],[51,29,46,34],[51,31,46,36,"options"],[51,38,46,43],[51,40,46,45],[52,4,47,2],[52,8,47,8,"date_"],[52,13,47,13],[52,16,47,16],[52,20,47,16,"toDate"],[52,34,47,22],[52,36,47,23,"date"],[52,40,47,27],[52,42,47,29,"options"],[52,49,47,36],[52,51,47,38,"in"],[52,53,47,40],[52,54,47,41],[53,4,48,2],[53,8,48,8,"diff"],[53,12,48,12],[53,15,48,15],[53,19,48,15,"getWeek"],[53,35,48,22],[53,37,48,23,"date_"],[53,42,48,28],[53,44,48,30,"options"],[53,51,48,37],[53,52,48,38],[53,55,48,41,"week"],[53,59,48,45],[54,4,49,2,"date_"],[54,9,49,7],[54,10,49,8,"setDate"],[54,17,49,15],[54,18,49,16,"date_"],[54,23,49,21],[54,24,49,22,"getDate"],[54,31,49,29],[54,32,49,30],[54,33,49,31],[54,36,49,34,"diff"],[54,40,49,38],[54,43,49,41],[54,44,49,42],[54,45,49,43],[55,4,50,2],[55,11,50,9],[55,15,50,9,"toDate"],[55,29,50,15],[55,31,50,16,"date_"],[55,36,50,21],[55,38,50,23,"options"],[55,45,50,30],[55,47,50,32,"in"],[55,49,50,34],[55,50,50,35],[56,2,51,0],[58,2,53,0],[59,2,53,0],[59,6,53,0,"_default"],[59,14,53,0],[59,17,53,0,"exports"],[59,24,53,0],[59,25,53,0,"default"],[59,32,53,0],[59,35,54,15,"setWeek"],[59,42,54,22],[60,0,54,22],[60,3]],"functionMap":{"names":["<global>","setWeek"],"mappings":"AAA;OC6C;CDK"}},"type":"js/module"}]}