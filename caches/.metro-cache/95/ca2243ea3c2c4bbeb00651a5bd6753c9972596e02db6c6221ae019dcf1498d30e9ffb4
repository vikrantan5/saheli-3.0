{"dependencies":[{"name":"./core","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":37,"index":123},"end":{"line":4,"column":54,"index":140}}],"key":"FXN3sf/EjRB4E2rwdgFcvRpWg7U=","exportNames":["*"]}},{"name":"./cipher-core","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":56,"index":142},"end":{"line":4,"column":80,"index":166}}],"key":"hypdNrOdljBpZaOO94LajVhKIC4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  ;\n  (function (root, factory, undef) {\n    if (typeof exports === \"object\") {\n      // CommonJS\n      module.exports = exports = factory(require(_dependencyMap[0], \"./core\"), require(_dependencyMap[1], \"./cipher-core\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      // AMD\n      define([\"./core\", \"./cipher-core\"], factory);\n    } else {\n      // Global (browser)\n      factory(root.CryptoJS);\n    }\n  })(this, function (CryptoJS) {\n    /**\n     * Cipher Feedback block mode.\n     */\n    CryptoJS.mode.CFB = function () {\n      var CFB = CryptoJS.lib.BlockCipherMode.extend();\n      CFB.Encryptor = CFB.extend({\n        processBlock: function (words, offset) {\n          // Shortcuts\n          var cipher = this._cipher;\n          var blockSize = cipher.blockSize;\n          generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n          // Remember this block to use with next block\n          this._prevBlock = words.slice(offset, offset + blockSize);\n        }\n      });\n      CFB.Decryptor = CFB.extend({\n        processBlock: function (words, offset) {\n          // Shortcuts\n          var cipher = this._cipher;\n          var blockSize = cipher.blockSize;\n\n          // Remember this block to use with next block\n          var thisBlock = words.slice(offset, offset + blockSize);\n          generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n          // This block becomes the previous block\n          this._prevBlock = thisBlock;\n        }\n      });\n      function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n        var keystream;\n\n        // Shortcut\n        var iv = this._iv;\n\n        // Generate keystream\n        if (iv) {\n          keystream = iv.slice(0);\n\n          // Remove IV for subsequent blocks\n          this._iv = undefined;\n        } else {\n          keystream = this._prevBlock;\n        }\n        cipher.encryptBlock(keystream, 0);\n\n        // Encrypt\n        for (var i = 0; i < blockSize; i++) {\n          words[offset + i] ^= keystream[i];\n        }\n      }\n      return CFB;\n    }();\n    return CryptoJS.mode.CFB;\n  });\n});","lineCount":71,"map":[[2,2,1,0],[3,2,1,2],[3,13,1,12,"root"],[3,17,1,16],[3,19,1,18,"factory"],[3,26,1,25],[3,28,1,27,"undef"],[3,33,1,32],[3,35,1,34],[4,4,2,1],[4,8,2,5],[4,15,2,12,"exports"],[4,22,2,19],[4,27,2,24],[4,35,2,32],[4,37,2,34],[5,6,3,2],[6,6,4,2,"module"],[6,12,4,8],[6,13,4,9,"exports"],[6,20,4,16],[6,23,4,19,"exports"],[6,30,4,26],[6,33,4,29,"factory"],[6,40,4,36],[6,41,4,37,"require"],[6,48,4,44],[6,49,4,44,"_dependencyMap"],[6,63,4,44],[6,76,4,53],[6,77,4,54],[6,79,4,56,"require"],[6,86,4,63],[6,87,4,63,"_dependencyMap"],[6,101,4,63],[6,121,4,79],[6,122,4,80],[6,123,4,81],[7,4,5,1],[7,5,5,2],[7,11,6,6],[7,15,6,10],[7,22,6,17,"define"],[7,28,6,23],[7,33,6,28],[7,43,6,38],[7,47,6,42,"define"],[7,53,6,48],[7,54,6,49,"amd"],[7,57,6,52],[7,59,6,54],[8,6,7,2],[9,6,8,2,"define"],[9,12,8,8],[9,13,8,9],[9,14,8,10],[9,22,8,18],[9,24,8,20],[9,39,8,35],[9,40,8,36],[9,42,8,38,"factory"],[9,49,8,45],[9,50,8,46],[10,4,9,1],[10,5,9,2],[10,11,10,6],[11,6,11,2],[12,6,12,2,"factory"],[12,13,12,9],[12,14,12,10,"root"],[12,18,12,14],[12,19,12,15,"CryptoJS"],[12,27,12,23],[12,28,12,24],[13,4,13,1],[14,2,14,0],[14,3,14,1],[14,5,14,2],[14,9,14,6],[14,11,14,8],[14,21,14,18,"CryptoJS"],[14,29,14,26],[14,31,14,28],[15,4,16,1],[16,0,17,0],[17,0,18,0],[18,4,19,1,"CryptoJS"],[18,12,19,9],[18,13,19,10,"mode"],[18,17,19,14],[18,18,19,15,"CFB"],[18,21,19,18],[18,24,19,22],[18,36,19,34],[19,6,20,5],[19,10,20,9,"CFB"],[19,13,20,12],[19,16,20,15,"CryptoJS"],[19,24,20,23],[19,25,20,24,"lib"],[19,28,20,27],[19,29,20,28,"BlockCipherMode"],[19,44,20,43],[19,45,20,44,"extend"],[19,51,20,50],[19,52,20,51],[19,53,20,52],[20,6,22,5,"CFB"],[20,9,22,8],[20,10,22,9,"Encryptor"],[20,19,22,18],[20,22,22,21,"CFB"],[20,25,22,24],[20,26,22,25,"extend"],[20,32,22,31],[20,33,22,32],[21,8,23,9,"processBlock"],[21,20,23,21],[21,22,23,23],[21,31,23,23,"processBlock"],[21,32,23,33,"words"],[21,37,23,38],[21,39,23,40,"offset"],[21,45,23,46],[21,47,23,48],[22,10,24,13],[23,10,25,13],[23,14,25,17,"cipher"],[23,20,25,23],[23,23,25,26],[23,27,25,30],[23,28,25,31,"_cipher"],[23,35,25,38],[24,10,26,13],[24,14,26,17,"blockSize"],[24,23,26,26],[24,26,26,29,"cipher"],[24,32,26,35],[24,33,26,36,"blockSize"],[24,42,26,45],[25,10,28,13,"generateKeystreamAndEncrypt"],[25,37,28,40],[25,38,28,41,"call"],[25,42,28,45],[25,43,28,46],[25,47,28,50],[25,49,28,52,"words"],[25,54,28,57],[25,56,28,59,"offset"],[25,62,28,65],[25,64,28,67,"blockSize"],[25,73,28,76],[25,75,28,78,"cipher"],[25,81,28,84],[25,82,28,85],[27,10,30,13],[28,10,31,13],[28,14,31,17],[28,15,31,18,"_prevBlock"],[28,25,31,28],[28,28,31,31,"words"],[28,33,31,36],[28,34,31,37,"slice"],[28,39,31,42],[28,40,31,43,"offset"],[28,46,31,49],[28,48,31,51,"offset"],[28,54,31,57],[28,57,31,60,"blockSize"],[28,66,31,69],[28,67,31,70],[29,8,32,9],[30,6,33,5],[30,7,33,6],[30,8,33,7],[31,6,35,5,"CFB"],[31,9,35,8],[31,10,35,9,"Decryptor"],[31,19,35,18],[31,22,35,21,"CFB"],[31,25,35,24],[31,26,35,25,"extend"],[31,32,35,31],[31,33,35,32],[32,8,36,9,"processBlock"],[32,20,36,21],[32,22,36,23],[32,31,36,23,"processBlock"],[32,32,36,33,"words"],[32,37,36,38],[32,39,36,40,"offset"],[32,45,36,46],[32,47,36,48],[33,10,37,13],[34,10,38,13],[34,14,38,17,"cipher"],[34,20,38,23],[34,23,38,26],[34,27,38,30],[34,28,38,31,"_cipher"],[34,35,38,38],[35,10,39,13],[35,14,39,17,"blockSize"],[35,23,39,26],[35,26,39,29,"cipher"],[35,32,39,35],[35,33,39,36,"blockSize"],[35,42,39,45],[37,10,41,13],[38,10,42,13],[38,14,42,17,"thisBlock"],[38,23,42,26],[38,26,42,29,"words"],[38,31,42,34],[38,32,42,35,"slice"],[38,37,42,40],[38,38,42,41,"offset"],[38,44,42,47],[38,46,42,49,"offset"],[38,52,42,55],[38,55,42,58,"blockSize"],[38,64,42,67],[38,65,42,68],[39,10,44,13,"generateKeystreamAndEncrypt"],[39,37,44,40],[39,38,44,41,"call"],[39,42,44,45],[39,43,44,46],[39,47,44,50],[39,49,44,52,"words"],[39,54,44,57],[39,56,44,59,"offset"],[39,62,44,65],[39,64,44,67,"blockSize"],[39,73,44,76],[39,75,44,78,"cipher"],[39,81,44,84],[39,82,44,85],[41,10,46,13],[42,10,47,13],[42,14,47,17],[42,15,47,18,"_prevBlock"],[42,25,47,28],[42,28,47,31,"thisBlock"],[42,37,47,40],[43,8,48,9],[44,6,49,5],[44,7,49,6],[44,8,49,7],[45,6,51,5],[45,15,51,14,"generateKeystreamAndEncrypt"],[45,42,51,41,"generateKeystreamAndEncrypt"],[45,43,51,42,"words"],[45,48,51,47],[45,50,51,49,"offset"],[45,56,51,55],[45,58,51,57,"blockSize"],[45,67,51,66],[45,69,51,68,"cipher"],[45,75,51,74],[45,77,51,76],[46,8,52,9],[46,12,52,13,"keystream"],[46,21,52,22],[48,8,54,9],[49,8,55,9],[49,12,55,13,"iv"],[49,14,55,15],[49,17,55,18],[49,21,55,22],[49,22,55,23,"_iv"],[49,25,55,26],[51,8,57,9],[52,8,58,9],[52,12,58,13,"iv"],[52,14,58,15],[52,16,58,17],[53,10,59,13,"keystream"],[53,19,59,22],[53,22,59,25,"iv"],[53,24,59,27],[53,25,59,28,"slice"],[53,30,59,33],[53,31,59,34],[53,32,59,35],[53,33,59,36],[55,10,61,13],[56,10,62,13],[56,14,62,17],[56,15,62,18,"_iv"],[56,18,62,21],[56,21,62,24,"undefined"],[56,30,62,33],[57,8,63,9],[57,9,63,10],[57,15,63,16],[58,10,64,13,"keystream"],[58,19,64,22],[58,22,64,25],[58,26,64,29],[58,27,64,30,"_prevBlock"],[58,37,64,40],[59,8,65,9],[60,8,66,9,"cipher"],[60,14,66,15],[60,15,66,16,"encryptBlock"],[60,27,66,28],[60,28,66,29,"keystream"],[60,37,66,38],[60,39,66,40],[60,40,66,41],[60,41,66,42],[62,8,68,9],[63,8,69,9],[63,13,69,14],[63,17,69,18,"i"],[63,18,69,19],[63,21,69,22],[63,22,69,23],[63,24,69,25,"i"],[63,25,69,26],[63,28,69,29,"blockSize"],[63,37,69,38],[63,39,69,40,"i"],[63,40,69,41],[63,42,69,43],[63,44,69,45],[64,10,70,13,"words"],[64,15,70,18],[64,16,70,19,"offset"],[64,22,70,25],[64,25,70,28,"i"],[64,26,70,29],[64,27,70,30],[64,31,70,34,"keystream"],[64,40,70,43],[64,41,70,44,"i"],[64,42,70,45],[64,43,70,46],[65,8,71,9],[66,6,72,5],[67,6,74,5],[67,13,74,12,"CFB"],[67,16,74,15],[68,4,75,1],[68,5,75,2],[68,6,75,3],[68,7,75,5],[69,4,78,1],[69,11,78,8,"CryptoJS"],[69,19,78,16],[69,20,78,17,"mode"],[69,24,78,21],[69,25,78,22,"CFB"],[69,28,78,25],[70,2,80,0],[70,3,80,1],[70,4,80,2],[71,0,80,4],[71,3]],"functionMap":{"names":["<global>","<anonymous>","CFB.extend$argument_0.processBlock","generateKeystreamAndEncrypt"],"mappings":"AAA,EC;CDa,OC;uBCS;UDS;uBCI;UDY;KEG;MFqB;CDQ"}},"type":"js/module"}]}