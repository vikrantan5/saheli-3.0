{"dependencies":[{"name":"./constructNow.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"KxtQUZbfjGqP9AepKKDBoJJ/4sk=","exportNames":["*"]}},{"name":"./isSameHour.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":45,"index":95}}],"key":"rmw6ZPND6tZ3C3xTIiyPRGI+c1Y=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":96},"end":{"line":3,"column":37,"index":133}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isThisHour = isThisHour;\n  var _constructNow = require(_dependencyMap[0], \"./constructNow.js\");\n  var _isSameHour = require(_dependencyMap[1], \"./isSameHour.js\");\n  var _toDate = require(_dependencyMap[2], \"./toDate.js\");\n  /**\n   * The {@link isThisHour} function options.\n   */\n\n  /**\n   * @name isThisHour\n   * @category Hour Helpers\n   * @summary Is the given date in the same hour as the current date?\n   * @pure false\n   *\n   * @description\n   * Is the given date in the same hour as the current date?\n   *\n   * @param date - The date to check\n   * @param options - An object with options\n   *\n   * @returns The date is in this hour\n   *\n   * @example\n   * // If now is 25 September 2014 18:30:15.500,\n   * // is 25 September 2014 18:00:00 in this hour?\n   * const result = isThisHour(new Date(2014, 8, 25, 18))\n   * //=> true\n   */\n  function isThisHour(date, options) {\n    return (0, _isSameHour.isSameHour)((0, _toDate.toDate)(date, options?.in), (0, _constructNow.constructNow)(options?.in || date));\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isThisHour;\n});","lineCount":40,"map":[[7,2,1,0],[7,6,1,0,"_constructNow"],[7,19,1,0],[7,22,1,0,"require"],[7,29,1,0],[7,30,1,0,"_dependencyMap"],[7,44,1,0],[8,2,2,0],[8,6,2,0,"_isSameHour"],[8,17,2,0],[8,20,2,0,"require"],[8,27,2,0],[8,28,2,0,"_dependencyMap"],[8,42,2,0],[9,2,3,0],[9,6,3,0,"_toDate"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,2,29,7],[34,11,29,16,"isThisHour"],[34,21,29,26,"isThisHour"],[34,22,29,27,"date"],[34,26,29,31],[34,28,29,33,"options"],[34,35,29,40],[34,37,29,42],[35,4,30,2],[35,11,30,9],[35,15,30,9,"isSameHour"],[35,37,30,19],[35,39,31,4],[35,43,31,4,"toDate"],[35,57,31,10],[35,59,31,11,"date"],[35,63,31,15],[35,65,31,17,"options"],[35,72,31,24],[35,74,31,26,"in"],[35,76,31,28],[35,77,31,29],[35,79,32,4],[35,83,32,4,"constructNow"],[35,109,32,16],[35,111,32,17,"options"],[35,118,32,24],[35,120,32,26,"in"],[35,122,32,28],[35,126,32,32,"date"],[35,130,32,36],[35,131,33,2],[35,132,33,3],[36,2,34,0],[38,2,36,0],[39,2,36,0],[39,6,36,0,"_default"],[39,14,36,0],[39,17,36,0,"exports"],[39,24,36,0],[39,25,36,0,"default"],[39,32,36,0],[39,35,37,15,"isThisHour"],[39,45,37,25],[40,0,37,25],[40,3]],"functionMap":{"names":["<global>","isThisHour"],"mappings":"AAA;OC4B;CDK"}},"type":"js/module"}]}