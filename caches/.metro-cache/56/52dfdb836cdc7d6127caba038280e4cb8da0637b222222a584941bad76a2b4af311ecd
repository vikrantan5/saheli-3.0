{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}},{"name":"./startOfDay.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":45,"index":104}}],"key":"3NuIZRZJAEuB843QJJHZ3hLdJbc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameDay = isSameDay;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _normalizeDates3 = require(_dependencyMap[2], \"./_lib/normalizeDates.js\");\n  var _startOfDay = require(_dependencyMap[3], \"./startOfDay.js\");\n  /**\n   * The {@link isSameDay} function options.\n   */\n\n  /**\n   * @name isSameDay\n   * @category Day Helpers\n   * @summary Are the given dates in the same day (and year and month)?\n   *\n   * @description\n   * Are the given dates in the same day (and year and month)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same day (and year and month)\n   *\n   * @example\n   * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n   * //=> true\n   *\n   * @example\n   * // Are 4 September and 4 October in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n   * //=> false\n   *\n   * @example\n   * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n   * //=> false\n   */\n  function isSameDay(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _normalizeDates3.normalizeDates)(options?.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      dateLeft_ = _normalizeDates2[0],\n      dateRight_ = _normalizeDates2[1];\n    return +(0, _startOfDay.startOfDay)(dateLeft_) === +(0, _startOfDay.startOfDay)(dateRight_);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameDay;\n});","lineCount":54,"map":[[9,2,1,0],[9,6,1,0,"_normalizeDates3"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,2,0],[10,6,2,0,"_startOfDay"],[10,17,2,0],[10,20,2,0,"require"],[10,27,2,0],[10,28,2,0,"_dependencyMap"],[10,42,2,0],[11,2,4,0],[12,0,5,0],[13,0,6,0],[15,2,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,2,37,7],[44,11,37,16,"isSameDay"],[44,20,37,25,"isSameDay"],[44,21,37,26,"laterDate"],[44,30,37,35],[44,32,37,37,"earlierDate"],[44,43,37,48],[44,45,37,50,"options"],[44,52,37,57],[44,54,37,59],[45,4,38,2],[45,8,38,2,"_normalizeDates"],[45,23,38,2],[45,26,38,34],[45,30,38,34,"normalizeDates"],[45,61,38,48],[45,63,39,4,"options"],[45,70,39,11],[45,72,39,13,"in"],[45,74,39,15],[45,76,40,4,"laterDate"],[45,85,40,13],[45,87,41,4,"earlierDate"],[45,98,42,2],[45,99,42,3],[46,6,42,3,"_normalizeDates2"],[46,22,42,3],[46,29,42,3,"_slicedToArray2"],[46,44,42,3],[46,45,42,3,"default"],[46,52,42,3],[46,54,42,3,"_normalizeDates"],[46,69,42,3],[47,6,38,9,"dateLeft_"],[47,15,38,18],[47,18,38,18,"_normalizeDates2"],[47,34,38,18],[48,6,38,20,"dateRight_"],[48,16,38,30],[48,19,38,30,"_normalizeDates2"],[48,35,38,30],[49,4,43,2],[49,11,43,9],[49,12,43,10],[49,16,43,10,"startOfDay"],[49,38,43,20],[49,40,43,21,"dateLeft_"],[49,49,43,30],[49,50,43,31],[49,55,43,36],[49,56,43,37],[49,60,43,37,"startOfDay"],[49,82,43,47],[49,84,43,48,"dateRight_"],[49,94,43,58],[49,95,43,59],[50,2,44,0],[52,2,46,0],[53,2,46,0],[53,6,46,0,"_default"],[53,14,46,0],[53,17,46,0,"exports"],[53,24,46,0],[53,25,46,0,"default"],[53,32,46,0],[53,35,47,15,"isSameDay"],[53,44,47,24],[54,0,47,24],[54,3]],"functionMap":{"names":["<global>","isSameDay"],"mappings":"AAA;OCoC;CDO"}},"type":"js/module"}]}