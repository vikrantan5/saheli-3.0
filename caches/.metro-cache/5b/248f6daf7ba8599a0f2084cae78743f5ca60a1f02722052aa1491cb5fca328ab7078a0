{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":37,"index":89}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addMilliseconds = addMilliseconds;\n  exports.default = void 0;\n  var _constructFrom = require(_dependencyMap[0], \"./constructFrom.js\");\n  var _toDate = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link addMilliseconds} function options.\n   */\n\n  /**\n   * @name addMilliseconds\n   * @category Millisecond Helpers\n   * @summary Add the specified number of milliseconds to the given date.\n   *\n   * @description\n   * Add the specified number of milliseconds to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of milliseconds to be added.\n   * @param options - The options object\n   *\n   * @returns The new date with the milliseconds added\n   *\n   * @example\n   * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n   * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n   * //=> Thu Jul 10 2014 12:45:30.750\n   */\n  function addMilliseconds(date, amount, options) {\n    return (0, _constructFrom.constructFrom)(options?.in || date, +(0, _toDate.toDate)(date) + amount);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = addMilliseconds;\n});","lineCount":41,"map":[[7,2,1,0],[7,6,1,0,"_constructFrom"],[7,20,1,0],[7,23,1,0,"require"],[7,30,1,0],[7,31,1,0,"_dependencyMap"],[7,45,1,0],[8,2,2,0],[8,6,2,0,"_toDate"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,2,30,7],[35,11,30,16,"addMilliseconds"],[35,26,30,31,"addMilliseconds"],[35,27,30,32,"date"],[35,31,30,36],[35,33,30,38,"amount"],[35,39,30,44],[35,41,30,46,"options"],[35,48,30,53],[35,50,30,55],[36,4,31,2],[36,11,31,9],[36,15,31,9,"constructFrom"],[36,43,31,22],[36,45,31,23,"options"],[36,52,31,30],[36,54,31,32,"in"],[36,56,31,34],[36,60,31,38,"date"],[36,64,31,42],[36,66,31,44],[36,67,31,45],[36,71,31,45,"toDate"],[36,85,31,51],[36,87,31,52,"date"],[36,91,31,56],[36,92,31,57],[36,95,31,60,"amount"],[36,101,31,66],[36,102,31,67],[37,2,32,0],[39,2,34,0],[40,2,34,0],[40,6,34,0,"_default"],[40,14,34,0],[40,17,34,0,"exports"],[40,24,34,0],[40,25,34,0,"default"],[40,32,34,0],[40,35,35,15,"addMilliseconds"],[40,50,35,30],[41,0,35,30],[41,3]],"functionMap":{"names":["<global>","addMilliseconds"],"mappings":"AAA;OC6B;CDE"}},"type":"js/module"}]}