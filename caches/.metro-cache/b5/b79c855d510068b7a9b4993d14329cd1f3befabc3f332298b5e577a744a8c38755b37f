{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@ide/backoff","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"B9a/kyy9aP0LgQkY79+QgjlpSv0=","exportNames":["*"]}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":48,"index":107}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":78,"index":186}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"../ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":187},"end":{"line":4,"column":67,"index":254}}],"key":"3RTx8KhSs/2ZB3r9U5DaT+SEuk4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.updateDevicePushTokenAsync = updateDevicePushTokenAsync;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _backoff = require(_dependencyMap[3], \"@ide/backoff\");\n  var Application = _interopRequireWildcard(require(_dependencyMap[4], \"expo-application\"));\n  var _expoModulesCore = require(_dependencyMap[5], \"expo-modules-core\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[6], \"../ServerRegistrationModule\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var updateDevicePushTokenUrl = 'https://exp.host/--/api/v2/push/updateDeviceToken';\n  function updateDevicePushTokenAsync(_x, _x2) {\n    return _updateDevicePushTokenAsync.apply(this, arguments);\n  } // Same as in getExpoPushTokenAsync\n  function _updateDevicePushTokenAsync() {\n    _updateDevicePushTokenAsync = (0, _asyncToGenerator2.default)(function* (signal, token) {\n      var doUpdateDevicePushTokenAsync = /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)(function* (retry) {\n          var _yield$Promise$all = yield Promise.all([shouldUseDevelopmentNotificationService(), getDeviceIdAsync()]),\n            _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 2),\n            development = _yield$Promise$all2[0],\n            deviceId = _yield$Promise$all2[1];\n          var body = {\n            deviceId: deviceId.toLowerCase(),\n            development,\n            deviceToken: token.data,\n            appId: Application.applicationId,\n            type: getTypeOfToken(token)\n          };\n          try {\n            var response = yield fetch(updateDevicePushTokenUrl, {\n              method: 'POST',\n              headers: {\n                'content-type': 'application/json'\n              },\n              body: JSON.stringify(body),\n              signal\n            });\n            // Help debug erroring servers\n            if (!response.ok) {\n              console.debug('[expo-notifications] Error encountered while updating the device push token with the server:', yield response.text());\n            }\n            // Retry if request failed\n            if (!response.ok) {\n              retry();\n            }\n          } catch (error) {\n            // Error returned if the request is aborted should be an 'AbortError'. In\n            // React Native fetch is polyfilled using `whatwg-fetch` which:\n            // - creates `AbortError`s like this\n            //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L505\n            // - which creates exceptions like\n            //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L490-L494\n            if (typeof error === 'object' && error?.name === 'AbortError') {\n              // We don't consider AbortError a failure, it's a sign somewhere else the\n              // request is expected to succeed and we don't need this one, so let's\n              // just return.\n              return;\n            }\n            console.warn('[expo-notifications] Error thrown while updating the device push token with the server:', error);\n            retry();\n          }\n        });\n        return function doUpdateDevicePushTokenAsync(_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      var shouldTry = true;\n      var retry = () => {\n        shouldTry = true;\n      };\n      var retriesCount = 0;\n      var initialBackoff = 500; // 0.5 s\n      var backoffOptions = {\n        maxBackoff: 2 * 60 * 1000 // 2 minutes\n      };\n      var nextBackoffInterval = (0, _backoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n      while (shouldTry && !signal.aborted) {\n        // Will be set to true by `retry` if it's called\n        shouldTry = false;\n        yield doUpdateDevicePushTokenAsync(retry);\n        // Do not wait if we won't retry\n        if (shouldTry && !signal.aborted) {\n          nextBackoffInterval = (0, _backoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n          retriesCount += 1;\n          yield new Promise(resolve => setTimeout(resolve, nextBackoffInterval));\n        }\n      }\n    });\n    return _updateDevicePushTokenAsync.apply(this, arguments);\n  }\n  function getDeviceIdAsync() {\n    return _getDeviceIdAsync.apply(this, arguments);\n  } // Same as in getExpoPushTokenAsync\n  function _getDeviceIdAsync() {\n    _getDeviceIdAsync = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        if (!_ServerRegistrationModule.default.getInstallationIdAsync) {\n          throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n        }\n        return yield _ServerRegistrationModule.default.getInstallationIdAsync();\n      } catch (e) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_DEVICE_ID', `Could not fetch the installation ID of the application: ${e}.`);\n      }\n    });\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  function shouldUseDevelopmentNotificationService() {\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n  function _shouldUseDevelopmentNotificationService() {\n    _shouldUseDevelopmentNotificationService = (0, _asyncToGenerator2.default)(function* () {\n      if (_expoModulesCore.Platform.OS === 'ios') {\n        try {\n          var notificationServiceEnvironment = yield Application.getIosPushNotificationServiceEnvironmentAsync();\n          if (notificationServiceEnvironment === 'development') {\n            return true;\n          }\n        } catch {\n          // We can't do anything here, we'll fallback to false then.\n        }\n      }\n      return false;\n    });\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n});","lineCount":142,"map":[[9,2,1,0],[9,6,1,0,"_backoff"],[9,14,1,0],[9,17,1,0,"require"],[9,24,1,0],[9,25,1,0,"_dependencyMap"],[9,39,1,0],[10,2,2,0],[10,6,2,0,"Application"],[10,17,2,0],[10,20,2,0,"_interopRequireWildcard"],[10,43,2,0],[10,44,2,0,"require"],[10,51,2,0],[10,52,2,0,"_dependencyMap"],[10,66,2,0],[11,2,3,0],[11,6,3,0,"_expoModulesCore"],[11,22,3,0],[11,25,3,0,"require"],[11,32,3,0],[11,33,3,0,"_dependencyMap"],[11,47,3,0],[12,2,4,0],[12,6,4,0,"_ServerRegistrationModule"],[12,31,4,0],[12,34,4,0,"_interopRequireDefault"],[12,56,4,0],[12,57,4,0,"require"],[12,64,4,0],[12,65,4,0,"_dependencyMap"],[12,79,4,0],[13,2,4,67],[13,11,4,67,"_interopRequireWildcard"],[13,35,4,67,"e"],[13,36,4,67],[13,38,4,67,"t"],[13,39,4,67],[13,68,4,67,"WeakMap"],[13,75,4,67],[13,81,4,67,"r"],[13,82,4,67],[13,89,4,67,"WeakMap"],[13,96,4,67],[13,100,4,67,"n"],[13,101,4,67],[13,108,4,67,"WeakMap"],[13,115,4,67],[13,127,4,67,"_interopRequireWildcard"],[13,150,4,67],[13,162,4,67,"_interopRequireWildcard"],[13,163,4,67,"e"],[13,164,4,67],[13,166,4,67,"t"],[13,167,4,67],[13,176,4,67,"t"],[13,177,4,67],[13,181,4,67,"e"],[13,182,4,67],[13,186,4,67,"e"],[13,187,4,67],[13,188,4,67,"__esModule"],[13,198,4,67],[13,207,4,67,"e"],[13,208,4,67],[13,214,4,67,"o"],[13,215,4,67],[13,217,4,67,"i"],[13,218,4,67],[13,220,4,67,"f"],[13,221,4,67],[13,226,4,67,"__proto__"],[13,235,4,67],[13,243,4,67,"default"],[13,250,4,67],[13,252,4,67,"e"],[13,253,4,67],[13,270,4,67,"e"],[13,271,4,67],[13,294,4,67,"e"],[13,295,4,67],[13,320,4,67,"e"],[13,321,4,67],[13,330,4,67,"f"],[13,331,4,67],[13,337,4,67,"o"],[13,338,4,67],[13,341,4,67,"t"],[13,342,4,67],[13,345,4,67,"n"],[13,346,4,67],[13,349,4,67,"r"],[13,350,4,67],[13,358,4,67,"o"],[13,359,4,67],[13,360,4,67,"has"],[13,363,4,67],[13,364,4,67,"e"],[13,365,4,67],[13,375,4,67,"o"],[13,376,4,67],[13,377,4,67,"get"],[13,380,4,67],[13,381,4,67,"e"],[13,382,4,67],[13,385,4,67,"o"],[13,386,4,67],[13,387,4,67,"set"],[13,390,4,67],[13,391,4,67,"e"],[13,392,4,67],[13,394,4,67,"f"],[13,395,4,67],[13,409,4,67,"_t"],[13,411,4,67],[13,415,4,67,"e"],[13,416,4,67],[13,432,4,67,"_t"],[13,434,4,67],[13,441,4,67,"hasOwnProperty"],[13,455,4,67],[13,456,4,67,"call"],[13,460,4,67],[13,461,4,67,"e"],[13,462,4,67],[13,464,4,67,"_t"],[13,466,4,67],[13,473,4,67,"i"],[13,474,4,67],[13,478,4,67,"o"],[13,479,4,67],[13,482,4,67,"Object"],[13,488,4,67],[13,489,4,67,"defineProperty"],[13,503,4,67],[13,508,4,67,"Object"],[13,514,4,67],[13,515,4,67,"getOwnPropertyDescriptor"],[13,539,4,67],[13,540,4,67,"e"],[13,541,4,67],[13,543,4,67,"_t"],[13,545,4,67],[13,552,4,67,"i"],[13,553,4,67],[13,554,4,67,"get"],[13,557,4,67],[13,561,4,67,"i"],[13,562,4,67],[13,563,4,67,"set"],[13,566,4,67],[13,570,4,67,"o"],[13,571,4,67],[13,572,4,67,"f"],[13,573,4,67],[13,575,4,67,"_t"],[13,577,4,67],[13,579,4,67,"i"],[13,580,4,67],[13,584,4,67,"f"],[13,585,4,67],[13,586,4,67,"_t"],[13,588,4,67],[13,592,4,67,"e"],[13,593,4,67],[13,594,4,67,"_t"],[13,596,4,67],[13,607,4,67,"f"],[13,608,4,67],[13,613,4,67,"e"],[13,614,4,67],[13,616,4,67,"t"],[13,617,4,67],[14,2,5,0],[14,6,5,6,"updateDevicePushTokenUrl"],[14,30,5,30],[14,33,5,33],[14,84,5,84],[15,2,5,85],[15,11,6,22,"updateDevicePushTokenAsync"],[15,37,6,48,"updateDevicePushTokenAsync"],[15,38,6,48,"_x"],[15,40,6,48],[15,42,6,48,"_x2"],[15,45,6,48],[16,4,6,48],[16,11,6,48,"_updateDevicePushTokenAsync"],[16,38,6,48],[16,39,6,48,"apply"],[16,44,6,48],[16,51,6,48,"arguments"],[16,60,6,48],[17,2,6,48],[17,4,76,0],[18,2,76,0],[18,11,76,0,"_updateDevicePushTokenAsync"],[18,39,76,0],[19,4,76,0,"_updateDevicePushTokenAsync"],[19,31,76,0],[19,38,76,0,"_asyncToGenerator2"],[19,56,76,0],[19,57,76,0,"default"],[19,64,76,0],[19,66,6,7],[19,77,6,49,"signal"],[19,83,6,55],[19,85,6,57,"token"],[19,90,6,62],[19,92,6,64],[20,6,7,4],[20,10,7,10,"doUpdateDevicePushTokenAsync"],[20,38,7,38],[21,8,7,38],[21,12,7,38,"_ref"],[21,16,7,38],[21,23,7,38,"_asyncToGenerator2"],[21,41,7,38],[21,42,7,38,"default"],[21,49,7,38],[21,51,7,41],[21,62,7,48,"retry"],[21,67,7,53],[21,69,7,58],[22,10,8,8],[22,14,8,8,"_yield$Promise$all"],[22,32,8,8],[22,41,8,46,"Promise"],[22,48,8,53],[22,49,8,54,"all"],[22,52,8,57],[22,53,8,58],[22,54,9,12,"shouldUseDevelopmentNotificationService"],[22,93,9,51],[22,94,9,52],[22,95,9,53],[22,97,10,12,"getDeviceIdAsync"],[22,113,10,28],[22,114,10,29],[22,115,10,30],[22,116,11,9],[22,117,11,10],[23,12,11,10,"_yield$Promise$all2"],[23,31,11,10],[23,38,11,10,"_slicedToArray2"],[23,53,11,10],[23,54,11,10,"default"],[23,61,11,10],[23,63,11,10,"_yield$Promise$all"],[23,81,11,10],[24,12,8,15,"development"],[24,23,8,26],[24,26,8,26,"_yield$Promise$all2"],[24,45,8,26],[25,12,8,28,"deviceId"],[25,20,8,36],[25,23,8,36,"_yield$Promise$all2"],[25,42,8,36],[26,10,12,8],[26,14,12,14,"body"],[26,18,12,18],[26,21,12,21],[27,12,13,12,"deviceId"],[27,20,13,20],[27,22,13,22,"deviceId"],[27,30,13,30],[27,31,13,31,"toLowerCase"],[27,42,13,42],[27,43,13,43],[27,44,13,44],[28,12,14,12,"development"],[28,23,14,23],[29,12,15,12,"deviceToken"],[29,23,15,23],[29,25,15,25,"token"],[29,30,15,30],[29,31,15,31,"data"],[29,35,15,35],[30,12,16,12,"appId"],[30,17,16,17],[30,19,16,19,"Application"],[30,30,16,30],[30,31,16,31,"applicationId"],[30,44,16,44],[31,12,17,12,"type"],[31,16,17,16],[31,18,17,18,"getTypeOfToken"],[31,32,17,32],[31,33,17,33,"token"],[31,38,17,38],[32,10,18,8],[32,11,18,9],[33,10,19,8],[33,14,19,12],[34,12,20,12],[34,16,20,18,"response"],[34,24,20,26],[34,33,20,35,"fetch"],[34,38,20,40],[34,39,20,41,"updateDevicePushTokenUrl"],[34,63,20,65],[34,65,20,67],[35,14,21,16,"method"],[35,20,21,22],[35,22,21,24],[35,28,21,30],[36,14,22,16,"headers"],[36,21,22,23],[36,23,22,25],[37,16,23,20],[37,30,23,34],[37,32,23,36],[38,14,24,16],[38,15,24,17],[39,14,25,16,"body"],[39,18,25,20],[39,20,25,22,"JSON"],[39,24,25,26],[39,25,25,27,"stringify"],[39,34,25,36],[39,35,25,37,"body"],[39,39,25,41],[39,40,25,42],[40,14,26,16,"signal"],[41,12,27,12],[41,13,27,13],[41,14,27,14],[42,12,28,12],[43,12,29,12],[43,16,29,16],[43,17,29,17,"response"],[43,25,29,25],[43,26,29,26,"ok"],[43,28,29,28],[43,30,29,30],[44,14,30,16,"console"],[44,21,30,23],[44,22,30,24,"debug"],[44,27,30,29],[44,28,30,30],[44,122,30,124],[44,130,30,132,"response"],[44,138,30,140],[44,139,30,141,"text"],[44,143,30,145],[44,144,30,146],[44,145,30,147],[44,146,30,148],[45,12,31,12],[46,12,32,12],[47,12,33,12],[47,16,33,16],[47,17,33,17,"response"],[47,25,33,25],[47,26,33,26,"ok"],[47,28,33,28],[47,30,33,30],[48,14,34,16,"retry"],[48,19,34,21],[48,20,34,22],[48,21,34,23],[49,12,35,12],[50,10,36,8],[50,11,36,9],[50,12,37,8],[50,19,37,15,"error"],[50,24,37,20],[50,26,37,22],[51,12,38,12],[52,12,39,12],[53,12,40,12],[54,12,41,12],[55,12,42,12],[56,12,43,12],[57,12,44,12],[57,16,44,16],[57,23,44,23,"error"],[57,28,44,28],[57,33,44,33],[57,41,44,41],[57,45,44,45,"error"],[57,50,44,50],[57,52,44,52,"name"],[57,56,44,56],[57,61,44,61],[57,73,44,73],[57,75,44,75],[58,14,45,16],[59,14,46,16],[60,14,47,16],[61,14,48,16],[62,12,49,12],[63,12,50,12,"console"],[63,19,50,19],[63,20,50,20,"warn"],[63,24,50,24],[63,25,50,25],[63,114,50,114],[63,116,50,116,"error"],[63,121,50,121],[63,122,50,122],[64,12,51,12,"retry"],[64,17,51,17],[64,18,51,18],[64,19,51,19],[65,10,52,8],[66,8,53,4],[66,9,53,5],[67,8,53,5],[67,24,7,10,"doUpdateDevicePushTokenAsync"],[67,52,7,38,"doUpdateDevicePushTokenAsync"],[67,53,7,38,"_x3"],[67,56,7,38],[68,10,7,38],[68,17,7,38,"_ref"],[68,21,7,38],[68,22,7,38,"apply"],[68,27,7,38],[68,34,7,38,"arguments"],[68,43,7,38],[69,8,7,38],[70,6,7,38],[70,9,53,5],[71,6,54,4],[71,10,54,8,"shouldTry"],[71,19,54,17],[71,22,54,20],[71,26,54,24],[72,6,55,4],[72,10,55,10,"retry"],[72,15,55,15],[72,18,55,18,"retry"],[72,19,55,18],[72,24,55,24],[73,8,56,8,"shouldTry"],[73,17,56,17],[73,20,56,20],[73,24,56,24],[74,6,57,4],[74,7,57,5],[75,6,58,4],[75,10,58,8,"retriesCount"],[75,22,58,20],[75,25,58,23],[75,26,58,24],[76,6,59,4],[76,10,59,10,"initialBackoff"],[76,24,59,24],[76,27,59,27],[76,30,59,30],[76,31,59,31],[76,32,59,32],[77,6,60,4],[77,10,60,10,"backoffOptions"],[77,24,60,24],[77,27,60,27],[78,8,61,8,"maxBackoff"],[78,18,61,18],[78,20,61,20],[78,21,61,21],[78,24,61,24],[78,26,61,26],[78,29,61,29],[78,33,61,33],[78,34,61,35],[79,6,62,4],[79,7,62,5],[80,6,63,4],[80,10,63,8,"nextBackoffInterval"],[80,29,63,27],[80,32,63,30],[80,36,63,30,"computeNextBackoffInterval"],[80,71,63,56],[80,73,63,57,"initialBackoff"],[80,87,63,71],[80,89,63,73,"retriesCount"],[80,101,63,85],[80,103,63,87,"backoffOptions"],[80,117,63,101],[80,118,63,102],[81,6,64,4],[81,13,64,11,"shouldTry"],[81,22,64,20],[81,26,64,24],[81,27,64,25,"signal"],[81,33,64,31],[81,34,64,32,"aborted"],[81,41,64,39],[81,43,64,41],[82,8,65,8],[83,8,66,8,"shouldTry"],[83,17,66,17],[83,20,66,20],[83,25,66,25],[84,8,67,8],[84,14,67,14,"doUpdateDevicePushTokenAsync"],[84,42,67,42],[84,43,67,43,"retry"],[84,48,67,48],[84,49,67,49],[85,8,68,8],[86,8,69,8],[86,12,69,12,"shouldTry"],[86,21,69,21],[86,25,69,25],[86,26,69,26,"signal"],[86,32,69,32],[86,33,69,33,"aborted"],[86,40,69,40],[86,42,69,42],[87,10,70,12,"nextBackoffInterval"],[87,29,70,31],[87,32,70,34],[87,36,70,34,"computeNextBackoffInterval"],[87,71,70,60],[87,73,70,61,"initialBackoff"],[87,87,70,75],[87,89,70,77,"retriesCount"],[87,101,70,89],[87,103,70,91,"backoffOptions"],[87,117,70,105],[87,118,70,106],[88,10,71,12,"retriesCount"],[88,22,71,24],[88,26,71,28],[88,27,71,29],[89,10,72,12],[89,16,72,18],[89,20,72,22,"Promise"],[89,27,72,29],[89,28,72,31,"resolve"],[89,35,72,38],[89,39,72,43,"setTimeout"],[89,49,72,53],[89,50,72,54,"resolve"],[89,57,72,61],[89,59,72,63,"nextBackoffInterval"],[89,78,72,82],[89,79,72,83],[89,80,72,84],[90,8,73,8],[91,6,74,4],[92,4,75,0],[92,5,75,1],[93,4,75,1],[93,11,75,1,"_updateDevicePushTokenAsync"],[93,38,75,1],[93,39,75,1,"apply"],[93,44,75,1],[93,51,75,1,"arguments"],[93,60,75,1],[94,2,75,1],[95,2,75,1],[95,11,77,15,"getDeviceIdAsync"],[95,27,77,31,"getDeviceIdAsync"],[95,28,77,31],[96,4,77,31],[96,11,77,31,"_getDeviceIdAsync"],[96,28,77,31],[96,29,77,31,"apply"],[96,34,77,31],[96,41,77,31,"arguments"],[96,50,77,31],[97,2,77,31],[97,4,88,0],[98,2,88,0],[98,11,88,0,"_getDeviceIdAsync"],[98,29,88,0],[99,4,88,0,"_getDeviceIdAsync"],[99,21,88,0],[99,28,88,0,"_asyncToGenerator2"],[99,46,88,0],[99,47,88,0,"default"],[99,54,88,0],[99,56,77,0],[99,69,77,34],[100,6,78,4],[100,10,78,8],[101,8,79,8],[101,12,79,12],[101,13,79,13,"ServerRegistrationModule"],[101,46,79,37],[101,47,79,38,"getInstallationIdAsync"],[101,69,79,60],[101,71,79,62],[102,10,80,12],[102,16,80,18],[102,20,80,22,"UnavailabilityError"],[102,56,80,41],[102,57,80,42],[102,87,80,72],[102,89,80,74],[102,113,80,98],[102,114,80,99],[103,8,81,8],[104,8,82,8],[104,21,82,21,"ServerRegistrationModule"],[104,54,82,45],[104,55,82,46,"getInstallationIdAsync"],[104,77,82,68],[104,78,82,69],[104,79,82,70],[105,6,83,4],[105,7,83,5],[105,8,84,4],[105,15,84,11,"e"],[105,16,84,12],[105,18,84,14],[106,8,85,8],[106,14,85,14],[106,18,85,18,"CodedError"],[106,45,85,28],[106,46,85,29],[106,75,85,58],[106,77,85,60],[106,136,85,119,"e"],[106,137,85,120],[106,140,85,123],[106,141,85,124],[107,6,86,4],[108,4,87,0],[108,5,87,1],[109,4,87,1],[109,11,87,1,"_getDeviceIdAsync"],[109,28,87,1],[109,29,87,1,"apply"],[109,34,87,1],[109,41,87,1,"arguments"],[109,50,87,1],[110,2,87,1],[111,2,89,0],[111,11,89,9,"getTypeOfToken"],[111,25,89,23,"getTypeOfToken"],[111,26,89,24,"devicePushToken"],[111,41,89,39],[111,43,89,41],[112,4,90,4],[112,12,90,12,"devicePushToken"],[112,27,90,27],[112,28,90,28,"type"],[112,32,90,32],[113,6,91,8],[113,11,91,13],[113,16,91,18],[114,8,92,12],[114,15,92,19],[114,21,92,25],[115,6,93,8],[115,11,93,13],[115,20,93,22],[116,8,94,12],[116,15,94,19],[116,20,94,24],[117,6,95,8],[118,6,96,8],[119,8,97,12],[119,15,97,19,"devicePushToken"],[119,30,97,34],[119,31,97,35,"type"],[119,35,97,39],[120,4,98,4],[121,2,99,0],[122,2,100,0],[123,2,100,0],[123,11,101,15,"shouldUseDevelopmentNotificationService"],[123,50,101,54,"shouldUseDevelopmentNotificationService"],[123,51,101,54],[124,4,101,54],[124,11,101,54,"_shouldUseDevelopmentNotificationService"],[124,51,101,54],[124,52,101,54,"apply"],[124,57,101,54],[124,64,101,54,"arguments"],[124,73,101,54],[125,2,101,54],[126,2,101,54],[126,11,101,54,"_shouldUseDevelopmentNotificationService"],[126,52,101,54],[127,4,101,54,"_shouldUseDevelopmentNotificationService"],[127,44,101,54],[127,51,101,54,"_asyncToGenerator2"],[127,69,101,54],[127,70,101,54,"default"],[127,77,101,54],[127,79,101,0],[127,92,101,57],[128,6,102,4],[128,10,102,8,"Platform"],[128,35,102,16],[128,36,102,17,"OS"],[128,38,102,19],[128,43,102,24],[128,48,102,29],[128,50,102,31],[129,8,103,8],[129,12,103,12],[130,10,104,12],[130,14,104,18,"notificationServiceEnvironment"],[130,44,104,48],[130,53,104,57,"Application"],[130,64,104,68],[130,65,104,69,"getIosPushNotificationServiceEnvironmentAsync"],[130,110,104,114],[130,111,104,115],[130,112,104,116],[131,10,105,12],[131,14,105,16,"notificationServiceEnvironment"],[131,44,105,46],[131,49,105,51],[131,62,105,64],[131,64,105,66],[132,12,106,16],[132,19,106,23],[132,23,106,27],[133,10,107,12],[134,8,108,8],[134,9,108,9],[134,10,109,8],[134,16,109,14],[135,10,110,12],[136,8,110,12],[137,6,112,4],[138,6,113,4],[138,13,113,11],[138,18,113,16],[139,4,114,0],[139,5,114,1],[140,4,114,1],[140,11,114,1,"_shouldUseDevelopmentNotificationService"],[140,51,114,1],[140,52,114,1,"apply"],[140,57,114,1],[140,64,114,1,"arguments"],[140,73,114,1],[141,2,114,1],[142,0,114,1],[142,3]],"functionMap":{"names":["<global>","updateDevicePushTokenAsync","doUpdateDevicePushTokenAsync","retry","Promise$argument_0","getDeviceIdAsync","getTypeOfToken","shouldUseDevelopmentNotificationService"],"mappings":"AAA;OCK;yCCC;KD8C;kBEE;KFE;8BGe,qDH;CDG;AKE;CLU;AME;CNU;AOE;CPa"}},"type":"js/module"}]}