{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  /* eslint no-invalid-this: 1 */\n  var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\n  var toStr = Object.prototype.toString;\n  var max = Math.max;\n  var funcType = '[object Function]';\n  var concatty = function concatty(a, b) {\n    var arr = [];\n    for (var i = 0; i < a.length; i += 1) {\n      arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n      arr[j + a.length] = b[j];\n    }\n    return arr;\n  };\n  var slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n      arr[j] = arrLike[i];\n    }\n    return arr;\n  };\n  var joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n      str += arr[i];\n      if (i + 1 < arr.length) {\n        str += joiner;\n      }\n    }\n    return str;\n  };\n  module.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n      throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n    var bound;\n    var binder = function () {\n      if (this instanceof bound) {\n        var result = target.apply(this, concatty(args, arguments));\n        if (Object(result) === result) {\n          return result;\n        }\n        return this;\n      }\n      return target.apply(that, concatty(args, arguments));\n    };\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n      boundArgs[i] = '$' + i;\n    }\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n    if (target.prototype) {\n      var Empty = function Empty() {};\n      Empty.prototype = target.prototype;\n      bound.prototype = new Empty();\n      Empty.prototype = null;\n    }\n    return bound;\n  };\n});","lineCount":67,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,5,0],[5,6,5,4,"ERROR_MESSAGE"],[5,19,5,17],[5,22,5,20],[5,71,5,69],[6,2,6,0],[6,6,6,4,"toStr"],[6,11,6,9],[6,14,6,12,"Object"],[6,20,6,18],[6,21,6,19,"prototype"],[6,30,6,28],[6,31,6,29,"toString"],[6,39,6,37],[7,2,7,0],[7,6,7,4,"max"],[7,9,7,7],[7,12,7,10,"Math"],[7,16,7,14],[7,17,7,15,"max"],[7,20,7,18],[8,2,8,0],[8,6,8,4,"funcType"],[8,14,8,12],[8,17,8,15],[8,36,8,34],[9,2,10,0],[9,6,10,4,"concatty"],[9,14,10,12],[9,17,10,15],[9,26,10,24,"concatty"],[9,34,10,32,"concatty"],[9,35,10,33,"a"],[9,36,10,34],[9,38,10,36,"b"],[9,39,10,37],[9,41,10,39],[10,4,11,4],[10,8,11,8,"arr"],[10,11,11,11],[10,14,11,14],[10,16,11,16],[11,4,13,4],[11,9,13,9],[11,13,13,13,"i"],[11,14,13,14],[11,17,13,17],[11,18,13,18],[11,20,13,20,"i"],[11,21,13,21],[11,24,13,24,"a"],[11,25,13,25],[11,26,13,26,"length"],[11,32,13,32],[11,34,13,34,"i"],[11,35,13,35],[11,39,13,39],[11,40,13,40],[11,42,13,42],[12,6,14,8,"arr"],[12,9,14,11],[12,10,14,12,"i"],[12,11,14,13],[12,12,14,14],[12,15,14,17,"a"],[12,16,14,18],[12,17,14,19,"i"],[12,18,14,20],[12,19,14,21],[13,4,15,4],[14,4,16,4],[14,9,16,9],[14,13,16,13,"j"],[14,14,16,14],[14,17,16,17],[14,18,16,18],[14,20,16,20,"j"],[14,21,16,21],[14,24,16,24,"b"],[14,25,16,25],[14,26,16,26,"length"],[14,32,16,32],[14,34,16,34,"j"],[14,35,16,35],[14,39,16,39],[14,40,16,40],[14,42,16,42],[15,6,17,8,"arr"],[15,9,17,11],[15,10,17,12,"j"],[15,11,17,13],[15,14,17,16,"a"],[15,15,17,17],[15,16,17,18,"length"],[15,22,17,24],[15,23,17,25],[15,26,17,28,"b"],[15,27,17,29],[15,28,17,30,"j"],[15,29,17,31],[15,30,17,32],[16,4,18,4],[17,4,20,4],[17,11,20,11,"arr"],[17,14,20,14],[18,2,21,0],[18,3,21,1],[19,2,23,0],[19,6,23,4,"slicy"],[19,11,23,9],[19,14,23,12],[19,23,23,21,"slicy"],[19,28,23,26,"slicy"],[19,29,23,27,"arrLike"],[19,36,23,34],[19,38,23,36,"offset"],[19,44,23,42],[19,46,23,44],[20,4,24,4],[20,8,24,8,"arr"],[20,11,24,11],[20,14,24,14],[20,16,24,16],[21,4,25,4],[21,9,25,9],[21,13,25,13,"i"],[21,14,25,14],[21,17,25,17,"offset"],[21,23,25,23],[21,27,25,27],[21,28,25,28],[21,30,25,30,"j"],[21,31,25,31],[21,34,25,34],[21,35,25,35],[21,37,25,37,"i"],[21,38,25,38],[21,41,25,41,"arrLike"],[21,48,25,48],[21,49,25,49,"length"],[21,55,25,55],[21,57,25,57,"i"],[21,58,25,58],[21,62,25,62],[21,63,25,63],[21,65,25,65,"j"],[21,66,25,66],[21,70,25,70],[21,71,25,71],[21,73,25,73],[22,6,26,8,"arr"],[22,9,26,11],[22,10,26,12,"j"],[22,11,26,13],[22,12,26,14],[22,15,26,17,"arrLike"],[22,22,26,24],[22,23,26,25,"i"],[22,24,26,26],[22,25,26,27],[23,4,27,4],[24,4,28,4],[24,11,28,11,"arr"],[24,14,28,14],[25,2,29,0],[25,3,29,1],[26,2,31,0],[26,6,31,4,"joiny"],[26,11,31,9],[26,14,31,12],[26,23,31,12,"joiny"],[26,24,31,22,"arr"],[26,27,31,25],[26,29,31,27,"joiner"],[26,35,31,33],[26,37,31,35],[27,4,32,4],[27,8,32,8,"str"],[27,11,32,11],[27,14,32,14],[27,16,32,16],[28,4,33,4],[28,9,33,9],[28,13,33,13,"i"],[28,14,33,14],[28,17,33,17],[28,18,33,18],[28,20,33,20,"i"],[28,21,33,21],[28,24,33,24,"arr"],[28,27,33,27],[28,28,33,28,"length"],[28,34,33,34],[28,36,33,36,"i"],[28,37,33,37],[28,41,33,41],[28,42,33,42],[28,44,33,44],[29,6,34,8,"str"],[29,9,34,11],[29,13,34,15,"arr"],[29,16,34,18],[29,17,34,19,"i"],[29,18,34,20],[29,19,34,21],[30,6,35,8],[30,10,35,12,"i"],[30,11,35,13],[30,14,35,16],[30,15,35,17],[30,18,35,20,"arr"],[30,21,35,23],[30,22,35,24,"length"],[30,28,35,30],[30,30,35,32],[31,8,36,12,"str"],[31,11,36,15],[31,15,36,19,"joiner"],[31,21,36,25],[32,6,37,8],[33,4,38,4],[34,4,39,4],[34,11,39,11,"str"],[34,14,39,14],[35,2,40,0],[35,3,40,1],[36,2,42,0,"module"],[36,8,42,6],[36,9,42,7,"exports"],[36,16,42,14],[36,19,42,17],[36,28,42,26,"bind"],[36,32,42,30,"bind"],[36,33,42,31,"that"],[36,37,42,35],[36,39,42,37],[37,4,43,4],[37,8,43,8,"target"],[37,14,43,14],[37,17,43,17],[37,21,43,21],[38,4,44,4],[38,8,44,8],[38,15,44,15,"target"],[38,21,44,21],[38,26,44,26],[38,36,44,36],[38,40,44,40,"toStr"],[38,45,44,45],[38,46,44,46,"apply"],[38,51,44,51],[38,52,44,52,"target"],[38,58,44,58],[38,59,44,59],[38,64,44,64,"funcType"],[38,72,44,72],[38,74,44,74],[39,6,45,8],[39,12,45,14],[39,16,45,18,"TypeError"],[39,25,45,27],[39,26,45,28,"ERROR_MESSAGE"],[39,39,45,41],[39,42,45,44,"target"],[39,48,45,50],[39,49,45,51],[40,4,46,4],[41,4,47,4],[41,8,47,8,"args"],[41,12,47,12],[41,15,47,15,"slicy"],[41,20,47,20],[41,21,47,21,"arguments"],[41,30,47,30],[41,32,47,32],[41,33,47,33],[41,34,47,34],[42,4,49,4],[42,8,49,8,"bound"],[42,13,49,13],[43,4,50,4],[43,8,50,8,"binder"],[43,14,50,14],[43,17,50,17],[43,26,50,17,"binder"],[43,27,50,17],[43,29,50,29],[44,6,51,8],[44,10,51,12],[44,14,51,16],[44,26,51,28,"bound"],[44,31,51,33],[44,33,51,35],[45,8,52,12],[45,12,52,16,"result"],[45,18,52,22],[45,21,52,25,"target"],[45,27,52,31],[45,28,52,32,"apply"],[45,33,52,37],[45,34,53,16],[45,38,53,20],[45,40,54,16,"concatty"],[45,48,54,24],[45,49,54,25,"args"],[45,53,54,29],[45,55,54,31,"arguments"],[45,64,54,40],[45,65,55,12],[45,66,55,13],[46,8,56,12],[46,12,56,16,"Object"],[46,18,56,22],[46,19,56,23,"result"],[46,25,56,29],[46,26,56,30],[46,31,56,35,"result"],[46,37,56,41],[46,39,56,43],[47,10,57,16],[47,17,57,23,"result"],[47,23,57,29],[48,8,58,12],[49,8,59,12],[49,15,59,19],[49,19,59,23],[50,6,60,8],[51,6,61,8],[51,13,61,15,"target"],[51,19,61,21],[51,20,61,22,"apply"],[51,25,61,27],[51,26,62,12,"that"],[51,30,62,16],[51,32,63,12,"concatty"],[51,40,63,20],[51,41,63,21,"args"],[51,45,63,25],[51,47,63,27,"arguments"],[51,56,63,36],[51,57,64,8],[51,58,64,9],[52,4,66,4],[52,5,66,5],[53,4,68,4],[53,8,68,8,"boundLength"],[53,19,68,19],[53,22,68,22,"max"],[53,25,68,25],[53,26,68,26],[53,27,68,27],[53,29,68,29,"target"],[53,35,68,35],[53,36,68,36,"length"],[53,42,68,42],[53,45,68,45,"args"],[53,49,68,49],[53,50,68,50,"length"],[53,56,68,56],[53,57,68,57],[54,4,69,4],[54,8,69,8,"boundArgs"],[54,17,69,17],[54,20,69,20],[54,22,69,22],[55,4,70,4],[55,9,70,9],[55,13,70,13,"i"],[55,14,70,14],[55,17,70,17],[55,18,70,18],[55,20,70,20,"i"],[55,21,70,21],[55,24,70,24,"boundLength"],[55,35,70,35],[55,37,70,37,"i"],[55,38,70,38],[55,40,70,40],[55,42,70,42],[56,6,71,8,"boundArgs"],[56,15,71,17],[56,16,71,18,"i"],[56,17,71,19],[56,18,71,20],[56,21,71,23],[56,24,71,26],[56,27,71,29,"i"],[56,28,71,30],[57,4,72,4],[58,4,74,4,"bound"],[58,9,74,9],[58,12,74,12,"Function"],[58,20,74,20],[58,21,74,21],[58,29,74,29],[58,31,74,31],[58,50,74,50],[58,53,74,53,"joiny"],[58,58,74,58],[58,59,74,59,"boundArgs"],[58,68,74,68],[58,70,74,70],[58,73,74,73],[58,74,74,74],[58,77,74,77],[58,120,74,120],[58,121,74,121],[58,122,74,122,"binder"],[58,128,74,128],[58,129,74,129],[59,4,76,4],[59,8,76,8,"target"],[59,14,76,14],[59,15,76,15,"prototype"],[59,24,76,24],[59,26,76,26],[60,6,77,8],[60,10,77,12,"Empty"],[60,15,77,17],[60,18,77,20],[60,27,77,29,"Empty"],[60,32,77,34,"Empty"],[60,33,77,34],[60,35,77,37],[60,36,77,38],[60,37,77,39],[61,6,78,8,"Empty"],[61,11,78,13],[61,12,78,14,"prototype"],[61,21,78,23],[61,24,78,26,"target"],[61,30,78,32],[61,31,78,33,"prototype"],[61,40,78,42],[62,6,79,8,"bound"],[62,11,79,13],[62,12,79,14,"prototype"],[62,21,79,23],[62,24,79,26],[62,28,79,30,"Empty"],[62,33,79,35],[62,34,79,36],[62,35,79,37],[63,6,80,8,"Empty"],[63,11,80,13],[63,12,80,14,"prototype"],[63,21,80,23],[63,24,80,26],[63,28,80,30],[64,4,81,4],[65,4,83,4],[65,11,83,11,"bound"],[65,16,83,16],[66,2,84,0],[66,3,84,1],[67,0,84,2],[67,3]],"functionMap":{"names":["<global>","concatty","slicy","joiny","bind","binder","Empty"],"mappings":"AAA;eCS;CDW;YEE;CFM;YGE;CHS;iBIE;iBCQ;KDgB;oBEW,mBF;CJO"}},"type":"js/module"}]}