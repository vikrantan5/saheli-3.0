{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isWithinInterval = isWithinInterval;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _toDate = require(_dependencyMap[2], \"./toDate.js\");\n  /**\n   * The {@link isWithinInterval} function options.\n   */\n\n  /**\n   * @name isWithinInterval\n   * @category Interval Helpers\n   * @summary Is the given date within the interval?\n   *\n   * @description\n   * Is the given date within the interval? (Including start and end.)\n   *\n   * @param date - The date to check\n   * @param interval - The interval to check\n   * @param options - An object with options\n   *\n   * @returns The date is within the interval\n   *\n   * @example\n   * // For the date within the interval:\n   * isWithinInterval(new Date(2014, 0, 3), {\n   *   start: new Date(2014, 0, 1),\n   *   end: new Date(2014, 0, 7)\n   * })\n   * // => true\n   *\n   * @example\n   * // For the date outside of the interval:\n   * isWithinInterval(new Date(2014, 0, 10), {\n   *   start: new Date(2014, 0, 1),\n   *   end: new Date(2014, 0, 7)\n   * })\n   * // => false\n   *\n   * @example\n   * // For date equal to the interval start:\n   * isWithinInterval(date, { start, end: date })\n   * // => true\n   *\n   * @example\n   * // For date equal to the interval end:\n   * isWithinInterval(date, { start: date, end })\n   * // => true\n   */\n  function isWithinInterval(date, interval, options) {\n    var time = +(0, _toDate.toDate)(date, options?.in);\n    var _sort = [+(0, _toDate.toDate)(interval.start, options?.in), +(0, _toDate.toDate)(interval.end, options?.in)].sort((a, b) => a - b),\n      _sort2 = (0, _slicedToArray2.default)(_sort, 2),\n      startTime = _sort2[0],\n      endTime = _sort2[1];\n    return time >= startTime && time <= endTime;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isWithinInterval;\n});","lineCount":65,"map":[[9,2,1,0],[9,6,1,0,"_toDate"],[9,13,1,0],[9,16,1,0,"require"],[9,23,1,0],[9,24,1,0,"_dependencyMap"],[9,38,1,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[14,2,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,0,37,0],[45,0,38,0],[46,0,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,0,45,0],[53,0,46,0],[54,2,47,7],[54,11,47,16,"isWithinInterval"],[54,27,47,32,"isWithinInterval"],[54,28,47,33,"date"],[54,32,47,37],[54,34,47,39,"interval"],[54,42,47,47],[54,44,47,49,"options"],[54,51,47,56],[54,53,47,58],[55,4,48,2],[55,8,48,8,"time"],[55,12,48,12],[55,15,48,15],[55,16,48,16],[55,20,48,16,"toDate"],[55,34,48,22],[55,36,48,23,"date"],[55,40,48,27],[55,42,48,29,"options"],[55,49,48,36],[55,51,48,38,"in"],[55,53,48,40],[55,54,48,41],[56,4,49,2],[56,8,49,2,"_sort"],[56,13,49,2],[56,16,49,31],[56,17,50,4],[56,18,50,5],[56,22,50,5,"toDate"],[56,36,50,11],[56,38,50,12,"interval"],[56,46,50,20],[56,47,50,21,"start"],[56,52,50,26],[56,54,50,28,"options"],[56,61,50,35],[56,63,50,37,"in"],[56,65,50,39],[56,66,50,40],[56,68,51,4],[56,69,51,5],[56,73,51,5,"toDate"],[56,87,51,11],[56,89,51,12,"interval"],[56,97,51,20],[56,98,51,21,"end"],[56,101,51,24],[56,103,51,26,"options"],[56,110,51,33],[56,112,51,35,"in"],[56,114,51,37],[56,115,51,38],[56,116,52,3],[56,117,52,4,"sort"],[56,121,52,8],[56,122,52,9],[56,123,52,10,"a"],[56,124,52,11],[56,126,52,13,"b"],[56,127,52,14],[56,132,52,19,"a"],[56,133,52,20],[56,136,52,23,"b"],[56,137,52,24],[56,138,52,25],[57,6,52,25,"_sort2"],[57,12,52,25],[57,19,52,25,"_slicedToArray2"],[57,34,52,25],[57,35,52,25,"default"],[57,42,52,25],[57,44,52,25,"_sort"],[57,49,52,25],[58,6,49,9,"startTime"],[58,15,49,18],[58,18,49,18,"_sort2"],[58,24,49,18],[59,6,49,20,"endTime"],[59,13,49,27],[59,16,49,27,"_sort2"],[59,22,49,27],[60,4,54,2],[60,11,54,9,"time"],[60,15,54,13],[60,19,54,17,"startTime"],[60,28,54,26],[60,32,54,30,"time"],[60,36,54,34],[60,40,54,38,"endTime"],[60,47,54,45],[61,2,55,0],[63,2,57,0],[64,2,57,0],[64,6,57,0,"_default"],[64,14,57,0],[64,17,57,0,"exports"],[64,24,57,0],[64,25,57,0,"default"],[64,32,57,0],[64,35,58,15,"isWithinInterval"],[64,51,58,31],[65,0,58,31],[65,3]],"functionMap":{"names":["<global>","isWithinInterval","sort$argument_0"],"mappings":"AAA;OC8C;SCK,eD;CDG"}},"type":"js/module"}]}