{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":37,"index":89}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.min = min;\n  var _constructFrom = require(_dependencyMap[0], \"./constructFrom.js\");\n  var _toDate = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link min} function options.\n   */\n\n  /**\n   * @name min\n   * @category Common Helpers\n   * @summary Returns the earliest of the given dates.\n   *\n   * @description\n   * Returns the earliest of the given dates.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param dates - The dates to compare\n   *\n   * @returns The earliest of the dates\n   *\n   * @example\n   * // Which of these dates is the earliest?\n   * const result = min([\n   *   new Date(1989, 6, 10),\n   *   new Date(1987, 1, 11),\n   *   new Date(1995, 6, 2),\n   *   new Date(1990, 0, 1)\n   * ])\n   * //=> Wed Feb 11 1987 00:00:00\n   */\n  function min(dates, options) {\n    var result;\n    var context = options?.in;\n    dates.forEach(date => {\n      // Use the first date object as the context function\n      if (!context && typeof date === \"object\") context = _constructFrom.constructFrom.bind(null, date);\n      var date_ = (0, _toDate.toDate)(date, context);\n      if (!result || result > date_ || isNaN(+date_)) result = date_;\n    });\n    return (0, _constructFrom.constructFrom)(context, result || NaN);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = min;\n});","lineCount":52,"map":[[7,2,1,0],[7,6,1,0,"_constructFrom"],[7,20,1,0],[7,23,1,0,"require"],[7,30,1,0],[7,31,1,0,"_dependencyMap"],[7,45,1,0],[8,2,2,0],[8,6,2,0,"_toDate"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,2,33,7],[38,11,33,16,"min"],[38,14,33,19,"min"],[38,15,33,20,"dates"],[38,20,33,25],[38,22,33,27,"options"],[38,29,33,34],[38,31,33,36],[39,4,34,2],[39,8,34,6,"result"],[39,14,34,12],[40,4,35,2],[40,8,35,6,"context"],[40,15,35,13],[40,18,35,16,"options"],[40,25,35,23],[40,27,35,25,"in"],[40,29,35,27],[41,4,37,2,"dates"],[41,9,37,7],[41,10,37,8,"forEach"],[41,17,37,15],[41,18,37,17,"date"],[41,22,37,21],[41,26,37,26],[42,6,38,4],[43,6,39,4],[43,10,39,8],[43,11,39,9,"context"],[43,18,39,16],[43,22,39,20],[43,29,39,27,"date"],[43,33,39,31],[43,38,39,36],[43,46,39,44],[43,48,40,6,"context"],[43,55,40,13],[43,58,40,16,"constructFrom"],[43,86,40,29],[43,87,40,30,"bind"],[43,91,40,34],[43,92,40,35],[43,96,40,39],[43,98,40,41,"date"],[43,102,40,45],[43,103,40,46],[44,6,42,4],[44,10,42,10,"date_"],[44,15,42,15],[44,18,42,18],[44,22,42,18,"toDate"],[44,36,42,24],[44,38,42,25,"date"],[44,42,42,29],[44,44,42,31,"context"],[44,51,42,38],[44,52,42,39],[45,6,43,4],[45,10,43,8],[45,11,43,9,"result"],[45,17,43,15],[45,21,43,19,"result"],[45,27,43,25],[45,30,43,28,"date_"],[45,35,43,33],[45,39,43,37,"isNaN"],[45,44,43,42],[45,45,43,43],[45,46,43,44,"date_"],[45,51,43,49],[45,52,43,50],[45,54,43,52,"result"],[45,60,43,58],[45,63,43,61,"date_"],[45,68,43,66],[46,4,44,2],[46,5,44,3],[46,6,44,4],[47,4,46,2],[47,11,46,9],[47,15,46,9,"constructFrom"],[47,43,46,22],[47,45,46,23,"context"],[47,52,46,30],[47,54,46,32,"result"],[47,60,46,38],[47,64,46,42,"NaN"],[47,67,46,45],[47,68,46,46],[48,2,47,0],[50,2,49,0],[51,2,49,0],[51,6,49,0,"_default"],[51,14,49,0],[51,17,49,0,"exports"],[51,24,49,0],[51,25,49,0,"default"],[51,32,49,0],[51,35,50,15,"min"],[51,38,50,18],[52,0,50,18],[52,3]],"functionMap":{"names":["<global>","min","dates.forEach$argument_0"],"mappings":"AAA;OCgC;gBCI;GDO;CDG"}},"type":"js/module"}]}