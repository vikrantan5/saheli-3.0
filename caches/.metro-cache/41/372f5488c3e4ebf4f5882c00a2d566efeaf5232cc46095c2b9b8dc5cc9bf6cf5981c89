{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"firebase/firestore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":12,"column":28,"index":169}}],"key":"n8ZdwTgQb9oFW01pH/SKxYwC/nA=","exportNames":["*"]}},{"name":"../config/firebaseConfig","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":171},"end":{"line":13,"column":46,"index":217}}],"key":"c2ktbavwtrva9DBC5I1TB1Fz260=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.updateOrderPaymentStatus = exports.updateOrderDeliveryStatus = exports.getUserOrders = exports.getOrdersByPaymentStatus = exports.getOrderStatistics = exports.getOrderById = exports.getAllOrders = exports.createOrder = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _firestore = require(_dependencyMap[2], \"firebase/firestore\");\n  var _firebaseConfig = require(_dependencyMap[3], \"../config/firebaseConfig\");\n  /**\r\n   * Create a new order\r\n   * @param {Object} orderData - Order data\r\n   * @returns {Promise<string>} - Order ID\r\n   */\n  var createOrder = exports.createOrder = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* (orderData) {\n      try {\n        var ordersRef = (0, _firestore.collection)(_firebaseConfig.db, 'orders');\n        var newOrderRef = (0, _firestore.doc)(ordersRef);\n        yield (0, _firestore.setDoc)(newOrderRef, {\n          ...orderData,\n          paymentStatus: 'pending',\n          deliveryStatus: 'pending',\n          createdAt: (0, _firestore.serverTimestamp)(),\n          updatedAt: (0, _firestore.serverTimestamp)()\n        });\n        console.log('✅ Order created successfully:', newOrderRef.id);\n        return newOrderRef.id;\n      } catch (error) {\n        console.error('❌ Error creating order:', error);\n        throw error;\n      }\n    });\n    return function createOrder(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Get user's orders\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<Array>} - Array of orders\r\n   */\n  var getUserOrders = exports.getUserOrders = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (userId) {\n      try {\n        var ordersRef = (0, _firestore.collection)(_firebaseConfig.db, 'orders');\n        var q = (0, _firestore.query)(ordersRef, (0, _firestore.where)('userId', '==', userId), (0, _firestore.orderBy)('createdAt', 'desc'));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        var orders = [];\n        querySnapshot.forEach(doc => {\n          orders.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        console.log('✅ Retrieved user orders:', orders.length);\n        return orders;\n      } catch (error) {\n        console.error('❌ Error getting user orders:', error);\n        throw error;\n      }\n    });\n    return function getUserOrders(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Get all orders (Admin only)\r\n   * @returns {Promise<Array>} - Array of all orders\r\n   */\n  var getAllOrders = exports.getAllOrders = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var ordersRef = (0, _firestore.collection)(_firebaseConfig.db, 'orders');\n        var q = (0, _firestore.query)(ordersRef, (0, _firestore.orderBy)('createdAt', 'desc'));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        var orders = [];\n        querySnapshot.forEach(doc => {\n          orders.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        console.log('✅ Retrieved all orders:', orders.length);\n        return orders;\n      } catch (error) {\n        console.error('❌ Error getting all orders:', error);\n        throw error;\n      }\n    });\n    return function getAllOrders() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Get order by ID\r\n   * @param {string} orderId - Order ID\r\n   * @returns {Promise<Object|null>} - Order data\r\n   */\n  var getOrderById = exports.getOrderById = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (orderId) {\n      try {\n        var orderRef = (0, _firestore.doc)(_firebaseConfig.db, 'orders', orderId);\n        var orderSnap = yield (0, _firestore.getDoc)(orderRef);\n        if (orderSnap.exists()) {\n          return {\n            id: orderSnap.id,\n            ...orderSnap.data()\n          };\n        } else {\n          console.log('No order found with ID:', orderId);\n          return null;\n        }\n      } catch (error) {\n        console.error('❌ Error getting order:', error);\n        throw error;\n      }\n    });\n    return function getOrderById(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Update order payment status\r\n   * @param {string} orderId - Order ID\r\n   * @param {string} paymentId - Razorpay payment ID\r\n   * @param {string} status - Payment status ('paid', 'failed')\r\n   * @returns {Promise<void>}\r\n   */\n  var updateOrderPaymentStatus = exports.updateOrderPaymentStatus = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (orderId, paymentId, status) {\n      try {\n        var orderRef = (0, _firestore.doc)(_firebaseConfig.db, 'orders', orderId);\n        yield (0, _firestore.updateDoc)(orderRef, {\n          razorpayPaymentId: paymentId,\n          paymentStatus: status,\n          updatedAt: (0, _firestore.serverTimestamp)()\n        });\n        console.log('✅ Order payment status updated');\n      } catch (error) {\n        console.error('❌ Error updating payment status:', error);\n        throw error;\n      }\n    });\n    return function updateOrderPaymentStatus(_x4, _x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Update order delivery status\r\n   * @param {string} orderId - Order ID\r\n   * @param {string} status - Delivery status ('pending', 'packed', 'shipped', 'delivered')\r\n   * @returns {Promise<void>}\r\n   */\n  var updateOrderDeliveryStatus = exports.updateOrderDeliveryStatus = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* (orderId, status) {\n      try {\n        var orderRef = (0, _firestore.doc)(_firebaseConfig.db, 'orders', orderId);\n        yield (0, _firestore.updateDoc)(orderRef, {\n          deliveryStatus: status,\n          updatedAt: (0, _firestore.serverTimestamp)()\n        });\n        console.log('✅ Order delivery status updated');\n      } catch (error) {\n        console.error('❌ Error updating delivery status:', error);\n        throw error;\n      }\n    });\n    return function updateOrderDeliveryStatus(_x7, _x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Get orders by payment status\r\n   * @param {string} status - Payment status\r\n   * @returns {Promise<Array>} - Array of orders\r\n   */\n  var getOrdersByPaymentStatus = exports.getOrdersByPaymentStatus = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2.default)(function* (status) {\n      try {\n        var ordersRef = (0, _firestore.collection)(_firebaseConfig.db, 'orders');\n        var q = (0, _firestore.query)(ordersRef, (0, _firestore.where)('paymentStatus', '==', status), (0, _firestore.orderBy)('createdAt', 'desc'));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        var orders = [];\n        querySnapshot.forEach(doc => {\n          orders.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        return orders;\n      } catch (error) {\n        console.error('❌ Error getting orders by status:', error);\n        throw error;\n      }\n    });\n    return function getOrdersByPaymentStatus(_x9) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Calculate order statistics (Admin)\r\n   * @returns {Promise<Object>} - Order statistics\r\n   */\n  var getOrderStatistics = exports.getOrderStatistics = /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var orders = yield getAllOrders();\n        var stats = {\n          totalOrders: orders.length,\n          paidOrders: orders.filter(o => o.paymentStatus === 'paid').length,\n          pendingOrders: orders.filter(o => o.paymentStatus === 'pending').length,\n          totalRevenue: orders.filter(o => o.paymentStatus === 'paid').reduce((sum, order) => sum + order.totalAmount, 0),\n          deliveredOrders: orders.filter(o => o.deliveryStatus === 'delivered').length\n        };\n        return stats;\n      } catch (error) {\n        console.error('❌ Error calculating order statistics:', error);\n        throw error;\n      }\n    });\n    return function getOrderStatistics() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n});","lineCount":233,"map":[[8,2,1,0],[8,6,1,0,"_firestore"],[8,16,1,0],[8,19,1,0,"require"],[8,26,1,0],[8,27,1,0,"_dependencyMap"],[8,41,1,0],[9,2,13,0],[9,6,13,0,"_firebaseConfig"],[9,21,13,0],[9,24,13,0,"require"],[9,31,13,0],[9,32,13,0,"_dependencyMap"],[9,46,13,0],[10,2,15,0],[11,0,16,0],[12,0,17,0],[13,0,18,0],[14,0,19,0],[15,2,20,7],[15,6,20,13,"createOrder"],[15,17,20,24],[15,20,20,24,"exports"],[15,27,20,24],[15,28,20,24,"createOrder"],[15,39,20,24],[16,4,20,24],[16,8,20,24,"_ref"],[16,12,20,24],[16,19,20,24,"_asyncToGenerator2"],[16,37,20,24],[16,38,20,24,"default"],[16,45,20,24],[16,47,20,27],[16,58,20,34,"orderData"],[16,67,20,43],[16,69,20,48],[17,6,21,2],[17,10,21,6],[18,8,22,4],[18,12,22,10,"ordersRef"],[18,21,22,19],[18,24,22,22],[18,28,22,22,"collection"],[18,49,22,32],[18,51,22,33,"db"],[18,69,22,35],[18,71,22,37],[18,79,22,45],[18,80,22,46],[19,8,23,4],[19,12,23,10,"newOrderRef"],[19,23,23,21],[19,26,23,24],[19,30,23,24,"doc"],[19,44,23,27],[19,46,23,28,"ordersRef"],[19,55,23,37],[19,56,23,38],[20,8,25,4],[20,14,25,10],[20,18,25,10,"setDoc"],[20,35,25,16],[20,37,25,17,"newOrderRef"],[20,48,25,28],[20,50,25,30],[21,10,26,6],[21,13,26,9,"orderData"],[21,22,26,18],[22,10,27,6,"paymentStatus"],[22,23,27,19],[22,25,27,21],[22,34,27,30],[23,10,28,6,"deliveryStatus"],[23,24,28,20],[23,26,28,22],[23,35,28,31],[24,10,29,6,"createdAt"],[24,19,29,15],[24,21,29,17],[24,25,29,17,"serverTimestamp"],[24,51,29,32],[24,53,29,33],[24,54,29,34],[25,10,30,6,"updatedAt"],[25,19,30,15],[25,21,30,17],[25,25,30,17,"serverTimestamp"],[25,51,30,32],[25,53,30,33],[26,8,31,4],[26,9,31,5],[26,10,31,6],[27,8,33,4,"console"],[27,15,33,11],[27,16,33,12,"log"],[27,19,33,15],[27,20,33,16],[27,51,33,47],[27,53,33,49,"newOrderRef"],[27,64,33,60],[27,65,33,61,"id"],[27,67,33,63],[27,68,33,64],[28,8,34,4],[28,15,34,11,"newOrderRef"],[28,26,34,22],[28,27,34,23,"id"],[28,29,34,25],[29,6,35,2],[29,7,35,3],[29,8,35,4],[29,15,35,11,"error"],[29,20,35,16],[29,22,35,18],[30,8,36,4,"console"],[30,15,36,11],[30,16,36,12,"error"],[30,21,36,17],[30,22,36,18],[30,47,36,43],[30,49,36,45,"error"],[30,54,36,50],[30,55,36,51],[31,8,37,4],[31,14,37,10,"error"],[31,19,37,15],[32,6,38,2],[33,4,39,0],[33,5,39,1],[34,4,39,1],[34,20,20,13,"createOrder"],[34,31,20,24,"createOrder"],[34,32,20,24,"_x"],[34,34,20,24],[35,6,20,24],[35,13,20,24,"_ref"],[35,17,20,24],[35,18,20,24,"apply"],[35,23,20,24],[35,30,20,24,"arguments"],[35,39,20,24],[36,4,20,24],[37,2,20,24],[37,5,39,1],[39,2,41,0],[40,0,42,0],[41,0,43,0],[42,0,44,0],[43,0,45,0],[44,2,46,7],[44,6,46,13,"getUserOrders"],[44,19,46,26],[44,22,46,26,"exports"],[44,29,46,26],[44,30,46,26,"getUserOrders"],[44,43,46,26],[45,4,46,26],[45,8,46,26,"_ref2"],[45,13,46,26],[45,20,46,26,"_asyncToGenerator2"],[45,38,46,26],[45,39,46,26,"default"],[45,46,46,26],[45,48,46,29],[45,59,46,36,"userId"],[45,65,46,42],[45,67,46,47],[46,6,47,2],[46,10,47,6],[47,8,48,4],[47,12,48,10,"ordersRef"],[47,21,48,19],[47,24,48,22],[47,28,48,22,"collection"],[47,49,48,32],[47,51,48,33,"db"],[47,69,48,35],[47,71,48,37],[47,79,48,45],[47,80,48,46],[48,8,49,4],[48,12,49,10,"q"],[48,13,49,11],[48,16,49,14],[48,20,49,14,"query"],[48,36,49,19],[48,38,50,6,"ordersRef"],[48,47,50,15],[48,49,51,6],[48,53,51,6,"where"],[48,69,51,11],[48,71,51,12],[48,79,51,20],[48,81,51,22],[48,85,51,26],[48,87,51,28,"userId"],[48,93,51,34],[48,94,51,35],[48,96,52,6],[48,100,52,6,"orderBy"],[48,118,52,13],[48,120,52,14],[48,131,52,25],[48,133,52,27],[48,139,52,33],[48,140,53,4],[48,141,53,5],[49,8,54,4],[49,12,54,10,"querySnapshot"],[49,25,54,23],[49,34,54,32],[49,38,54,32,"getDocs"],[49,56,54,39],[49,58,54,40,"q"],[49,59,54,41],[49,60,54,42],[50,8,56,4],[50,12,56,10,"orders"],[50,18,56,16],[50,21,56,19],[50,23,56,21],[51,8,57,4,"querySnapshot"],[51,21,57,17],[51,22,57,18,"forEach"],[51,29,57,25],[51,30,57,27,"doc"],[51,33,57,30],[51,37,57,35],[52,10,58,6,"orders"],[52,16,58,12],[52,17,58,13,"push"],[52,21,58,17],[52,22,58,18],[53,12,59,8,"id"],[53,14,59,10],[53,16,59,12,"doc"],[53,19,59,15],[53,20,59,16,"id"],[53,22,59,18],[54,12,60,8],[54,15,60,11,"doc"],[54,18,60,14],[54,19,60,15,"data"],[54,23,60,19],[54,24,60,20],[55,10,61,6],[55,11,61,7],[55,12,61,8],[56,8,62,4],[56,9,62,5],[56,10,62,6],[57,8,64,4,"console"],[57,15,64,11],[57,16,64,12,"log"],[57,19,64,15],[57,20,64,16],[57,46,64,42],[57,48,64,44,"orders"],[57,54,64,50],[57,55,64,51,"length"],[57,61,64,57],[57,62,64,58],[58,8,65,4],[58,15,65,11,"orders"],[58,21,65,17],[59,6,66,2],[59,7,66,3],[59,8,66,4],[59,15,66,11,"error"],[59,20,66,16],[59,22,66,18],[60,8,67,4,"console"],[60,15,67,11],[60,16,67,12,"error"],[60,21,67,17],[60,22,67,18],[60,52,67,48],[60,54,67,50,"error"],[60,59,67,55],[60,60,67,56],[61,8,68,4],[61,14,68,10,"error"],[61,19,68,15],[62,6,69,2],[63,4,70,0],[63,5,70,1],[64,4,70,1],[64,20,46,13,"getUserOrders"],[64,33,46,26,"getUserOrders"],[64,34,46,26,"_x2"],[64,37,46,26],[65,6,46,26],[65,13,46,26,"_ref2"],[65,18,46,26],[65,19,46,26,"apply"],[65,24,46,26],[65,31,46,26,"arguments"],[65,40,46,26],[66,4,46,26],[67,2,46,26],[67,5,70,1],[69,2,72,0],[70,0,73,0],[71,0,74,0],[72,0,75,0],[73,2,76,7],[73,6,76,13,"getAllOrders"],[73,18,76,25],[73,21,76,25,"exports"],[73,28,76,25],[73,29,76,25,"getAllOrders"],[73,41,76,25],[74,4,76,25],[74,8,76,25,"_ref3"],[74,13,76,25],[74,20,76,25,"_asyncToGenerator2"],[74,38,76,25],[74,39,76,25,"default"],[74,46,76,25],[74,48,76,28],[74,61,76,40],[75,6,77,2],[75,10,77,6],[76,8,78,4],[76,12,78,10,"ordersRef"],[76,21,78,19],[76,24,78,22],[76,28,78,22,"collection"],[76,49,78,32],[76,51,78,33,"db"],[76,69,78,35],[76,71,78,37],[76,79,78,45],[76,80,78,46],[77,8,79,4],[77,12,79,10,"q"],[77,13,79,11],[77,16,79,14],[77,20,79,14,"query"],[77,36,79,19],[77,38,79,20,"ordersRef"],[77,47,79,29],[77,49,79,31],[77,53,79,31,"orderBy"],[77,71,79,38],[77,73,79,39],[77,84,79,50],[77,86,79,52],[77,92,79,58],[77,93,79,59],[77,94,79,60],[78,8,80,4],[78,12,80,10,"querySnapshot"],[78,25,80,23],[78,34,80,32],[78,38,80,32,"getDocs"],[78,56,80,39],[78,58,80,40,"q"],[78,59,80,41],[78,60,80,42],[79,8,82,4],[79,12,82,10,"orders"],[79,18,82,16],[79,21,82,19],[79,23,82,21],[80,8,83,4,"querySnapshot"],[80,21,83,17],[80,22,83,18,"forEach"],[80,29,83,25],[80,30,83,27,"doc"],[80,33,83,30],[80,37,83,35],[81,10,84,6,"orders"],[81,16,84,12],[81,17,84,13,"push"],[81,21,84,17],[81,22,84,18],[82,12,85,8,"id"],[82,14,85,10],[82,16,85,12,"doc"],[82,19,85,15],[82,20,85,16,"id"],[82,22,85,18],[83,12,86,8],[83,15,86,11,"doc"],[83,18,86,14],[83,19,86,15,"data"],[83,23,86,19],[83,24,86,20],[84,10,87,6],[84,11,87,7],[84,12,87,8],[85,8,88,4],[85,9,88,5],[85,10,88,6],[86,8,90,4,"console"],[86,15,90,11],[86,16,90,12,"log"],[86,19,90,15],[86,20,90,16],[86,45,90,41],[86,47,90,43,"orders"],[86,53,90,49],[86,54,90,50,"length"],[86,60,90,56],[86,61,90,57],[87,8,91,4],[87,15,91,11,"orders"],[87,21,91,17],[88,6,92,2],[88,7,92,3],[88,8,92,4],[88,15,92,11,"error"],[88,20,92,16],[88,22,92,18],[89,8,93,4,"console"],[89,15,93,11],[89,16,93,12,"error"],[89,21,93,17],[89,22,93,18],[89,51,93,47],[89,53,93,49,"error"],[89,58,93,54],[89,59,93,55],[90,8,94,4],[90,14,94,10,"error"],[90,19,94,15],[91,6,95,2],[92,4,96,0],[92,5,96,1],[93,4,96,1],[93,20,76,13,"getAllOrders"],[93,32,76,25,"getAllOrders"],[93,33,76,25],[94,6,76,25],[94,13,76,25,"_ref3"],[94,18,76,25],[94,19,76,25,"apply"],[94,24,76,25],[94,31,76,25,"arguments"],[94,40,76,25],[95,4,76,25],[96,2,76,25],[96,5,96,1],[98,2,98,0],[99,0,99,0],[100,0,100,0],[101,0,101,0],[102,0,102,0],[103,2,103,7],[103,6,103,13,"getOrderById"],[103,18,103,25],[103,21,103,25,"exports"],[103,28,103,25],[103,29,103,25,"getOrderById"],[103,41,103,25],[104,4,103,25],[104,8,103,25,"_ref4"],[104,13,103,25],[104,20,103,25,"_asyncToGenerator2"],[104,38,103,25],[104,39,103,25,"default"],[104,46,103,25],[104,48,103,28],[104,59,103,35,"orderId"],[104,66,103,42],[104,68,103,47],[105,6,104,2],[105,10,104,6],[106,8,105,4],[106,12,105,10,"orderRef"],[106,20,105,18],[106,23,105,21],[106,27,105,21,"doc"],[106,41,105,24],[106,43,105,25,"db"],[106,61,105,27],[106,63,105,29],[106,71,105,37],[106,73,105,39,"orderId"],[106,80,105,46],[106,81,105,47],[107,8,106,4],[107,12,106,10,"orderSnap"],[107,21,106,19],[107,30,106,28],[107,34,106,28,"getDoc"],[107,51,106,34],[107,53,106,35,"orderRef"],[107,61,106,43],[107,62,106,44],[108,8,108,4],[108,12,108,8,"orderSnap"],[108,21,108,17],[108,22,108,18,"exists"],[108,28,108,24],[108,29,108,25],[108,30,108,26],[108,32,108,28],[109,10,109,6],[109,17,109,13],[110,12,110,8,"id"],[110,14,110,10],[110,16,110,12,"orderSnap"],[110,25,110,21],[110,26,110,22,"id"],[110,28,110,24],[111,12,111,8],[111,15,111,11,"orderSnap"],[111,24,111,20],[111,25,111,21,"data"],[111,29,111,25],[111,30,111,26],[112,10,112,6],[112,11,112,7],[113,8,113,4],[113,9,113,5],[113,15,113,11],[114,10,114,6,"console"],[114,17,114,13],[114,18,114,14,"log"],[114,21,114,17],[114,22,114,18],[114,47,114,43],[114,49,114,45,"orderId"],[114,56,114,52],[114,57,114,53],[115,10,115,6],[115,17,115,13],[115,21,115,17],[116,8,116,4],[117,6,117,2],[117,7,117,3],[117,8,117,4],[117,15,117,11,"error"],[117,20,117,16],[117,22,117,18],[118,8,118,4,"console"],[118,15,118,11],[118,16,118,12,"error"],[118,21,118,17],[118,22,118,18],[118,46,118,42],[118,48,118,44,"error"],[118,53,118,49],[118,54,118,50],[119,8,119,4],[119,14,119,10,"error"],[119,19,119,15],[120,6,120,2],[121,4,121,0],[121,5,121,1],[122,4,121,1],[122,20,103,13,"getOrderById"],[122,32,103,25,"getOrderById"],[122,33,103,25,"_x3"],[122,36,103,25],[123,6,103,25],[123,13,103,25,"_ref4"],[123,18,103,25],[123,19,103,25,"apply"],[123,24,103,25],[123,31,103,25,"arguments"],[123,40,103,25],[124,4,103,25],[125,2,103,25],[125,5,121,1],[127,2,123,0],[128,0,124,0],[129,0,125,0],[130,0,126,0],[131,0,127,0],[132,0,128,0],[133,0,129,0],[134,2,130,7],[134,6,130,13,"updateOrderPaymentStatus"],[134,30,130,37],[134,33,130,37,"exports"],[134,40,130,37],[134,41,130,37,"updateOrderPaymentStatus"],[134,65,130,37],[135,4,130,37],[135,8,130,37,"_ref5"],[135,13,130,37],[135,20,130,37,"_asyncToGenerator2"],[135,38,130,37],[135,39,130,37,"default"],[135,46,130,37],[135,48,130,40],[135,59,130,47,"orderId"],[135,66,130,54],[135,68,130,56,"paymentId"],[135,77,130,65],[135,79,130,67,"status"],[135,85,130,73],[135,87,130,78],[136,6,131,2],[136,10,131,6],[137,8,132,4],[137,12,132,10,"orderRef"],[137,20,132,18],[137,23,132,21],[137,27,132,21,"doc"],[137,41,132,24],[137,43,132,25,"db"],[137,61,132,27],[137,63,132,29],[137,71,132,37],[137,73,132,39,"orderId"],[137,80,132,46],[137,81,132,47],[138,8,133,4],[138,14,133,10],[138,18,133,10,"updateDoc"],[138,38,133,19],[138,40,133,20,"orderRef"],[138,48,133,28],[138,50,133,30],[139,10,134,6,"razorpayPaymentId"],[139,27,134,23],[139,29,134,25,"paymentId"],[139,38,134,34],[140,10,135,6,"paymentStatus"],[140,23,135,19],[140,25,135,21,"status"],[140,31,135,27],[141,10,136,6,"updatedAt"],[141,19,136,15],[141,21,136,17],[141,25,136,17,"serverTimestamp"],[141,51,136,32],[141,53,136,33],[142,8,137,4],[142,9,137,5],[142,10,137,6],[143,8,139,4,"console"],[143,15,139,11],[143,16,139,12,"log"],[143,19,139,15],[143,20,139,16],[143,52,139,48],[143,53,139,49],[144,6,140,2],[144,7,140,3],[144,8,140,4],[144,15,140,11,"error"],[144,20,140,16],[144,22,140,18],[145,8,141,4,"console"],[145,15,141,11],[145,16,141,12,"error"],[145,21,141,17],[145,22,141,18],[145,56,141,52],[145,58,141,54,"error"],[145,63,141,59],[145,64,141,60],[146,8,142,4],[146,14,142,10,"error"],[146,19,142,15],[147,6,143,2],[148,4,144,0],[148,5,144,1],[149,4,144,1],[149,20,130,13,"updateOrderPaymentStatus"],[149,44,130,37,"updateOrderPaymentStatus"],[149,45,130,37,"_x4"],[149,48,130,37],[149,50,130,37,"_x5"],[149,53,130,37],[149,55,130,37,"_x6"],[149,58,130,37],[150,6,130,37],[150,13,130,37,"_ref5"],[150,18,130,37],[150,19,130,37,"apply"],[150,24,130,37],[150,31,130,37,"arguments"],[150,40,130,37],[151,4,130,37],[152,2,130,37],[152,5,144,1],[154,2,146,0],[155,0,147,0],[156,0,148,0],[157,0,149,0],[158,0,150,0],[159,0,151,0],[160,2,152,7],[160,6,152,13,"updateOrderDeliveryStatus"],[160,31,152,38],[160,34,152,38,"exports"],[160,41,152,38],[160,42,152,38,"updateOrderDeliveryStatus"],[160,67,152,38],[161,4,152,38],[161,8,152,38,"_ref6"],[161,13,152,38],[161,20,152,38,"_asyncToGenerator2"],[161,38,152,38],[161,39,152,38,"default"],[161,46,152,38],[161,48,152,41],[161,59,152,48,"orderId"],[161,66,152,55],[161,68,152,57,"status"],[161,74,152,63],[161,76,152,68],[162,6,153,2],[162,10,153,6],[163,8,154,4],[163,12,154,10,"orderRef"],[163,20,154,18],[163,23,154,21],[163,27,154,21,"doc"],[163,41,154,24],[163,43,154,25,"db"],[163,61,154,27],[163,63,154,29],[163,71,154,37],[163,73,154,39,"orderId"],[163,80,154,46],[163,81,154,47],[164,8,155,4],[164,14,155,10],[164,18,155,10,"updateDoc"],[164,38,155,19],[164,40,155,20,"orderRef"],[164,48,155,28],[164,50,155,30],[165,10,156,6,"deliveryStatus"],[165,24,156,20],[165,26,156,22,"status"],[165,32,156,28],[166,10,157,6,"updatedAt"],[166,19,157,15],[166,21,157,17],[166,25,157,17,"serverTimestamp"],[166,51,157,32],[166,53,157,33],[167,8,158,4],[167,9,158,5],[167,10,158,6],[168,8,160,4,"console"],[168,15,160,11],[168,16,160,12,"log"],[168,19,160,15],[168,20,160,16],[168,53,160,49],[168,54,160,50],[169,6,161,2],[169,7,161,3],[169,8,161,4],[169,15,161,11,"error"],[169,20,161,16],[169,22,161,18],[170,8,162,4,"console"],[170,15,162,11],[170,16,162,12,"error"],[170,21,162,17],[170,22,162,18],[170,57,162,53],[170,59,162,55,"error"],[170,64,162,60],[170,65,162,61],[171,8,163,4],[171,14,163,10,"error"],[171,19,163,15],[172,6,164,2],[173,4,165,0],[173,5,165,1],[174,4,165,1],[174,20,152,13,"updateOrderDeliveryStatus"],[174,45,152,38,"updateOrderDeliveryStatus"],[174,46,152,38,"_x7"],[174,49,152,38],[174,51,152,38,"_x8"],[174,54,152,38],[175,6,152,38],[175,13,152,38,"_ref6"],[175,18,152,38],[175,19,152,38,"apply"],[175,24,152,38],[175,31,152,38,"arguments"],[175,40,152,38],[176,4,152,38],[177,2,152,38],[177,5,165,1],[179,2,167,0],[180,0,168,0],[181,0,169,0],[182,0,170,0],[183,0,171,0],[184,2,172,7],[184,6,172,13,"getOrdersByPaymentStatus"],[184,30,172,37],[184,33,172,37,"exports"],[184,40,172,37],[184,41,172,37,"getOrdersByPaymentStatus"],[184,65,172,37],[185,4,172,37],[185,8,172,37,"_ref7"],[185,13,172,37],[185,20,172,37,"_asyncToGenerator2"],[185,38,172,37],[185,39,172,37,"default"],[185,46,172,37],[185,48,172,40],[185,59,172,47,"status"],[185,65,172,53],[185,67,172,58],[186,6,173,2],[186,10,173,6],[187,8,174,4],[187,12,174,10,"ordersRef"],[187,21,174,19],[187,24,174,22],[187,28,174,22,"collection"],[187,49,174,32],[187,51,174,33,"db"],[187,69,174,35],[187,71,174,37],[187,79,174,45],[187,80,174,46],[188,8,175,4],[188,12,175,10,"q"],[188,13,175,11],[188,16,175,14],[188,20,175,14,"query"],[188,36,175,19],[188,38,176,6,"ordersRef"],[188,47,176,15],[188,49,177,6],[188,53,177,6,"where"],[188,69,177,11],[188,71,177,12],[188,86,177,27],[188,88,177,29],[188,92,177,33],[188,94,177,35,"status"],[188,100,177,41],[188,101,177,42],[188,103,178,6],[188,107,178,6,"orderBy"],[188,125,178,13],[188,127,178,14],[188,138,178,25],[188,140,178,27],[188,146,178,33],[188,147,179,4],[188,148,179,5],[189,8,180,4],[189,12,180,10,"querySnapshot"],[189,25,180,23],[189,34,180,32],[189,38,180,32,"getDocs"],[189,56,180,39],[189,58,180,40,"q"],[189,59,180,41],[189,60,180,42],[190,8,182,4],[190,12,182,10,"orders"],[190,18,182,16],[190,21,182,19],[190,23,182,21],[191,8,183,4,"querySnapshot"],[191,21,183,17],[191,22,183,18,"forEach"],[191,29,183,25],[191,30,183,27,"doc"],[191,33,183,30],[191,37,183,35],[192,10,184,6,"orders"],[192,16,184,12],[192,17,184,13,"push"],[192,21,184,17],[192,22,184,18],[193,12,185,8,"id"],[193,14,185,10],[193,16,185,12,"doc"],[193,19,185,15],[193,20,185,16,"id"],[193,22,185,18],[194,12,186,8],[194,15,186,11,"doc"],[194,18,186,14],[194,19,186,15,"data"],[194,23,186,19],[194,24,186,20],[195,10,187,6],[195,11,187,7],[195,12,187,8],[196,8,188,4],[196,9,188,5],[196,10,188,6],[197,8,190,4],[197,15,190,11,"orders"],[197,21,190,17],[198,6,191,2],[198,7,191,3],[198,8,191,4],[198,15,191,11,"error"],[198,20,191,16],[198,22,191,18],[199,8,192,4,"console"],[199,15,192,11],[199,16,192,12,"error"],[199,21,192,17],[199,22,192,18],[199,57,192,53],[199,59,192,55,"error"],[199,64,192,60],[199,65,192,61],[200,8,193,4],[200,14,193,10,"error"],[200,19,193,15],[201,6,194,2],[202,4,195,0],[202,5,195,1],[203,4,195,1],[203,20,172,13,"getOrdersByPaymentStatus"],[203,44,172,37,"getOrdersByPaymentStatus"],[203,45,172,37,"_x9"],[203,48,172,37],[204,6,172,37],[204,13,172,37,"_ref7"],[204,18,172,37],[204,19,172,37,"apply"],[204,24,172,37],[204,31,172,37,"arguments"],[204,40,172,37],[205,4,172,37],[206,2,172,37],[206,5,195,1],[208,2,197,0],[209,0,198,0],[210,0,199,0],[211,0,200,0],[212,2,201,7],[212,6,201,13,"getOrderStatistics"],[212,24,201,31],[212,27,201,31,"exports"],[212,34,201,31],[212,35,201,31,"getOrderStatistics"],[212,53,201,31],[213,4,201,31],[213,8,201,31,"_ref8"],[213,13,201,31],[213,20,201,31,"_asyncToGenerator2"],[213,38,201,31],[213,39,201,31,"default"],[213,46,201,31],[213,48,201,34],[213,61,201,46],[214,6,202,2],[214,10,202,6],[215,8,203,4],[215,12,203,10,"orders"],[215,18,203,16],[215,27,203,25,"getAllOrders"],[215,39,203,37],[215,40,203,38],[215,41,203,39],[216,8,205,4],[216,12,205,10,"stats"],[216,17,205,15],[216,20,205,18],[217,10,206,6,"totalOrders"],[217,21,206,17],[217,23,206,19,"orders"],[217,29,206,25],[217,30,206,26,"length"],[217,36,206,32],[218,10,207,6,"paidOrders"],[218,20,207,16],[218,22,207,18,"orders"],[218,28,207,24],[218,29,207,25,"filter"],[218,35,207,31],[218,36,207,32,"o"],[218,37,207,33],[218,41,207,37,"o"],[218,42,207,38],[218,43,207,39,"paymentStatus"],[218,56,207,52],[218,61,207,57],[218,67,207,63],[218,68,207,64],[218,69,207,65,"length"],[218,75,207,71],[219,10,208,6,"pendingOrders"],[219,23,208,19],[219,25,208,21,"orders"],[219,31,208,27],[219,32,208,28,"filter"],[219,38,208,34],[219,39,208,35,"o"],[219,40,208,36],[219,44,208,40,"o"],[219,45,208,41],[219,46,208,42,"paymentStatus"],[219,59,208,55],[219,64,208,60],[219,73,208,69],[219,74,208,70],[219,75,208,71,"length"],[219,81,208,77],[220,10,209,6,"totalRevenue"],[220,22,209,18],[220,24,209,20,"orders"],[220,30,209,26],[220,31,210,9,"filter"],[220,37,210,15],[220,38,210,16,"o"],[220,39,210,17],[220,43,210,21,"o"],[220,44,210,22],[220,45,210,23,"paymentStatus"],[220,58,210,36],[220,63,210,41],[220,69,210,47],[220,70,210,48],[220,71,211,9,"reduce"],[220,77,211,15],[220,78,211,16],[220,79,211,17,"sum"],[220,82,211,20],[220,84,211,22,"order"],[220,89,211,27],[220,94,211,32,"sum"],[220,97,211,35],[220,100,211,38,"order"],[220,105,211,43],[220,106,211,44,"totalAmount"],[220,117,211,55],[220,119,211,57],[220,120,211,58],[220,121,211,59],[221,10,212,6,"deliveredOrders"],[221,25,212,21],[221,27,212,23,"orders"],[221,33,212,29],[221,34,212,30,"filter"],[221,40,212,36],[221,41,212,37,"o"],[221,42,212,38],[221,46,212,42,"o"],[221,47,212,43],[221,48,212,44,"deliveryStatus"],[221,62,212,58],[221,67,212,63],[221,78,212,74],[221,79,212,75],[221,80,212,76,"length"],[222,8,213,4],[222,9,213,5],[223,8,215,4],[223,15,215,11,"stats"],[223,20,215,16],[224,6,216,2],[224,7,216,3],[224,8,216,4],[224,15,216,11,"error"],[224,20,216,16],[224,22,216,18],[225,8,217,4,"console"],[225,15,217,11],[225,16,217,12,"error"],[225,21,217,17],[225,22,217,18],[225,61,217,57],[225,63,217,59,"error"],[225,68,217,64],[225,69,217,65],[226,8,218,4],[226,14,218,10,"error"],[226,19,218,15],[227,6,219,2],[228,4,220,0],[228,5,220,1],[229,4,220,1],[229,20,201,13,"getOrderStatistics"],[229,38,201,31,"getOrderStatistics"],[229,39,201,31],[230,6,201,31],[230,13,201,31,"_ref8"],[230,18,201,31],[230,19,201,31,"apply"],[230,24,201,31],[230,31,201,31,"arguments"],[230,40,201,31],[231,4,201,31],[232,2,201,31],[232,5,220,1],[233,0,220,2],[233,3]],"functionMap":{"names":["<global>","createOrder","getUserOrders","querySnapshot.forEach$argument_0","getAllOrders","getOrderById","updateOrderPaymentStatus","updateOrderDeliveryStatus","getOrdersByPaymentStatus","getOrderStatistics","orders.filter$argument_0","orders.filter.reduce$argument_0"],"mappings":"AAA;2BCmB;CDmB;6BEO;0BCW;KDK;CFQ;4BIM;0BDO;KCK;CJQ;4BKO;CLkB;wCMS;CNc;yCOQ;CPa;wCQO;0BLW;KKK;CRO;kCSM;gCCM,+BD;mCCC,kCD;gBCE,+BD;gBEC,uCF;qCCC,qCD;CTQ"}},"type":"js/module"}]}