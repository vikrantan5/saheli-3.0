{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.buildMatchPatternFn = buildMatchPatternFn;\n  function buildMatchPatternFn(args) {\n    return function (string) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var matchResult = string.match(args.matchPattern);\n      if (!matchResult) return null;\n      var matchedString = matchResult[0];\n      var parseResult = string.match(args.parsePattern);\n      if (!parseResult) return null;\n      var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n\n      // [TODO] I challenge you to fix the type\n      value = options.valueCallback ? options.valueCallback(value) : value;\n      var rest = string.slice(matchedString.length);\n      return {\n        value,\n        rest\n      };\n    };\n  }\n});","lineCount":25,"map":[[6,2,1,7],[6,11,1,16,"buildMatchPatternFn"],[6,30,1,35,"buildMatchPatternFn"],[6,31,1,36,"args"],[6,35,1,40],[6,37,1,42],[7,4,2,2],[7,11,2,9],[7,21,2,10,"string"],[7,27,2,16],[7,29,2,35],[8,6,2,35],[8,10,2,18,"options"],[8,17,2,25],[8,20,2,25,"arguments"],[8,29,2,25],[8,30,2,25,"length"],[8,36,2,25],[8,44,2,25,"arguments"],[8,53,2,25],[8,61,2,25,"undefined"],[8,70,2,25],[8,73,2,25,"arguments"],[8,82,2,25],[8,88,2,28],[8,89,2,29],[8,90,2,30],[9,6,3,4],[9,10,3,10,"matchResult"],[9,21,3,21],[9,24,3,24,"string"],[9,30,3,30],[9,31,3,31,"match"],[9,36,3,36],[9,37,3,37,"args"],[9,41,3,41],[9,42,3,42,"matchPattern"],[9,54,3,54],[9,55,3,55],[10,6,4,4],[10,10,4,8],[10,11,4,9,"matchResult"],[10,22,4,20],[10,24,4,22],[10,31,4,29],[10,35,4,33],[11,6,5,4],[11,10,5,10,"matchedString"],[11,23,5,23],[11,26,5,26,"matchResult"],[11,37,5,37],[11,38,5,38],[11,39,5,39],[11,40,5,40],[12,6,7,4],[12,10,7,10,"parseResult"],[12,21,7,21],[12,24,7,24,"string"],[12,30,7,30],[12,31,7,31,"match"],[12,36,7,36],[12,37,7,37,"args"],[12,41,7,41],[12,42,7,42,"parsePattern"],[12,54,7,54],[12,55,7,55],[13,6,8,4],[13,10,8,8],[13,11,8,9,"parseResult"],[13,22,8,20],[13,24,8,22],[13,31,8,29],[13,35,8,33],[14,6,9,4],[14,10,9,8,"value"],[14,15,9,13],[14,18,9,16,"args"],[14,22,9,20],[14,23,9,21,"valueCallback"],[14,36,9,34],[14,39,10,8,"args"],[14,43,10,12],[14,44,10,13,"valueCallback"],[14,57,10,26],[14,58,10,27,"parseResult"],[14,69,10,38],[14,70,10,39],[14,71,10,40],[14,72,10,41],[14,73,10,42],[14,76,11,8,"parseResult"],[14,87,11,19],[14,88,11,20],[14,89,11,21],[14,90,11,22],[16,6,13,4],[17,6,14,4,"value"],[17,11,14,9],[17,14,14,12,"options"],[17,21,14,19],[17,22,14,20,"valueCallback"],[17,35,14,33],[17,38,14,36,"options"],[17,45,14,43],[17,46,14,44,"valueCallback"],[17,59,14,57],[17,60,14,58,"value"],[17,65,14,63],[17,66,14,64],[17,69,14,67,"value"],[17,74,14,72],[18,6,16,4],[18,10,16,10,"rest"],[18,14,16,14],[18,17,16,17,"string"],[18,23,16,23],[18,24,16,24,"slice"],[18,29,16,29],[18,30,16,30,"matchedString"],[18,43,16,43],[18,44,16,44,"length"],[18,50,16,50],[18,51,16,51],[19,6,18,4],[19,13,18,11],[20,8,18,13,"value"],[20,13,18,18],[21,8,18,20,"rest"],[22,6,18,25],[22,7,18,26],[23,4,19,2],[23,5,19,3],[24,2,20,0],[25,0,20,1],[25,3]],"functionMap":{"names":["<global>","buildMatchPatternFn","<anonymous>"],"mappings":"AAA,OC;SCC;GDiB;CDC"}},"type":"js/module"}]}