{"dependencies":[{"name":"./_lib/getRoundingMethod.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"LkiOAV1LQTQ7MnwpzKKtm1nDXGQ=","exportNames":["*"]}},{"name":"./differenceInMilliseconds.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":73,"index":138}}],"key":"0f+zS2N2TSzEh/XC/YTG1tV2DPQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.differenceInSeconds = differenceInSeconds;\n  var _getRoundingMethod = require(_dependencyMap[0], \"./_lib/getRoundingMethod.js\");\n  var _differenceInMilliseconds = require(_dependencyMap[1], \"./differenceInMilliseconds.js\");\n  /**\n   * The {@link differenceInSeconds} function options.\n   */\n\n  /**\n   * @name differenceInSeconds\n   * @category Second Helpers\n   * @summary Get the number of seconds between the given dates.\n   *\n   * @description\n   * Get the number of seconds between the given dates.\n   *\n   * @param laterDate - The later date\n   * @param earlierDate - The earlier date\n   * @param options - An object with options.\n   *\n   * @returns The number of seconds\n   *\n   * @example\n   * // How many seconds are between\n   * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n   * const result = differenceInSeconds(\n   *   new Date(2014, 6, 2, 12, 30, 20, 0),\n   *   new Date(2014, 6, 2, 12, 30, 7, 999)\n   * )\n   * //=> 12\n   */\n  function differenceInSeconds(laterDate, earlierDate, options) {\n    var diff = (0, _differenceInMilliseconds.differenceInMilliseconds)(laterDate, earlierDate) / 1000;\n    return (0, _getRoundingMethod.getRoundingMethod)(options?.roundingMethod)(diff);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = differenceInSeconds;\n});","lineCount":43,"map":[[7,2,1,0],[7,6,1,0,"_getRoundingMethod"],[7,24,1,0],[7,27,1,0,"require"],[7,34,1,0],[7,35,1,0,"_dependencyMap"],[7,49,1,0],[8,2,2,0],[8,6,2,0,"_differenceInMilliseconds"],[8,31,2,0],[8,34,2,0,"require"],[8,41,2,0],[8,42,2,0,"_dependencyMap"],[8,56,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,2,31,7],[36,11,31,16,"differenceInSeconds"],[36,30,31,35,"differenceInSeconds"],[36,31,31,36,"laterDate"],[36,40,31,45],[36,42,31,47,"earlierDate"],[36,53,31,58],[36,55,31,60,"options"],[36,62,31,67],[36,64,31,69],[37,4,32,2],[37,8,32,8,"diff"],[37,12,32,12],[37,15,32,15],[37,19,32,15,"differenceInMilliseconds"],[37,69,32,39],[37,71,32,40,"laterDate"],[37,80,32,49],[37,82,32,51,"earlierDate"],[37,93,32,62],[37,94,32,63],[37,97,32,66],[37,101,32,70],[38,4,33,2],[38,11,33,9],[38,15,33,9,"getRoundingMethod"],[38,51,33,26],[38,53,33,27,"options"],[38,60,33,34],[38,62,33,36,"roundingMethod"],[38,76,33,50],[38,77,33,51],[38,78,33,52,"diff"],[38,82,33,56],[38,83,33,57],[39,2,34,0],[41,2,36,0],[42,2,36,0],[42,6,36,0,"_default"],[42,14,36,0],[42,17,36,0,"exports"],[42,24,36,0],[42,25,36,0,"default"],[42,32,36,0],[42,35,37,15,"differenceInSeconds"],[42,54,37,34],[43,0,37,34],[43,3]],"functionMap":{"names":["<global>","differenceInSeconds"],"mappings":"AAA;OC8B;CDG"}},"type":"js/module"}]}