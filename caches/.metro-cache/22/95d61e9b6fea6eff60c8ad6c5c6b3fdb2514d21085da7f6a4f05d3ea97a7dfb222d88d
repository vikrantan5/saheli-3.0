{"dependencies":[{"name":"is-callable","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":32},"end":{"line":3,"column":39,"index":54}}],"key":"YREip3IyKdnq9dIJP97ubahRdn8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var isCallable = require(_dependencyMap[0], \"is-callable\");\n  var toStr = Object.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /** @type {<This, A extends readonly unknown[]>(arr: A, iterator: (this: This | void, value: A[number], index: number, arr: A) => void, receiver: This | undefined) => void} */\n  var forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (hasOwnProperty.call(array, i)) {\n        if (receiver == null) {\n          iterator(array[i], i, array);\n        } else {\n          iterator.call(receiver, array[i], i, array);\n        }\n      }\n    }\n  };\n\n  /** @type {<This, S extends string>(string: S, iterator: (this: This | void, value: S[number], index: number, string: S) => void, receiver: This | undefined) => void} */\n  var forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n      // no such thing as a sparse string.\n      if (receiver == null) {\n        iterator(string.charAt(i), i, string);\n      } else {\n        iterator.call(receiver, string.charAt(i), i, string);\n      }\n    }\n  };\n\n  /** @type {<This, O>(obj: O, iterator: (this: This | void, value: O[keyof O], index: keyof O, obj: O) => void, receiver: This | undefined) => void} */\n  var forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n      if (hasOwnProperty.call(object, k)) {\n        if (receiver == null) {\n          iterator(object[k], k, object);\n        } else {\n          iterator.call(receiver, object[k], k, object);\n        }\n      }\n    }\n  };\n\n  /** @type {(x: unknown) => x is readonly unknown[]} */\n  function isArray(x) {\n    return toStr.call(x) === '[object Array]';\n  }\n\n  /** @type {import('.')._internal} */\n  module.exports = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n      throw new TypeError('iterator must be a function');\n    }\n    var receiver;\n    if (arguments.length >= 3) {\n      receiver = thisArg;\n    }\n    if (isArray(list)) {\n      forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n      forEachString(list, iterator, receiver);\n    } else {\n      forEachObject(list, iterator, receiver);\n    }\n  };\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"isCallable"],[4,16,3,14],[4,19,3,17,"require"],[4,26,3,24],[4,27,3,24,"_dependencyMap"],[4,41,3,24],[4,59,3,38],[4,60,3,39],[5,2,5,0],[5,6,5,4,"toStr"],[5,11,5,9],[5,14,5,12,"Object"],[5,20,5,18],[5,21,5,19,"prototype"],[5,30,5,28],[5,31,5,29,"toString"],[5,39,5,37],[6,2,6,0],[6,6,6,4,"hasOwnProperty"],[6,20,6,18],[6,23,6,21,"Object"],[6,29,6,27],[6,30,6,28,"prototype"],[6,39,6,37],[6,40,6,38,"hasOwnProperty"],[6,54,6,52],[8,2,8,0],[9,2,9,0],[9,6,9,4,"forEachArray"],[9,18,9,16],[9,21,9,19],[9,30,9,28,"forEachArray"],[9,42,9,40,"forEachArray"],[9,43,9,41,"array"],[9,48,9,46],[9,50,9,48,"iterator"],[9,58,9,56],[9,60,9,58,"receiver"],[9,68,9,66],[9,70,9,68],[10,4,10,4],[10,9,10,9],[10,13,10,13,"i"],[10,14,10,14],[10,17,10,17],[10,18,10,18],[10,20,10,20,"len"],[10,23,10,23],[10,26,10,26,"array"],[10,31,10,31],[10,32,10,32,"length"],[10,38,10,38],[10,40,10,40,"i"],[10,41,10,41],[10,44,10,44,"len"],[10,47,10,47],[10,49,10,49,"i"],[10,50,10,50],[10,52,10,52],[10,54,10,54],[11,6,11,8],[11,10,11,12,"hasOwnProperty"],[11,24,11,26],[11,25,11,27,"call"],[11,29,11,31],[11,30,11,32,"array"],[11,35,11,37],[11,37,11,39,"i"],[11,38,11,40],[11,39,11,41],[11,41,11,43],[12,8,12,12],[12,12,12,16,"receiver"],[12,20,12,24],[12,24,12,28],[12,28,12,32],[12,30,12,34],[13,10,13,16,"iterator"],[13,18,13,24],[13,19,13,25,"array"],[13,24,13,30],[13,25,13,31,"i"],[13,26,13,32],[13,27,13,33],[13,29,13,35,"i"],[13,30,13,36],[13,32,13,38,"array"],[13,37,13,43],[13,38,13,44],[14,8,14,12],[14,9,14,13],[14,15,14,19],[15,10,15,16,"iterator"],[15,18,15,24],[15,19,15,25,"call"],[15,23,15,29],[15,24,15,30,"receiver"],[15,32,15,38],[15,34,15,40,"array"],[15,39,15,45],[15,40,15,46,"i"],[15,41,15,47],[15,42,15,48],[15,44,15,50,"i"],[15,45,15,51],[15,47,15,53,"array"],[15,52,15,58],[15,53,15,59],[16,8,16,12],[17,6,17,8],[18,4,18,4],[19,2,19,0],[19,3,19,1],[21,2,21,0],[22,2,22,0],[22,6,22,4,"forEachString"],[22,19,22,17],[22,22,22,20],[22,31,22,29,"forEachString"],[22,44,22,42,"forEachString"],[22,45,22,43,"string"],[22,51,22,49],[22,53,22,51,"iterator"],[22,61,22,59],[22,63,22,61,"receiver"],[22,71,22,69],[22,73,22,71],[23,4,23,4],[23,9,23,9],[23,13,23,13,"i"],[23,14,23,14],[23,17,23,17],[23,18,23,18],[23,20,23,20,"len"],[23,23,23,23],[23,26,23,26,"string"],[23,32,23,32],[23,33,23,33,"length"],[23,39,23,39],[23,41,23,41,"i"],[23,42,23,42],[23,45,23,45,"len"],[23,48,23,48],[23,50,23,50,"i"],[23,51,23,51],[23,53,23,53],[23,55,23,55],[24,6,24,8],[25,6,25,8],[25,10,25,12,"receiver"],[25,18,25,20],[25,22,25,24],[25,26,25,28],[25,28,25,30],[26,8,26,12,"iterator"],[26,16,26,20],[26,17,26,21,"string"],[26,23,26,27],[26,24,26,28,"charAt"],[26,30,26,34],[26,31,26,35,"i"],[26,32,26,36],[26,33,26,37],[26,35,26,39,"i"],[26,36,26,40],[26,38,26,42,"string"],[26,44,26,48],[26,45,26,49],[27,6,27,8],[27,7,27,9],[27,13,27,15],[28,8,28,12,"iterator"],[28,16,28,20],[28,17,28,21,"call"],[28,21,28,25],[28,22,28,26,"receiver"],[28,30,28,34],[28,32,28,36,"string"],[28,38,28,42],[28,39,28,43,"charAt"],[28,45,28,49],[28,46,28,50,"i"],[28,47,28,51],[28,48,28,52],[28,50,28,54,"i"],[28,51,28,55],[28,53,28,57,"string"],[28,59,28,63],[28,60,28,64],[29,6,29,8],[30,4,30,4],[31,2,31,0],[31,3,31,1],[33,2,33,0],[34,2,34,0],[34,6,34,4,"forEachObject"],[34,19,34,17],[34,22,34,20],[34,31,34,29,"forEachObject"],[34,44,34,42,"forEachObject"],[34,45,34,43,"object"],[34,51,34,49],[34,53,34,51,"iterator"],[34,61,34,59],[34,63,34,61,"receiver"],[34,71,34,69],[34,73,34,71],[35,4,35,4],[35,9,35,9],[35,13,35,13,"k"],[35,14,35,14],[35,18,35,18,"object"],[35,24,35,24],[35,26,35,26],[36,6,36,8],[36,10,36,12,"hasOwnProperty"],[36,24,36,26],[36,25,36,27,"call"],[36,29,36,31],[36,30,36,32,"object"],[36,36,36,38],[36,38,36,40,"k"],[36,39,36,41],[36,40,36,42],[36,42,36,44],[37,8,37,12],[37,12,37,16,"receiver"],[37,20,37,24],[37,24,37,28],[37,28,37,32],[37,30,37,34],[38,10,38,16,"iterator"],[38,18,38,24],[38,19,38,25,"object"],[38,25,38,31],[38,26,38,32,"k"],[38,27,38,33],[38,28,38,34],[38,30,38,36,"k"],[38,31,38,37],[38,33,38,39,"object"],[38,39,38,45],[38,40,38,46],[39,8,39,12],[39,9,39,13],[39,15,39,19],[40,10,40,16,"iterator"],[40,18,40,24],[40,19,40,25,"call"],[40,23,40,29],[40,24,40,30,"receiver"],[40,32,40,38],[40,34,40,40,"object"],[40,40,40,46],[40,41,40,47,"k"],[40,42,40,48],[40,43,40,49],[40,45,40,51,"k"],[40,46,40,52],[40,48,40,54,"object"],[40,54,40,60],[40,55,40,61],[41,8,41,12],[42,6,42,8],[43,4,43,4],[44,2,44,0],[44,3,44,1],[46,2,46,0],[47,2,47,0],[47,11,47,9,"isArray"],[47,18,47,16,"isArray"],[47,19,47,17,"x"],[47,20,47,18],[47,22,47,20],[48,4,48,4],[48,11,48,11,"toStr"],[48,16,48,16],[48,17,48,17,"call"],[48,21,48,21],[48,22,48,22,"x"],[48,23,48,23],[48,24,48,24],[48,29,48,29],[48,45,48,45],[49,2,49,0],[51,2,51,0],[52,2,52,0,"module"],[52,8,52,6],[52,9,52,7,"exports"],[52,16,52,14],[52,19,52,17],[52,28,52,26,"forEach"],[52,35,52,33,"forEach"],[52,36,52,34,"list"],[52,40,52,38],[52,42,52,40,"iterator"],[52,50,52,48],[52,52,52,50,"thisArg"],[52,59,52,57],[52,61,52,59],[53,4,53,4],[53,8,53,8],[53,9,53,9,"isCallable"],[53,19,53,19],[53,20,53,20,"iterator"],[53,28,53,28],[53,29,53,29],[53,31,53,31],[54,6,54,8],[54,12,54,14],[54,16,54,18,"TypeError"],[54,25,54,27],[54,26,54,28],[54,55,54,57],[54,56,54,58],[55,4,55,4],[56,4,57,4],[56,8,57,8,"receiver"],[56,16,57,16],[57,4,58,4],[57,8,58,8,"arguments"],[57,17,58,17],[57,18,58,18,"length"],[57,24,58,24],[57,28,58,28],[57,29,58,29],[57,31,58,31],[58,6,59,8,"receiver"],[58,14,59,16],[58,17,59,19,"thisArg"],[58,24,59,26],[59,4,60,4],[60,4,62,4],[60,8,62,8,"isArray"],[60,15,62,15],[60,16,62,16,"list"],[60,20,62,20],[60,21,62,21],[60,23,62,23],[61,6,63,8,"forEachArray"],[61,18,63,20],[61,19,63,21,"list"],[61,23,63,25],[61,25,63,27,"iterator"],[61,33,63,35],[61,35,63,37,"receiver"],[61,43,63,45],[61,44,63,46],[62,4,64,4],[62,5,64,5],[62,11,64,11],[62,15,64,15],[62,22,64,22,"list"],[62,26,64,26],[62,31,64,31],[62,39,64,39],[62,41,64,41],[63,6,65,8,"forEachString"],[63,19,65,21],[63,20,65,22,"list"],[63,24,65,26],[63,26,65,28,"iterator"],[63,34,65,36],[63,36,65,38,"receiver"],[63,44,65,46],[63,45,65,47],[64,4,66,4],[64,5,66,5],[64,11,66,11],[65,6,67,8,"forEachObject"],[65,19,67,21],[65,20,67,22,"list"],[65,24,67,26],[65,26,67,28,"iterator"],[65,34,67,36],[65,36,67,38,"receiver"],[65,44,67,46],[65,45,67,47],[66,4,68,4],[67,2,69,0],[67,3,69,1],[68,0,69,2],[68,3]],"functionMap":{"names":["<global>","forEachArray","forEachString","forEachObject","isArray","forEach"],"mappings":"AAA;mBCQ;CDU;oBEG;CFS;oBGG;CHU;AIG;CJE;iBKG;CLiB"}},"type":"js/module"}]}