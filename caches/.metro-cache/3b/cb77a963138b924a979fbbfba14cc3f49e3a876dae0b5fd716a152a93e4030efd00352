{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./NotificationScheduler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":60,"index":117}}],"key":"2z96lx/8U+vMEPJmMI1AQnQjTYQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = cancelAllScheduledNotificationsAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _NotificationScheduler = _interopRequireDefault(require(_dependencyMap[3], \"./NotificationScheduler\"));\n  /**\n   * Cancels all scheduled notifications.\n   * @return A Promise that resolves once all the scheduled notifications are successfully canceled, or if there are no scheduled notifications.\n   * @header schedule\n   */\n  function cancelAllScheduledNotificationsAsync() {\n    return _cancelAllScheduledNotificationsAsync.apply(this, arguments);\n  }\n  function _cancelAllScheduledNotificationsAsync() {\n    _cancelAllScheduledNotificationsAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (!_NotificationScheduler.default.cancelAllScheduledNotificationsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n      }\n      return yield _NotificationScheduler.default.cancelAllScheduledNotificationsAsync();\n    });\n    return _cancelAllScheduledNotificationsAsync.apply(this, arguments);\n  }\n});","lineCount":27,"map":[[8,2,1,0],[8,6,1,0,"_expoModulesCore"],[8,22,1,0],[8,25,1,0,"require"],[8,32,1,0],[8,33,1,0,"_dependencyMap"],[8,47,1,0],[9,2,2,0],[9,6,2,0,"_NotificationScheduler"],[9,28,2,0],[9,31,2,0,"_interopRequireDefault"],[9,53,2,0],[9,54,2,0,"require"],[9,61,2,0],[9,62,2,0,"_dependencyMap"],[9,76,2,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,2,3,0],[15,11,8,30,"cancelAllScheduledNotificationsAsync"],[15,47,8,66,"cancelAllScheduledNotificationsAsync"],[15,48,8,66],[16,4,8,66],[16,11,8,66,"_cancelAllScheduledNotificationsAsync"],[16,48,8,66],[16,49,8,66,"apply"],[16,54,8,66],[16,61,8,66,"arguments"],[16,70,8,66],[17,2,8,66],[18,2,8,66],[18,11,8,66,"_cancelAllScheduledNotificationsAsync"],[18,49,8,66],[19,4,8,66,"_cancelAllScheduledNotificationsAsync"],[19,41,8,66],[19,48,8,66,"_asyncToGenerator2"],[19,66,8,66],[19,67,8,66,"default"],[19,74,8,66],[19,76,8,15],[19,89,8,69],[20,6,9,4],[20,10,9,8],[20,11,9,9,"NotificationScheduler"],[20,41,9,30],[20,42,9,31,"cancelAllScheduledNotificationsAsync"],[20,78,9,67],[20,80,9,69],[21,8,10,8],[21,14,10,14],[21,18,10,18,"UnavailabilityError"],[21,54,10,37],[21,55,10,38],[21,70,10,53],[21,72,10,55],[21,110,10,93],[21,111,10,94],[22,6,11,4],[23,6,12,4],[23,19,12,17,"NotificationScheduler"],[23,49,12,38],[23,50,12,39,"cancelAllScheduledNotificationsAsync"],[23,86,12,75],[23,87,12,76],[23,88,12,77],[24,4,13,0],[24,5,13,1],[25,4,13,1],[25,11,13,1,"_cancelAllScheduledNotificationsAsync"],[25,48,13,1],[25,49,13,1,"apply"],[25,54,13,1],[25,61,13,1,"arguments"],[25,70,13,1],[26,2,13,1],[27,0,13,1],[27,3]],"functionMap":{"names":["<global>","cancelAllScheduledNotificationsAsync"],"mappings":"AAA;eCO;CDK"}},"type":"js/module"}]}