{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":37,"index":92}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addMinutes = addMinutes;\n  exports.default = void 0;\n  var _constants = require(_dependencyMap[0], \"./constants.js\");\n  var _toDate = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link addMinutes} function options.\n   */\n\n  /**\n   * @name addMinutes\n   * @category Minute Helpers\n   * @summary Add the specified number of minutes to the given date.\n   *\n   * @description\n   * Add the specified number of minutes to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of minutes to be added.\n   * @param options - An object with options\n   *\n   * @returns The new date with the minutes added\n   *\n   * @example\n   * // Add 30 minutes to 10 July 2014 12:00:00:\n   * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n   * //=> Thu Jul 10 2014 12:30:00\n   */\n  function addMinutes(date, amount, options) {\n    var _date = (0, _toDate.toDate)(date, options?.in);\n    _date.setTime(_date.getTime() + amount * _constants.millisecondsInMinute);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = addMinutes;\n});","lineCount":43,"map":[[7,2,1,0],[7,6,1,0,"_constants"],[7,16,1,0],[7,19,1,0,"require"],[7,26,1,0],[7,27,1,0,"_dependencyMap"],[7,41,1,0],[8,2,2,0],[8,6,2,0,"_toDate"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,2,30,7],[35,11,30,16,"addMinutes"],[35,21,30,26,"addMinutes"],[35,22,30,27,"date"],[35,26,30,31],[35,28,30,33,"amount"],[35,34,30,39],[35,36,30,41,"options"],[35,43,30,48],[35,45,30,50],[36,4,31,2],[36,8,31,8,"_date"],[36,13,31,13],[36,16,31,16],[36,20,31,16,"toDate"],[36,34,31,22],[36,36,31,23,"date"],[36,40,31,27],[36,42,31,29,"options"],[36,49,31,36],[36,51,31,38,"in"],[36,53,31,40],[36,54,31,41],[37,4,32,2,"_date"],[37,9,32,7],[37,10,32,8,"setTime"],[37,17,32,15],[37,18,32,16,"_date"],[37,23,32,21],[37,24,32,22,"getTime"],[37,31,32,29],[37,32,32,30],[37,33,32,31],[37,36,32,34,"amount"],[37,42,32,40],[37,45,32,43,"millisecondsInMinute"],[37,76,32,63],[37,77,32,64],[38,4,33,2],[38,11,33,9,"_date"],[38,16,33,14],[39,2,34,0],[41,2,36,0],[42,2,36,0],[42,6,36,0,"_default"],[42,14,36,0],[42,17,36,0,"exports"],[42,24,36,0],[42,25,36,0,"default"],[42,32,36,0],[42,35,37,15,"addMinutes"],[42,45,37,25],[43,0,37,25],[43,3]],"functionMap":{"names":["<global>","addMinutes"],"mappings":"AAA;OC6B;CDI"}},"type":"js/module"}]}