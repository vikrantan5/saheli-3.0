{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"aU3Lrys8xTVpYSDJal2nhppojC8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"]}},{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"]}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":40},"end":{"line":3,"column":43,"index":83}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.QuarterParser = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _Parser2 = require(_dependencyMap[6], \"../Parser.js\");\n  var _utils = require(_dependencyMap[7], \"../utils.js\");\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var QuarterParser = exports.QuarterParser = /*#__PURE__*/function (_Parser) {\n    function QuarterParser() {\n      var _this;\n      (0, _classCallCheck2.default)(this, QuarterParser);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, QuarterParser, [...args]);\n      _this.priority = 120;\n      _this.incompatibleTokens = [\"Y\", \"R\", \"q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n      return _this;\n    }\n    (0, _inherits2.default)(QuarterParser, _Parser);\n    return (0, _createClass2.default)(QuarterParser, [{\n      key: \"parse\",\n      value: function parse(dateString, token, match) {\n        switch (token) {\n          // 1, 2, 3, 4\n          case \"Q\":\n          case \"QQ\":\n            // 01, 02, 03, 04\n            return (0, _utils.parseNDigits)(token.length, dateString);\n          // 1st, 2nd, 3rd, 4th\n          case \"Qo\":\n            return match.ordinalNumber(dateString, {\n              unit: \"quarter\"\n            });\n          // Q1, Q2, Q3, Q4\n          case \"QQQ\":\n            return match.quarter(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            }) || match.quarter(dateString, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n\n          // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n          case \"QQQQQ\":\n            return match.quarter(dateString, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          // 1st quarter, 2nd quarter, ...\n          case \"QQQQ\":\n          default:\n            return match.quarter(dateString, {\n              width: \"wide\",\n              context: \"formatting\"\n            }) || match.quarter(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            }) || match.quarter(dateString, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n        }\n      }\n    }, {\n      key: \"validate\",\n      value: function validate(_date, value) {\n        return value >= 1 && value <= 4;\n      }\n    }, {\n      key: \"set\",\n      value: function set(date, _flags, value) {\n        date.setMonth((value - 1) * 3, 1);\n        date.setHours(0, 0, 0, 0);\n        return date;\n      }\n    }]);\n  }(_Parser2.Parser);\n});","lineCount":88,"map":[[12,2,1,0],[12,6,1,0,"_Parser2"],[12,14,1,0],[12,17,1,0,"require"],[12,24,1,0],[12,25,1,0,"_dependencyMap"],[12,39,1,0],[13,2,3,0],[13,6,3,0,"_utils"],[13,12,3,0],[13,15,3,0,"require"],[13,22,3,0],[13,23,3,0,"_dependencyMap"],[13,37,3,0],[14,2,3,43],[14,11,3,43,"_callSuper"],[14,22,3,43,"t"],[14,23,3,43],[14,25,3,43,"o"],[14,26,3,43],[14,28,3,43,"e"],[14,29,3,43],[14,40,3,43,"o"],[14,41,3,43],[14,48,3,43,"_getPrototypeOf2"],[14,64,3,43],[14,65,3,43,"default"],[14,72,3,43],[14,74,3,43,"o"],[14,75,3,43],[14,82,3,43,"_possibleConstructorReturn2"],[14,109,3,43],[14,110,3,43,"default"],[14,117,3,43],[14,119,3,43,"t"],[14,120,3,43],[14,122,3,43,"_isNativeReflectConstruct"],[14,147,3,43],[14,152,3,43,"Reflect"],[14,159,3,43],[14,160,3,43,"construct"],[14,169,3,43],[14,170,3,43,"o"],[14,171,3,43],[14,173,3,43,"e"],[14,174,3,43],[14,186,3,43,"_getPrototypeOf2"],[14,202,3,43],[14,203,3,43,"default"],[14,210,3,43],[14,212,3,43,"t"],[14,213,3,43],[14,215,3,43,"constructor"],[14,226,3,43],[14,230,3,43,"o"],[14,231,3,43],[14,232,3,43,"apply"],[14,237,3,43],[14,238,3,43,"t"],[14,239,3,43],[14,241,3,43,"e"],[14,242,3,43],[15,2,3,43],[15,11,3,43,"_isNativeReflectConstruct"],[15,37,3,43],[15,51,3,43,"t"],[15,52,3,43],[15,56,3,43,"Boolean"],[15,63,3,43],[15,64,3,43,"prototype"],[15,73,3,43],[15,74,3,43,"valueOf"],[15,81,3,43],[15,82,3,43,"call"],[15,86,3,43],[15,87,3,43,"Reflect"],[15,94,3,43],[15,95,3,43,"construct"],[15,104,3,43],[15,105,3,43,"Boolean"],[15,112,3,43],[15,145,3,43,"t"],[15,146,3,43],[15,159,3,43,"_isNativeReflectConstruct"],[15,184,3,43],[15,196,3,43,"_isNativeReflectConstruct"],[15,197,3,43],[15,210,3,43,"t"],[15,211,3,43],[16,2,3,43],[16,6,5,13,"QuarterParser"],[16,19,5,26],[16,22,5,26,"exports"],[16,29,5,26],[16,30,5,26,"QuarterParser"],[16,43,5,26],[16,69,5,26,"_Parser"],[16,76,5,26],[17,4,5,26],[17,13,5,26,"QuarterParser"],[17,27,5,26],[18,6,5,26],[18,10,5,26,"_this"],[18,15,5,26],[19,6,5,26],[19,10,5,26,"_classCallCheck2"],[19,26,5,26],[19,27,5,26,"default"],[19,34,5,26],[19,42,5,26,"QuarterParser"],[19,55,5,26],[20,6,5,26],[20,15,5,26,"_len"],[20,19,5,26],[20,22,5,26,"arguments"],[20,31,5,26],[20,32,5,26,"length"],[20,38,5,26],[20,40,5,26,"args"],[20,44,5,26],[20,51,5,26,"Array"],[20,56,5,26],[20,57,5,26,"_len"],[20,61,5,26],[20,64,5,26,"_key"],[20,68,5,26],[20,74,5,26,"_key"],[20,78,5,26],[20,81,5,26,"_len"],[20,85,5,26],[20,87,5,26,"_key"],[20,91,5,26],[21,8,5,26,"args"],[21,12,5,26],[21,13,5,26,"_key"],[21,17,5,26],[21,21,5,26,"arguments"],[21,30,5,26],[21,31,5,26,"_key"],[21,35,5,26],[22,6,5,26],[23,6,5,26,"_this"],[23,11,5,26],[23,14,5,26,"_callSuper"],[23,24,5,26],[23,31,5,26,"QuarterParser"],[23,44,5,26],[23,50,5,26,"args"],[23,54,5,26],[24,6,5,26,"_this"],[24,11,5,26],[24,12,6,2,"priority"],[24,20,6,10],[24,23,6,13],[24,26,6,16],[25,6,6,16,"_this"],[25,11,6,16],[25,12,66,2,"incompatibleTokens"],[25,30,66,20],[25,33,66,23],[25,34,67,4],[25,37,67,7],[25,39,68,4],[25,42,68,7],[25,44,69,4],[25,47,69,7],[25,49,70,4],[25,52,70,7],[25,54,71,4],[25,57,71,7],[25,59,72,4],[25,62,72,7],[25,64,73,4],[25,67,73,7],[25,69,74,4],[25,72,74,7],[25,74,75,4],[25,77,75,7],[25,79,76,4],[25,82,76,7],[25,84,77,4],[25,87,77,7],[25,89,78,4],[25,92,78,7],[25,94,79,4],[25,97,79,7],[25,99,80,4],[25,102,80,7],[25,103,81,3],[26,6,81,3],[26,13,81,3,"_this"],[26,18,81,3],[27,4,81,3],[28,4,81,3],[28,8,81,3,"_inherits2"],[28,18,81,3],[28,19,81,3,"default"],[28,26,81,3],[28,28,81,3,"QuarterParser"],[28,41,81,3],[28,43,81,3,"_Parser"],[28,50,81,3],[29,4,81,3],[29,15,81,3,"_createClass2"],[29,28,81,3],[29,29,81,3,"default"],[29,36,81,3],[29,38,81,3,"QuarterParser"],[29,51,81,3],[30,6,81,3,"key"],[30,9,81,3],[31,6,81,3,"value"],[31,11,81,3],[31,13,8,2],[31,22,8,2,"parse"],[31,27,8,7,"parse"],[31,28,8,8,"dateString"],[31,38,8,18],[31,40,8,20,"token"],[31,45,8,25],[31,47,8,27,"match"],[31,52,8,32],[31,54,8,34],[32,8,9,4],[32,16,9,12,"token"],[32,21,9,17],[33,10,10,6],[34,10,11,6],[34,15,11,11],[34,18,11,14],[35,10,12,6],[35,15,12,11],[35,19,12,15],[36,12,12,17],[37,12,13,8],[37,19,13,15],[37,23,13,15,"parseNDigits"],[37,42,13,27],[37,44,13,28,"token"],[37,49,13,33],[37,50,13,34,"length"],[37,56,13,40],[37,58,13,42,"dateString"],[37,68,13,52],[37,69,13,53],[38,10,14,6],[39,10,15,6],[39,15,15,11],[39,19,15,15],[40,12,16,8],[40,19,16,15,"match"],[40,24,16,20],[40,25,16,21,"ordinalNumber"],[40,38,16,34],[40,39,16,35,"dateString"],[40,49,16,45],[40,51,16,47],[41,14,16,49,"unit"],[41,18,16,53],[41,20,16,55],[42,12,16,65],[42,13,16,66],[42,14,16,67],[43,10,17,6],[44,10,18,6],[44,15,18,11],[44,20,18,16],[45,12,19,8],[45,19,20,10,"match"],[45,24,20,15],[45,25,20,16,"quarter"],[45,32,20,23],[45,33,20,24,"dateString"],[45,43,20,34],[45,45,20,36],[46,14,21,12,"width"],[46,19,21,17],[46,21,21,19],[46,34,21,32],[47,14,22,12,"context"],[47,21,22,19],[47,23,22,21],[48,12,23,10],[48,13,23,11],[48,14,23,12],[48,18,24,10,"match"],[48,23,24,15],[48,24,24,16,"quarter"],[48,31,24,23],[48,32,24,24,"dateString"],[48,42,24,34],[48,44,24,36],[49,14,25,12,"width"],[49,19,25,17],[49,21,25,19],[49,29,25,27],[50,14,26,12,"context"],[50,21,26,19],[50,23,26,21],[51,12,27,10],[51,13,27,11],[51,14,27,12],[53,10,30,6],[54,10,31,6],[54,15,31,11],[54,22,31,18],[55,12,32,8],[55,19,32,15,"match"],[55,24,32,20],[55,25,32,21,"quarter"],[55,32,32,28],[55,33,32,29,"dateString"],[55,43,32,39],[55,45,32,41],[56,14,33,10,"width"],[56,19,33,15],[56,21,33,17],[56,29,33,25],[57,14,34,10,"context"],[57,21,34,17],[57,23,34,19],[58,12,35,8],[58,13,35,9],[58,14,35,10],[59,10,36,6],[60,10,37,6],[60,15,37,11],[60,21,37,17],[61,10,38,6],[62,12,39,8],[62,19,40,10,"match"],[62,24,40,15],[62,25,40,16,"quarter"],[62,32,40,23],[62,33,40,24,"dateString"],[62,43,40,34],[62,45,40,36],[63,14,41,12,"width"],[63,19,41,17],[63,21,41,19],[63,27,41,25],[64,14,42,12,"context"],[64,21,42,19],[64,23,42,21],[65,12,43,10],[65,13,43,11],[65,14,43,12],[65,18,44,10,"match"],[65,23,44,15],[65,24,44,16,"quarter"],[65,31,44,23],[65,32,44,24,"dateString"],[65,42,44,34],[65,44,44,36],[66,14,45,12,"width"],[66,19,45,17],[66,21,45,19],[66,34,45,32],[67,14,46,12,"context"],[67,21,46,19],[67,23,46,21],[68,12,47,10],[68,13,47,11],[68,14,47,12],[68,18,48,10,"match"],[68,23,48,15],[68,24,48,16,"quarter"],[68,31,48,23],[68,32,48,24,"dateString"],[68,42,48,34],[68,44,48,36],[69,14,49,12,"width"],[69,19,49,17],[69,21,49,19],[69,29,49,27],[70,14,50,12,"context"],[70,21,50,19],[70,23,50,21],[71,12,51,10],[71,13,51,11],[71,14,51,12],[72,8,53,4],[73,6,54,2],[74,4,54,3],[75,6,54,3,"key"],[75,9,54,3],[76,6,54,3,"value"],[76,11,54,3],[76,13,56,2],[76,22,56,2,"validate"],[76,30,56,10,"validate"],[76,31,56,11,"_date"],[76,36,56,16],[76,38,56,18,"value"],[76,43,56,23],[76,45,56,25],[77,8,57,4],[77,15,57,11,"value"],[77,20,57,16],[77,24,57,20],[77,25,57,21],[77,29,57,25,"value"],[77,34,57,30],[77,38,57,34],[77,39,57,35],[78,6,58,2],[79,4,58,3],[80,6,58,3,"key"],[80,9,58,3],[81,6,58,3,"value"],[81,11,58,3],[81,13,60,2],[81,22,60,2,"set"],[81,25,60,5,"set"],[81,26,60,6,"date"],[81,30,60,10],[81,32,60,12,"_flags"],[81,38,60,18],[81,40,60,20,"value"],[81,45,60,25],[81,47,60,27],[82,8,61,4,"date"],[82,12,61,8],[82,13,61,9,"setMonth"],[82,21,61,17],[82,22,61,18],[82,23,61,19,"value"],[82,28,61,24],[82,31,61,27],[82,32,61,28],[82,36,61,32],[82,37,61,33],[82,39,61,35],[82,40,61,36],[82,41,61,37],[83,8,62,4,"date"],[83,12,62,8],[83,13,62,9,"setHours"],[83,21,62,17],[83,22,62,18],[83,23,62,19],[83,25,62,21],[83,26,62,22],[83,28,62,24],[83,29,62,25],[83,31,62,27],[83,32,62,28],[83,33,62,29],[84,8,63,4],[84,15,63,11,"date"],[84,19,63,15],[85,6,64,2],[86,4,64,3],[87,2,64,3],[87,4,5,35,"Parser"],[87,19,5,41],[88,0,5,41],[88,3]],"functionMap":{"names":["<global>","QuarterParser","parse","validate","set"],"mappings":"AAA;OCI;ECG;GD8C;EEE;GFE;EGE;GHI;CDkB"}},"type":"js/module"}]}