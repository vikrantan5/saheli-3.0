{"dependencies":[{"name":"./_lib/defaultOptions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"RLyj7w3ZPZGGUSjkcz/7nwwn2xo=","exportNames":["*"]}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":51,"index":113}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}},{"name":"./getWeekYear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":47,"index":161}}],"key":"sBnJQp3r0YtN7AokusyKf1vzRG4=","exportNames":["*"]}},{"name":"./startOfWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":47,"index":209}}],"key":"P3QLf1gnhZwOwCLzrccpsspoyVY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.startOfWeekYear = startOfWeekYear;\n  var _defaultOptions = require(_dependencyMap[0], \"./_lib/defaultOptions.js\");\n  var _constructFrom = require(_dependencyMap[1], \"./constructFrom.js\");\n  var _getWeekYear = require(_dependencyMap[2], \"./getWeekYear.js\");\n  var _startOfWeek = require(_dependencyMap[3], \"./startOfWeek.js\");\n  /**\n   * The {@link startOfWeekYear} function options.\n   */\n\n  /**\n   * @name startOfWeekYear\n   * @category Week-Numbering Year Helpers\n   * @summary Return the start of a local week-numbering year for the given date.\n   *\n   * @description\n   * Return the start of a local week-numbering year.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type.\n   *\n   * @param date - The original date\n   * @param options - An object with options\n   *\n   * @returns The start of a week-numbering year\n   *\n   * @example\n   * // The start of an a week-numbering year for 2 July 2005 with default settings:\n   * const result = startOfWeekYear(new Date(2005, 6, 2))\n   * //=> Sun Dec 26 2004 00:00:00\n   *\n   * @example\n   * // The start of a week-numbering year for 2 July 2005\n   * // if Monday is the first day of week\n   * // and 4 January is always in the first week of the year:\n   * const result = startOfWeekYear(new Date(2005, 6, 2), {\n   *   weekStartsOn: 1,\n   *   firstWeekContainsDate: 4\n   * })\n   * //=> Mon Jan 03 2005 00:00:00\n   */\n  function startOfWeekYear(date, options) {\n    var defaultOptions = (0, _defaultOptions.getDefaultOptions)();\n    var firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1;\n    var year = (0, _getWeekYear.getWeekYear)(date, options);\n    var firstWeek = (0, _constructFrom.constructFrom)(options?.in || date, 0);\n    firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n    firstWeek.setHours(0, 0, 0, 0);\n    var _date = (0, _startOfWeek.startOfWeek)(firstWeek, options);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = startOfWeekYear;\n});","lineCount":65,"map":[[7,2,1,0],[7,6,1,0,"_defaultOptions"],[7,21,1,0],[7,24,1,0,"require"],[7,31,1,0],[7,32,1,0,"_dependencyMap"],[7,46,1,0],[8,2,2,0],[8,6,2,0,"_constructFrom"],[8,20,2,0],[8,23,2,0,"require"],[8,30,2,0],[8,31,2,0,"_dependencyMap"],[8,45,2,0],[9,2,3,0],[9,6,3,0,"_getWeekYear"],[9,18,3,0],[9,21,3,0,"require"],[9,28,3,0],[9,29,3,0,"_dependencyMap"],[9,43,3,0],[10,2,4,0],[10,6,4,0,"_startOfWeek"],[10,18,4,0],[10,21,4,0,"require"],[10,28,4,0],[10,29,4,0,"_dependencyMap"],[10,43,4,0],[11,2,6,0],[12,0,7,0],[13,0,8,0],[15,2,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,2,47,7],[52,11,47,16,"startOfWeekYear"],[52,26,47,31,"startOfWeekYear"],[52,27,47,32,"date"],[52,31,47,36],[52,33,47,38,"options"],[52,40,47,45],[52,42,47,47],[53,4,48,2],[53,8,48,8,"defaultOptions"],[53,22,48,22],[53,25,48,25],[53,29,48,25,"getDefaultOptions"],[53,62,48,42],[53,64,48,43],[53,65,48,44],[54,4,49,2],[54,8,49,8,"firstWeekContainsDate"],[54,29,49,29],[54,32,50,4,"options"],[54,39,50,11],[54,41,50,13,"firstWeekContainsDate"],[54,62,50,34],[54,66,51,4,"options"],[54,73,51,11],[54,75,51,13,"locale"],[54,81,51,19],[54,83,51,21,"options"],[54,90,51,28],[54,92,51,30,"firstWeekContainsDate"],[54,113,51,51],[54,117,52,4,"defaultOptions"],[54,131,52,18],[54,132,52,19,"firstWeekContainsDate"],[54,153,52,40],[54,157,53,4,"defaultOptions"],[54,171,53,18],[54,172,53,19,"locale"],[54,178,53,25],[54,180,53,27,"options"],[54,187,53,34],[54,189,53,36,"firstWeekContainsDate"],[54,210,53,57],[54,214,54,4],[54,215,54,5],[55,4,56,2],[55,8,56,8,"year"],[55,12,56,12],[55,15,56,15],[55,19,56,15,"getWeekYear"],[55,43,56,26],[55,45,56,27,"date"],[55,49,56,31],[55,51,56,33,"options"],[55,58,56,40],[55,59,56,41],[56,4,57,2],[56,8,57,8,"firstWeek"],[56,17,57,17],[56,20,57,20],[56,24,57,20,"constructFrom"],[56,52,57,33],[56,54,57,34,"options"],[56,61,57,41],[56,63,57,43,"in"],[56,65,57,45],[56,69,57,49,"date"],[56,73,57,53],[56,75,57,55],[56,76,57,56],[56,77,57,57],[57,4,58,2,"firstWeek"],[57,13,58,11],[57,14,58,12,"setFullYear"],[57,25,58,23],[57,26,58,24,"year"],[57,30,58,28],[57,32,58,30],[57,33,58,31],[57,35,58,33,"firstWeekContainsDate"],[57,56,58,54],[57,57,58,55],[58,4,59,2,"firstWeek"],[58,13,59,11],[58,14,59,12,"setHours"],[58,22,59,20],[58,23,59,21],[58,24,59,22],[58,26,59,24],[58,27,59,25],[58,29,59,27],[58,30,59,28],[58,32,59,30],[58,33,59,31],[58,34,59,32],[59,4,60,2],[59,8,60,8,"_date"],[59,13,60,13],[59,16,60,16],[59,20,60,16,"startOfWeek"],[59,44,60,27],[59,46,60,28,"firstWeek"],[59,55,60,37],[59,57,60,39,"options"],[59,64,60,46],[59,65,60,47],[60,4,61,2],[60,11,61,9,"_date"],[60,16,61,14],[61,2,62,0],[63,2,64,0],[64,2,64,0],[64,6,64,0,"_default"],[64,14,64,0],[64,17,64,0,"exports"],[64,24,64,0],[64,25,64,0,"default"],[64,32,64,0],[64,35,65,15,"startOfWeekYear"],[64,50,65,30],[65,0,65,30],[65,3]],"functionMap":{"names":["<global>","startOfWeekYear"],"mappings":"AAA;OC8C;CDe"}},"type":"js/module"}]}