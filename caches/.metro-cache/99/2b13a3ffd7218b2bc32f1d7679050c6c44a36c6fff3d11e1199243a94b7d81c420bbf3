{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}},{"name":"./startOfHour.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":47,"index":106}}],"key":"gsNPR7paXo/jaBNUOzJyCRS/o84=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameHour = isSameHour;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _normalizeDates3 = require(_dependencyMap[2], \"./_lib/normalizeDates.js\");\n  var _startOfHour = require(_dependencyMap[3], \"./startOfHour.js\");\n  /**\n   * The {@link isSameHour} function options.\n   */\n\n  /**\n   * @name isSameHour\n   * @category Hour Helpers\n   * @summary Are the given dates in the same hour (and same day)?\n   *\n   * @description\n   * Are the given dates in the same hour (and same day)?\n   *\n   * @param dateLeft - The first date to check\n   * @param dateRight - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same hour (and same day)\n   *\n   * @example\n   * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n   * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n   * //=> true\n   *\n   * @example\n   * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\n   * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\n   * //=> false\n   */\n  function isSameHour(dateLeft, dateRight, options) {\n    var _normalizeDates = (0, _normalizeDates3.normalizeDates)(options?.in, dateLeft, dateRight),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      dateLeft_ = _normalizeDates2[0],\n      dateRight_ = _normalizeDates2[1];\n    return +(0, _startOfHour.startOfHour)(dateLeft_) === +(0, _startOfHour.startOfHour)(dateRight_);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameHour;\n});","lineCount":49,"map":[[9,2,1,0],[9,6,1,0,"_normalizeDates3"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,2,0],[10,6,2,0,"_startOfHour"],[10,18,2,0],[10,21,2,0,"require"],[10,28,2,0],[10,29,2,0,"_dependencyMap"],[10,43,2,0],[11,2,4,0],[12,0,5,0],[13,0,6,0],[15,2,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,2,32,7],[39,11,32,16,"isSameHour"],[39,21,32,26,"isSameHour"],[39,22,32,27,"dateLeft"],[39,30,32,35],[39,32,32,37,"dateRight"],[39,41,32,46],[39,43,32,48,"options"],[39,50,32,55],[39,52,32,57],[40,4,33,2],[40,8,33,2,"_normalizeDates"],[40,23,33,2],[40,26,33,34],[40,30,33,34,"normalizeDates"],[40,61,33,48],[40,63,34,4,"options"],[40,70,34,11],[40,72,34,13,"in"],[40,74,34,15],[40,76,35,4,"dateLeft"],[40,84,35,12],[40,86,36,4,"dateRight"],[40,95,37,2],[40,96,37,3],[41,6,37,3,"_normalizeDates2"],[41,22,37,3],[41,29,37,3,"_slicedToArray2"],[41,44,37,3],[41,45,37,3,"default"],[41,52,37,3],[41,54,37,3,"_normalizeDates"],[41,69,37,3],[42,6,33,9,"dateLeft_"],[42,15,33,18],[42,18,33,18,"_normalizeDates2"],[42,34,33,18],[43,6,33,20,"dateRight_"],[43,16,33,30],[43,19,33,30,"_normalizeDates2"],[43,35,33,30],[44,4,38,2],[44,11,38,9],[44,12,38,10],[44,16,38,10,"startOfHour"],[44,40,38,21],[44,42,38,22,"dateLeft_"],[44,51,38,31],[44,52,38,32],[44,57,38,37],[44,58,38,38],[44,62,38,38,"startOfHour"],[44,86,38,49],[44,88,38,50,"dateRight_"],[44,98,38,60],[44,99,38,61],[45,2,39,0],[47,2,41,0],[48,2,41,0],[48,6,41,0,"_default"],[48,14,41,0],[48,17,41,0,"exports"],[48,24,41,0],[48,25,41,0,"default"],[48,32,41,0],[48,35,42,15,"isSameHour"],[48,45,42,25],[49,0,42,25],[49,3]],"functionMap":{"names":["<global>","isSameHour"],"mappings":"AAA;OC+B;CDO"}},"type":"js/module"}]}