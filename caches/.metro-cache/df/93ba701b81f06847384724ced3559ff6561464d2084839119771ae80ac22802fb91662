{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.endOfDecade = endOfDecade;\n  var _toDate = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The {@link endOfDecade} function options.\n   */\n\n  /**\n   * @name endOfDecade\n   * @category Decade Helpers\n   * @summary Return the end of a decade for the given date.\n   *\n   * @description\n   * Return the end of a decade for the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The original date\n   * @param options - An object with options\n   *\n   * @returns The end of a decade\n   *\n   * @example\n   * // The end of a decade for 12 May 1984 00:00:00:\n   * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n   * //=> Dec 31 1989 23:59:59.999\n   */\n  function endOfDecade(date, options) {\n    // TODO: Switch to more technical definition in of decades that start with 1\n    // end with 0. I.e. 2001-2010 instead of current 2000-2009. It's a breaking\n    // change, so it can only be done in 4.0.\n    var _date = (0, _toDate.toDate)(date, options?.in);\n    var year = _date.getFullYear();\n    var decade = 9 + Math.floor(year / 10) * 10;\n    _date.setFullYear(decade, 11, 31);\n    _date.setHours(23, 59, 59, 999);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = endOfDecade;\n});","lineCount":47,"map":[[7,2,1,0],[7,6,1,0,"_toDate"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,2,28,7],[33,11,28,16,"endOfDecade"],[33,22,28,27,"endOfDecade"],[33,23,28,28,"date"],[33,27,28,32],[33,29,28,34,"options"],[33,36,28,41],[33,38,28,43],[34,4,29,2],[35,4,30,2],[36,4,31,2],[37,4,32,2],[37,8,32,8,"_date"],[37,13,32,13],[37,16,32,16],[37,20,32,16,"toDate"],[37,34,32,22],[37,36,32,23,"date"],[37,40,32,27],[37,42,32,29,"options"],[37,49,32,36],[37,51,32,38,"in"],[37,53,32,40],[37,54,32,41],[38,4,33,2],[38,8,33,8,"year"],[38,12,33,12],[38,15,33,15,"_date"],[38,20,33,20],[38,21,33,21,"getFullYear"],[38,32,33,32],[38,33,33,33],[38,34,33,34],[39,4,34,2],[39,8,34,8,"decade"],[39,14,34,14],[39,17,34,17],[39,18,34,18],[39,21,34,21,"Math"],[39,25,34,25],[39,26,34,26,"floor"],[39,31,34,31],[39,32,34,32,"year"],[39,36,34,36],[39,39,34,39],[39,41,34,41],[39,42,34,42],[39,45,34,45],[39,47,34,47],[40,4,35,2,"_date"],[40,9,35,7],[40,10,35,8,"setFullYear"],[40,21,35,19],[40,22,35,20,"decade"],[40,28,35,26],[40,30,35,28],[40,32,35,30],[40,34,35,32],[40,36,35,34],[40,37,35,35],[41,4,36,2,"_date"],[41,9,36,7],[41,10,36,8,"setHours"],[41,18,36,16],[41,19,36,17],[41,21,36,19],[41,23,36,21],[41,25,36,23],[41,27,36,25],[41,29,36,27],[41,31,36,29],[41,34,36,32],[41,35,36,33],[42,4,37,2],[42,11,37,9,"_date"],[42,16,37,14],[43,2,38,0],[45,2,40,0],[46,2,40,0],[46,6,40,0,"_default"],[46,14,40,0],[46,17,40,0,"exports"],[46,24,40,0],[46,25,40,0,"default"],[46,32,40,0],[46,35,41,15,"endOfDecade"],[46,46,41,26],[47,0,41,26],[47,3]],"functionMap":{"names":["<global>","endOfDecade"],"mappings":"AAA;OC2B;CDU"}},"type":"js/module"}]}