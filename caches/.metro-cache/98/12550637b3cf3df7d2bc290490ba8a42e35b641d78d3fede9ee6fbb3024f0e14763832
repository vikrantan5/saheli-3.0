{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"]}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachMonthOfInterval = eachMonthOfInterval;\n  var _normalizeInterval2 = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _constructFrom = require(_dependencyMap[1], \"./constructFrom.js\");\n  /**\n   * The {@link eachMonthOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachMonthOfInterval} function result type. It resolves the proper data type.\n   */\n\n  /**\n   * @name eachMonthOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of months within the specified time interval.\n   *\n   * @description\n   * Return the array of months within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of months from the month of the interval start to the month of the interval end\n   *\n   * @example\n   * // Each month between 6 February 2014 and 10 August 2014:\n   * const result = eachMonthOfInterval({\n   *   start: new Date(2014, 1, 6),\n   *   end: new Date(2014, 7, 10)\n   * })\n   * //=> [\n   * //   Sat Feb 01 2014 00:00:00,\n   * //   Sat Mar 01 2014 00:00:00,\n   * //   Tue Apr 01 2014 00:00:00,\n   * //   Thu May 01 2014 00:00:00,\n   * //   Sun Jun 01 2014 00:00:00,\n   * //   Tue Jul 01 2014 00:00:00,\n   * //   Fri Aug 01 2014 00:00:00\n   * // ]\n   */\n  function eachMonthOfInterval(interval, options) {\n    var _normalizeInterval = (0, _normalizeInterval2.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFrom.constructFrom)(start, date));\n      date.setMonth(date.getMonth() + step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachMonthOfInterval;\n});","lineCount":74,"map":[[7,2,1,0],[7,6,1,0,"_normalizeInterval2"],[7,25,1,0],[7,28,1,0,"require"],[7,35,1,0],[7,36,1,0,"_dependencyMap"],[7,50,1,0],[8,2,2,0],[8,6,2,0,"_constructFrom"],[8,20,2,0],[8,23,2,0,"require"],[8,30,2,0],[8,31,2,0,"_dependencyMap"],[8,45,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[17,2,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,2,44,7],[49,11,44,16,"eachMonthOfInterval"],[49,30,44,35,"eachMonthOfInterval"],[49,31,44,36,"interval"],[49,39,44,44],[49,41,44,46,"options"],[49,48,44,53],[49,50,44,55],[50,4,45,2],[50,8,45,2,"_normalizeInterval"],[50,26,45,2],[50,29,45,25],[50,33,45,25,"normalizeInterval"],[50,70,45,42],[50,72,45,43,"options"],[50,79,45,50],[50,81,45,52,"in"],[50,83,45,54],[50,85,45,56,"interval"],[50,93,45,64],[50,94,45,65],[51,6,45,10,"start"],[51,11,45,15],[51,14,45,15,"_normalizeInterval"],[51,32,45,15],[51,33,45,10,"start"],[51,38,45,15],[52,6,45,17,"end"],[52,9,45,20],[52,12,45,20,"_normalizeInterval"],[52,30,45,20],[52,31,45,17,"end"],[52,34,45,20],[53,4,47,2],[53,8,47,6,"reversed"],[53,16,47,14],[53,19,47,17],[53,20,47,18,"start"],[53,25,47,23],[53,28,47,26],[53,29,47,27,"end"],[53,32,47,30],[54,4,48,2],[54,8,48,8,"endTime"],[54,15,48,15],[54,18,48,18,"reversed"],[54,26,48,26],[54,29,48,29],[54,30,48,30,"start"],[54,35,48,35],[54,38,48,38],[54,39,48,39,"end"],[54,42,48,42],[55,4,49,2],[55,8,49,8,"date"],[55,12,49,12],[55,15,49,15,"reversed"],[55,23,49,23],[55,26,49,26,"end"],[55,29,49,29],[55,32,49,32,"start"],[55,37,49,37],[56,4,50,2,"date"],[56,8,50,6],[56,9,50,7,"setHours"],[56,17,50,15],[56,18,50,16],[56,19,50,17],[56,21,50,19],[56,22,50,20],[56,24,50,22],[56,25,50,23],[56,27,50,25],[56,28,50,26],[56,29,50,27],[57,4,51,2,"date"],[57,8,51,6],[57,9,51,7,"setDate"],[57,16,51,14],[57,17,51,15],[57,18,51,16],[57,19,51,17],[58,4,53,2],[58,8,53,6,"step"],[58,12,53,10],[58,15,53,13,"options"],[58,22,53,20],[58,24,53,22,"step"],[58,28,53,26],[58,32,53,30],[58,33,53,31],[59,4,54,2],[59,8,54,6],[59,9,54,7,"step"],[59,13,54,11],[59,15,54,13],[59,22,54,20],[59,24,54,22],[60,4,55,2],[60,8,55,6,"step"],[60,12,55,10],[60,15,55,13],[60,16,55,14],[60,18,55,16],[61,6,56,4,"step"],[61,10,56,8],[61,13,56,11],[61,14,56,12,"step"],[61,18,56,16],[62,6,57,4,"reversed"],[62,14,57,12],[62,17,57,15],[62,18,57,16,"reversed"],[62,26,57,24],[63,4,58,2],[64,4,60,2],[64,8,60,8,"dates"],[64,13,60,13],[64,16,60,16],[64,18,60,18],[65,4,62,2],[65,11,62,9],[65,12,62,10,"date"],[65,16,62,14],[65,20,62,18,"endTime"],[65,27,62,25],[65,29,62,27],[66,6,63,4,"dates"],[66,11,63,9],[66,12,63,10,"push"],[66,16,63,14],[66,17,63,15],[66,21,63,15,"constructFrom"],[66,49,63,28],[66,51,63,29,"start"],[66,56,63,34],[66,58,63,36,"date"],[66,62,63,40],[66,63,63,41],[66,64,63,42],[67,6,64,4,"date"],[67,10,64,8],[67,11,64,9,"setMonth"],[67,19,64,17],[67,20,64,18,"date"],[67,24,64,22],[67,25,64,23,"getMonth"],[67,33,64,31],[67,34,64,32],[67,35,64,33],[67,38,64,36,"step"],[67,42,64,40],[67,43,64,41],[68,4,65,2],[69,4,67,2],[69,11,67,9,"reversed"],[69,19,67,17],[69,22,67,20,"dates"],[69,27,67,25],[69,28,67,26,"reverse"],[69,35,67,33],[69,36,67,34],[69,37,67,35],[69,40,67,38,"dates"],[69,45,67,43],[70,2,68,0],[72,2,70,0],[73,2,70,0],[73,6,70,0,"_default"],[73,14,70,0],[73,17,70,0,"exports"],[73,24,70,0],[73,25,70,0,"default"],[73,32,70,0],[73,35,71,15,"eachMonthOfInterval"],[73,54,71,34],[74,0,71,34],[74,3]],"functionMap":{"names":["<global>","eachMonthOfInterval"],"mappings":"AAA;OC2C;CDwB"}},"type":"js/module"}]}