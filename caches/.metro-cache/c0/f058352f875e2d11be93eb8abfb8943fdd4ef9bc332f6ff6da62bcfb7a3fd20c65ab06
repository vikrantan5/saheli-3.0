{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.constructNow = constructNow;\n  exports.default = void 0;\n  var _constructFrom = require(_dependencyMap[0], \"./constructFrom.js\");\n  /**\n   * @name constructNow\n   * @category Generic Helpers\n   * @summary Constructs a new current date using the passed value constructor.\n   * @pure false\n   *\n   * @description\n   * The function constructs a new current date using the constructor from\n   * the reference date. It helps to build generic functions that accept date\n   * extensions and use the current date.\n   *\n   * It defaults to `Date` if the passed reference date is a number or a string.\n   *\n   * @param date - The reference date to take constructor from\n   *\n   * @returns Current date initialized using the given date constructor\n   *\n   * @example\n   * import { constructNow, isSameDay } from 'date-fns'\n   *\n   * function isToday<DateType extends Date>(\n   *   date: DateArg<DateType>,\n   * ): boolean {\n   *   // If we were to use `new Date()` directly, the function would  behave\n   *   // differently in different timezones and return false for the same date.\n   *   return isSameDay(date, constructNow(date));\n   * }\n   */\n  function constructNow(date) {\n    return (0, _constructFrom.constructFrom)(date, Date.now());\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = constructNow;\n});","lineCount":42,"map":[[7,2,1,0],[7,6,1,0,"_constructFrom"],[7,20,1,0],[7,23,1,0,"require"],[7,30,1,0],[7,31,1,0,"_dependencyMap"],[7,45,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,2,31,7],[36,11,31,16,"constructNow"],[36,23,31,28,"constructNow"],[36,24,31,29,"date"],[36,28,31,33],[36,30,31,35],[37,4,32,2],[37,11,32,9],[37,15,32,9,"constructFrom"],[37,43,32,22],[37,45,32,23,"date"],[37,49,32,27],[37,51,32,29,"Date"],[37,55,32,33],[37,56,32,34,"now"],[37,59,32,37],[37,60,32,38],[37,61,32,39],[37,62,32,40],[38,2,33,0],[40,2,35,0],[41,2,35,0],[41,6,35,0,"_default"],[41,14,35,0],[41,17,35,0,"exports"],[41,24,35,0],[41,25,35,0,"default"],[41,32,35,0],[41,35,36,15,"constructNow"],[41,47,36,27],[42,0,36,27],[42,3]],"functionMap":{"names":["<global>","constructNow"],"mappings":"AAA;OC8B;CDE"}},"type":"js/module"}]}