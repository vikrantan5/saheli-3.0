{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.constructFrom = constructFrom;\n  exports.default = void 0;\n  var _constants = require(_dependencyMap[0], \"./constants.js\");\n  /**\n   * @name constructFrom\n   * @category Generic Helpers\n   * @summary Constructs a date using the reference date and the value\n   *\n   * @description\n   * The function constructs a new date using the constructor from the reference\n   * date and the given value. It helps to build generic functions that accept\n   * date extensions.\n   *\n   * It defaults to `Date` if the passed reference date is a number or a string.\n   *\n   * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n   * enabling to transfer extra properties from the reference date to the new date.\n   * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n   * that accept a time zone as a constructor argument.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   *\n   * @param date - The reference date to take constructor from\n   * @param value - The value to create the date\n   *\n   * @returns Date initialized using the given date and value\n   *\n   * @example\n   * import { constructFrom } from \"./constructFrom/date-fns\";\n   *\n   * // A function that clones a date preserving the original type\n   * function cloneDate<DateType extends Date>(date: DateType): DateType {\n   *   return constructFrom(\n   *     date, // Use constructor from the given date\n   *     date.getTime() // Use the date value to create a new date\n   *   );\n   * }\n   */\n  function constructFrom(date, value) {\n    if (typeof date === \"function\") return date(value);\n    if (date && typeof date === \"object\" && _constants.constructFromSymbol in date) return date[_constants.constructFromSymbol](value);\n    if (date instanceof Date) return new date.constructor(value);\n    return new Date(value);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = constructFrom;\n});","lineCount":52,"map":[[7,2,1,0],[7,6,1,0,"_constants"],[7,16,1,0],[7,19,1,0,"require"],[7,26,1,0],[7,27,1,0,"_dependencyMap"],[7,41,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,2,38,7],[43,11,38,16,"constructFrom"],[43,24,38,29,"constructFrom"],[43,25,38,30,"date"],[43,29,38,34],[43,31,38,36,"value"],[43,36,38,41],[43,38,38,43],[44,4,39,2],[44,8,39,6],[44,15,39,13,"date"],[44,19,39,17],[44,24,39,22],[44,34,39,32],[44,36,39,34],[44,43,39,41,"date"],[44,47,39,45],[44,48,39,46,"value"],[44,53,39,51],[44,54,39,52],[45,4,41,2],[45,8,41,6,"date"],[45,12,41,10],[45,16,41,14],[45,23,41,21,"date"],[45,27,41,25],[45,32,41,30],[45,40,41,38],[45,44,41,42,"constructFromSymbol"],[45,74,41,61],[45,78,41,65,"date"],[45,82,41,69],[45,84,42,4],[45,91,42,11,"date"],[45,95,42,15],[45,96,42,16,"constructFromSymbol"],[45,126,42,35],[45,127,42,36],[45,128,42,37,"value"],[45,133,42,42],[45,134,42,43],[46,4,44,2],[46,8,44,6,"date"],[46,12,44,10],[46,24,44,22,"Date"],[46,28,44,26],[46,30,44,28],[46,37,44,35],[46,41,44,39,"date"],[46,45,44,43],[46,46,44,44,"constructor"],[46,57,44,55],[46,58,44,56,"value"],[46,63,44,61],[46,64,44,62],[47,4,46,2],[47,11,46,9],[47,15,46,13,"Date"],[47,19,46,17],[47,20,46,18,"value"],[47,25,46,23],[47,26,46,24],[48,2,47,0],[50,2,49,0],[51,2,49,0],[51,6,49,0,"_default"],[51,14,49,0],[51,17,49,0,"exports"],[51,24,49,0],[51,25,49,0,"default"],[51,32,49,0],[51,35,50,15,"constructFrom"],[51,48,50,28],[52,0,50,28],[52,3]],"functionMap":{"names":["<global>","constructFrom"],"mappings":"AAA;OCqC;CDS"}},"type":"js/module"}]}