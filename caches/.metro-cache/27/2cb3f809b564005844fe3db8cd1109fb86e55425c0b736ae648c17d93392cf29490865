{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"]}},{"name":"./addMinutes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":45,"index":110}}],"key":"s7dxRQ5+rZLqB2aItf4QKDpmL0c=","exportNames":["*"]}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":51,"index":162}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachMinuteOfInterval = eachMinuteOfInterval;\n  var _normalizeInterval2 = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _addMinutes = require(_dependencyMap[1], \"./addMinutes.js\");\n  var _constructFrom = require(_dependencyMap[2], \"./constructFrom.js\");\n  /**\n   * The {@link eachMinuteOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachMinuteOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachMinuteOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of minutes within the specified time interval.\n   *\n   * @description\n   * Returns the array of minutes within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of minutes from the minute of the interval start to the minute of the interval end\n   *\n   * @example\n   * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n   * const result = eachMinuteOfInterval({\n   *   start: new Date(2014, 9, 14, 13),\n   *   end: new Date(2014, 9, 14, 13, 3)\n   * })\n   * //=> [\n   * //   Wed Oct 14 2014 13:00:00,\n   * //   Wed Oct 14 2014 13:01:00,\n   * //   Wed Oct 14 2014 13:02:00,\n   * //   Wed Oct 14 2014 13:03:00\n   * // ]\n   */\n  function eachMinuteOfInterval(interval, options) {\n    var _normalizeInterval = (0, _normalizeInterval2.normalizeInterval)(options?.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    // Set to the start of the minute\n    start.setSeconds(0, 0);\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    var step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFrom.constructFrom)(start, date));\n      date = (0, _addMinutes.addMinutes)(date, step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachMinuteOfInterval;\n});","lineCount":75,"map":[[7,2,1,0],[7,6,1,0,"_normalizeInterval2"],[7,25,1,0],[7,28,1,0,"require"],[7,35,1,0],[7,36,1,0,"_dependencyMap"],[7,50,1,0],[8,2,2,0],[8,6,2,0,"_addMinutes"],[8,17,2,0],[8,20,2,0,"require"],[8,27,2,0],[8,28,2,0,"_dependencyMap"],[8,42,2,0],[9,2,3,0],[9,6,3,0,"_constructFrom"],[9,20,3,0],[9,23,3,0,"require"],[9,30,3,0],[9,31,3,0,"_dependencyMap"],[9,45,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[21,2,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,2,45,7],[50,11,45,16,"eachMinuteOfInterval"],[50,31,45,36,"eachMinuteOfInterval"],[50,32,45,37,"interval"],[50,40,45,45],[50,42,45,47,"options"],[50,49,45,54],[50,51,45,56],[51,4,46,2],[51,8,46,2,"_normalizeInterval"],[51,26,46,2],[51,29,46,25],[51,33,46,25,"normalizeInterval"],[51,70,46,42],[51,72,46,43,"options"],[51,79,46,50],[51,81,46,52,"in"],[51,83,46,54],[51,85,46,56,"interval"],[51,93,46,64],[51,94,46,65],[52,6,46,10,"start"],[52,11,46,15],[52,14,46,15,"_normalizeInterval"],[52,32,46,15],[52,33,46,10,"start"],[52,38,46,15],[53,6,46,17,"end"],[53,9,46,20],[53,12,46,20,"_normalizeInterval"],[53,30,46,20],[53,31,46,17,"end"],[53,34,46,20],[54,4,47,2],[55,4,48,2,"start"],[55,9,48,7],[55,10,48,8,"setSeconds"],[55,20,48,18],[55,21,48,19],[55,22,48,20],[55,24,48,22],[55,25,48,23],[55,26,48,24],[56,4,50,2],[56,8,50,6,"reversed"],[56,16,50,14],[56,19,50,17],[56,20,50,18,"start"],[56,25,50,23],[56,28,50,26],[56,29,50,27,"end"],[56,32,50,30],[57,4,51,2],[57,8,51,8,"endTime"],[57,15,51,15],[57,18,51,18,"reversed"],[57,26,51,26],[57,29,51,29],[57,30,51,30,"start"],[57,35,51,35],[57,38,51,38],[57,39,51,39,"end"],[57,42,51,42],[58,4,52,2],[58,8,52,6,"date"],[58,12,52,10],[58,15,52,13,"reversed"],[58,23,52,21],[58,26,52,24,"end"],[58,29,52,27],[58,32,52,30,"start"],[58,37,52,35],[59,4,54,2],[59,8,54,6,"step"],[59,12,54,10],[59,15,54,13,"options"],[59,22,54,20],[59,24,54,22,"step"],[59,28,54,26],[59,32,54,30],[59,33,54,31],[60,4,55,2],[60,8,55,6],[60,9,55,7,"step"],[60,13,55,11],[60,15,55,13],[60,22,55,20],[60,24,55,22],[61,4,56,2],[61,8,56,6,"step"],[61,12,56,10],[61,15,56,13],[61,16,56,14],[61,18,56,16],[62,6,57,4,"step"],[62,10,57,8],[62,13,57,11],[62,14,57,12,"step"],[62,18,57,16],[63,6,58,4,"reversed"],[63,14,58,12],[63,17,58,15],[63,18,58,16,"reversed"],[63,26,58,24],[64,4,59,2],[65,4,61,2],[65,8,61,8,"dates"],[65,13,61,13],[65,16,61,16],[65,18,61,18],[66,4,63,2],[66,11,63,9],[66,12,63,10,"date"],[66,16,63,14],[66,20,63,18,"endTime"],[66,27,63,25],[66,29,63,27],[67,6,64,4,"dates"],[67,11,64,9],[67,12,64,10,"push"],[67,16,64,14],[67,17,64,15],[67,21,64,15,"constructFrom"],[67,49,64,28],[67,51,64,29,"start"],[67,56,64,34],[67,58,64,36,"date"],[67,62,64,40],[67,63,64,41],[67,64,64,42],[68,6,65,4,"date"],[68,10,65,8],[68,13,65,11],[68,17,65,11,"addMinutes"],[68,39,65,21],[68,41,65,22,"date"],[68,45,65,26],[68,47,65,28,"step"],[68,51,65,32],[68,52,65,33],[69,4,66,2],[70,4,68,2],[70,11,68,9,"reversed"],[70,19,68,17],[70,22,68,20,"dates"],[70,27,68,25],[70,28,68,26,"reverse"],[70,35,68,33],[70,36,68,34],[70,37,68,35],[70,40,68,38,"dates"],[70,45,68,43],[71,2,69,0],[73,2,71,0],[74,2,71,0],[74,6,71,0,"_default"],[74,14,71,0],[74,17,71,0,"exports"],[74,24,71,0],[74,25,71,0,"default"],[74,32,71,0],[74,35,72,15,"eachMinuteOfInterval"],[74,55,72,35],[75,0,72,35],[75,3]],"functionMap":{"names":["<global>","eachMinuteOfInterval"],"mappings":"AAA;OC4C;CDwB"}},"type":"js/module"}]}