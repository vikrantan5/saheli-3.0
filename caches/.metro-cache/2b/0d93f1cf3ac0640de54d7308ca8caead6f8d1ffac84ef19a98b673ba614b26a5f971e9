{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}},{"name":"./closestIndexTo.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":53,"index":112}}],"key":"sTrjGiGNFj5RRzg0+tzT7Ho4+rs=","exportNames":["*"]}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":51,"index":164}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.closestTo = closestTo;\n  exports.default = void 0;\n  var _toArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/toArray\"));\n  var _normalizeDates3 = require(_dependencyMap[2], \"./_lib/normalizeDates.js\");\n  var _closestIndexTo = require(_dependencyMap[3], \"./closestIndexTo.js\");\n  var _constructFrom = require(_dependencyMap[4], \"./constructFrom.js\");\n  /**\n   * The {@link closestTo} function options.\n   */\n\n  /**\n   * The {@link closestTo} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name closestTo\n   * @category Common Helpers\n   * @summary Return a date from the array closest to the given date.\n   *\n   * @description\n   * Return a date from the array closest to the given date.\n   *\n   * @typeParam DateToCompare - Date to compare argument type.\n   * @typeParam DatesType - Dates array argument type.\n   * @typeParam Options - Options type.\n   *\n   * @param dateToCompare - The date to compare with\n   * @param dates - The array to search\n   *\n   * @returns The date from the array closest to the given date or undefined if no valid value is given\n   *\n   * @example\n   * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n   * const dateToCompare = new Date(2015, 8, 6)\n   * const result = closestTo(dateToCompare, [\n   *   new Date(2000, 0, 1),\n   *   new Date(2030, 0, 1)\n   * ])\n   * //=> Tue Jan 01 2030 00:00:00\n   */\n  function closestTo(dateToCompare, dates, options) {\n    var _normalizeDates = (0, _normalizeDates3.normalizeDates)(options?.in, dateToCompare, ...dates),\n      _normalizeDates2 = (0, _toArray2.default)(_normalizeDates),\n      dateToCompare_ = _normalizeDates2[0],\n      dates_ = _normalizeDates2.slice(1);\n    var index = (0, _closestIndexTo.closestIndexTo)(dateToCompare_, dates_);\n    if (typeof index === \"number\" && isNaN(index)) return (0, _constructFrom.constructFrom)(dateToCompare_, NaN);\n    if (index !== undefined) return dates_[index];\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = closestTo;\n});","lineCount":61,"map":[[9,2,1,0],[9,6,1,0,"_normalizeDates3"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,2,0],[10,6,2,0,"_closestIndexTo"],[10,21,2,0],[10,24,2,0,"require"],[10,31,2,0],[10,32,2,0,"_dependencyMap"],[10,46,2,0],[11,2,3,0],[11,6,3,0,"_constructFrom"],[11,20,3,0],[11,23,3,0,"require"],[11,30,3,0],[11,31,3,0,"_dependencyMap"],[11,45,3,0],[12,2,5,0],[13,0,6,0],[14,0,7,0],[16,2,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[23,2,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,0,37,0],[45,0,38,0],[46,0,39,0],[47,0,40,0],[48,0,41,0],[49,2,42,7],[49,11,42,16,"closestTo"],[49,20,42,25,"closestTo"],[49,21,42,26,"dateToCompare"],[49,34,42,39],[49,36,42,41,"dates"],[49,41,42,46],[49,43,42,48,"options"],[49,50,42,55],[49,52,42,57],[50,4,43,2],[50,8,43,2,"_normalizeDates"],[50,23,43,2],[50,26,43,38],[50,30,43,38,"normalizeDates"],[50,61,43,52],[50,63,44,4,"options"],[50,70,44,11],[50,72,44,13,"in"],[50,74,44,15],[50,76,45,4,"dateToCompare"],[50,89,45,17],[50,91,46,4],[50,94,46,7,"dates"],[50,99,47,2],[50,100,47,3],[51,6,47,3,"_normalizeDates2"],[51,22,47,3],[51,29,47,3,"_toArray2"],[51,38,47,3],[51,39,47,3,"default"],[51,46,47,3],[51,48,47,3,"_normalizeDates"],[51,63,47,3],[52,6,43,9,"dateToCompare_"],[52,20,43,23],[52,23,43,23,"_normalizeDates2"],[52,39,43,23],[53,6,43,28,"dates_"],[53,12,43,34],[53,15,43,34,"_normalizeDates2"],[53,31,43,34],[53,32,43,34,"slice"],[53,37,43,34],[54,4,49,2],[54,8,49,8,"index"],[54,13,49,13],[54,16,49,16],[54,20,49,16,"closestIndexTo"],[54,50,49,30],[54,52,49,31,"dateToCompare_"],[54,66,49,45],[54,68,49,47,"dates_"],[54,74,49,53],[54,75,49,54],[55,4,51,2],[55,8,51,6],[55,15,51,13,"index"],[55,20,51,18],[55,25,51,23],[55,33,51,31],[55,37,51,35,"isNaN"],[55,42,51,40],[55,43,51,41,"index"],[55,48,51,46],[55,49,51,47],[55,51,52,4],[55,58,52,11],[55,62,52,11,"constructFrom"],[55,90,52,24],[55,92,52,25,"dateToCompare_"],[55,106,52,39],[55,108,52,41,"NaN"],[55,111,52,44],[55,112,52,45],[56,4,54,2],[56,8,54,6,"index"],[56,13,54,11],[56,18,54,16,"undefined"],[56,27,54,25],[56,29,54,27],[56,36,54,34,"dates_"],[56,42,54,40],[56,43,54,41,"index"],[56,48,54,46],[56,49,54,47],[57,2,55,0],[59,2,57,0],[60,2,57,0],[60,6,57,0,"_default"],[60,14,57,0],[60,17,57,0,"exports"],[60,24,57,0],[60,25,57,0,"default"],[60,32,57,0],[60,35,58,15,"closestTo"],[60,44,58,24],[61,0,58,24],[61,3]],"functionMap":{"names":["<global>","closestTo"],"mappings":"AAA;OCyC;CDa"}},"type":"js/module"}]}