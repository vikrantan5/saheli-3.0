{"dependencies":[{"name":"./getISOWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"t+Ts0m3S4k+LAt1CTQ+klN/c2Hs=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":37,"index":83}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.setISOWeek = setISOWeek;\n  var _getISOWeek = require(_dependencyMap[0], \"./getISOWeek.js\");\n  var _toDate = require(_dependencyMap[1], \"./toDate.js\");\n  /**\n   * The {@link setISOWeek} function options.\n   */\n\n  /**\n   * @name setISOWeek\n   * @category ISO Week Helpers\n   * @summary Set the ISO week to the given date.\n   *\n   * @description\n   * Set the ISO week to the given date, saving the weekday number.\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The `Date` type of the context function.\n   *\n   * @param date - The date to be changed\n   * @param week - The ISO week of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the ISO week set\n   *\n   * @example\n   * // Set the 53rd ISO week to 7 August 2004:\n   * const result = setISOWeek(new Date(2004, 7, 7), 53)\n   * //=> Sat Jan 01 2005 00:00:00\n   */\n  function setISOWeek(date, week, options) {\n    var _date = (0, _toDate.toDate)(date, options?.in);\n    var diff = (0, _getISOWeek.getISOWeek)(_date, options) - week;\n    _date.setDate(_date.getDate() - diff * 7);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = setISOWeek;\n});","lineCount":46,"map":[[7,2,1,0],[7,6,1,0,"_getISOWeek"],[7,17,1,0],[7,20,1,0,"require"],[7,27,1,0],[7,28,1,0,"_dependencyMap"],[7,42,1,0],[8,2,2,0],[8,6,2,0,"_toDate"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,2,32,7],[37,11,32,16,"setISOWeek"],[37,21,32,26,"setISOWeek"],[37,22,32,27,"date"],[37,26,32,31],[37,28,32,33,"week"],[37,32,32,37],[37,34,32,39,"options"],[37,41,32,46],[37,43,32,48],[38,4,33,2],[38,8,33,8,"_date"],[38,13,33,13],[38,16,33,16],[38,20,33,16,"toDate"],[38,34,33,22],[38,36,33,23,"date"],[38,40,33,27],[38,42,33,29,"options"],[38,49,33,36],[38,51,33,38,"in"],[38,53,33,40],[38,54,33,41],[39,4,34,2],[39,8,34,8,"diff"],[39,12,34,12],[39,15,34,15],[39,19,34,15,"getISOWeek"],[39,41,34,25],[39,43,34,26,"_date"],[39,48,34,31],[39,50,34,33,"options"],[39,57,34,40],[39,58,34,41],[39,61,34,44,"week"],[39,65,34,48],[40,4,35,2,"_date"],[40,9,35,7],[40,10,35,8,"setDate"],[40,17,35,15],[40,18,35,16,"_date"],[40,23,35,21],[40,24,35,22,"getDate"],[40,31,35,29],[40,32,35,30],[40,33,35,31],[40,36,35,34,"diff"],[40,40,35,38],[40,43,35,41],[40,44,35,42],[40,45,35,43],[41,4,36,2],[41,11,36,9,"_date"],[41,16,36,14],[42,2,37,0],[44,2,39,0],[45,2,39,0],[45,6,39,0,"_default"],[45,14,39,0],[45,17,39,0,"exports"],[45,24,39,0],[45,25,39,0,"default"],[45,32,39,0],[45,35,40,15,"setISOWeek"],[45,45,40,25],[46,0,40,25],[46,3]],"functionMap":{"names":["<global>","setISOWeek"],"mappings":"AAA;OC+B;CDK"}},"type":"js/module"}]}