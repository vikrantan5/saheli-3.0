{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"firebase/firestore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":10,"column":28,"index":149}}],"key":"n8ZdwTgQb9oFW01pH/SKxYwC/nA=","exportNames":["*"]}},{"name":"../config/firebaseConfig","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":151},"end":{"line":11,"column":52,"index":203}}],"key":"c2ktbavwtrva9DBC5I1TB1Fz260=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.subscribeToUserAlerts = exports.getUserAlertCount = exports.getUnreadAlertCount = exports.createSafetyAlert = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _firestore = require(_dependencyMap[2], \"firebase/firestore\");\n  var _firebaseConfig = require(_dependencyMap[3], \"../config/firebaseConfig\");\n  /**\r\n   * Create a new safety alert\r\n   * @param {Object} alertData - Alert data\r\n   * @param {string} alertData.type - Type of alert\r\n   * @param {string} alertData.message - Alert message\r\n   * @param {Object} alertData.location - {latitude, longitude, address}\r\n   * @param {string} alertData.severity - 'low', 'medium', 'high'\r\n   * @returns {Promise<string>} - Document ID of created alert\r\n   */\n  var createSafetyAlert = exports.createSafetyAlert = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* (alertData) {\n      try {\n        var currentUser = _firebaseConfig.auth.currentUser;\n        if (!currentUser) {\n          throw new Error('User must be logged in to create a safety alert');\n        }\n        var alert = {\n          userId: currentUser.uid,\n          type: alertData.type,\n          message: alertData.message,\n          location: alertData.location,\n          severity: alertData.severity,\n          timestamp: (0, _firestore.serverTimestamp)(),\n          read: false\n        };\n        console.log('Creating safety alert:', alert);\n        var docRef = yield (0, _firestore.addDoc)((0, _firestore.collection)(_firebaseConfig.db, 'safety_alerts'), alert);\n        console.log('✅ Safety alert created successfully with ID:', docRef.id);\n        return docRef.id;\n      } catch (error) {\n        console.error('❌ Error creating safety alert:', error);\n        throw error;\n      }\n    });\n    return function createSafetyAlert(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Subscribe to user's safety alerts\r\n   * @param {Function} callback - Callback function that receives alerts array\r\n   * @returns {Function} - Unsubscribe function\r\n   */\n  var subscribeToUserAlerts = callback => {\n    try {\n      var currentUser = _firebaseConfig.auth.currentUser;\n      if (!currentUser) {\n        console.warn('No user logged in for alerts subscription');\n        return () => {};\n      }\n      var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_alerts'), (0, _firestore.where)('userId', '==', currentUser.uid), (0, _firestore.orderBy)('timestamp', 'desc'));\n      console.log('📡 Subscribing to safety alerts...');\n      var unsubscribe = (0, _firestore.onSnapshot)(q, querySnapshot => {\n        var alerts = [];\n        querySnapshot.forEach(doc => {\n          alerts.push({\n            id: doc.id,\n            ...doc.data(),\n            timestamp: doc.data().timestamp?.toDate() || new Date()\n          });\n        });\n        console.log(`✅ Received ${alerts.length} safety alerts from Firestore`);\n        callback(alerts);\n      }, error => {\n        console.error('❌ Error in safety alerts subscription:', error);\n        callback([]);\n      });\n      return unsubscribe;\n    } catch (error) {\n      console.error('❌ Error setting up safety alerts subscription:', error);\n      return () => {};\n    }\n  };\n\n  /**\r\n   * Get user's alert count\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<number>} - Number of alerts for user\r\n   */\n  exports.subscribeToUserAlerts = subscribeToUserAlerts;\n  var getUserAlertCount = exports.getUserAlertCount = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (userId) {\n      try {\n        if (!userId) return 0;\n        var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_alerts'), (0, _firestore.where)('userId', '==', userId));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        return querySnapshot.size;\n      } catch (error) {\n        console.error('Error getting user alert count:', error);\n        return 0;\n      }\n    });\n    return function getUserAlertCount(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Get unread alerts count\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<number>} - Number of unread alerts\r\n   */\n  var getUnreadAlertCount = exports.getUnreadAlertCount = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* (userId) {\n      try {\n        if (!userId) return 0;\n        var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_alerts'), (0, _firestore.where)('userId', '==', userId), (0, _firestore.where)('read', '==', false));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        return querySnapshot.size;\n      } catch (error) {\n        console.error('Error getting unread alert count:', error);\n        return 0;\n      }\n    });\n    return function getUnreadAlertCount(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n});","lineCount":129,"map":[[8,2,1,0],[8,6,1,0,"_firestore"],[8,16,1,0],[8,19,1,0,"require"],[8,26,1,0],[8,27,1,0,"_dependencyMap"],[8,41,1,0],[9,2,11,0],[9,6,11,0,"_firebaseConfig"],[9,21,11,0],[9,24,11,0,"require"],[9,31,11,0],[9,32,11,0,"_dependencyMap"],[9,46,11,0],[10,2,13,0],[11,0,14,0],[12,0,15,0],[13,0,16,0],[14,0,17,0],[15,0,18,0],[16,0,19,0],[17,0,20,0],[18,0,21,0],[19,2,22,7],[19,6,22,13,"createSafetyAlert"],[19,23,22,30],[19,26,22,30,"exports"],[19,33,22,30],[19,34,22,30,"createSafetyAlert"],[19,51,22,30],[20,4,22,30],[20,8,22,30,"_ref"],[20,12,22,30],[20,19,22,30,"_asyncToGenerator2"],[20,37,22,30],[20,38,22,30,"default"],[20,45,22,30],[20,47,22,33],[20,58,22,40,"alertData"],[20,67,22,49],[20,69,22,54],[21,6,23,2],[21,10,23,6],[22,8,24,4],[22,12,24,10,"currentUser"],[22,23,24,21],[22,26,24,24,"auth"],[22,46,24,28],[22,47,24,29,"currentUser"],[22,58,24,40],[23,8,25,4],[23,12,25,8],[23,13,25,9,"currentUser"],[23,24,25,20],[23,26,25,22],[24,10,26,6],[24,16,26,12],[24,20,26,16,"Error"],[24,25,26,21],[24,26,26,22],[24,75,26,71],[24,76,26,72],[25,8,27,4],[26,8,29,4],[26,12,29,10,"alert"],[26,17,29,15],[26,20,29,18],[27,10,30,6,"userId"],[27,16,30,12],[27,18,30,14,"currentUser"],[27,29,30,25],[27,30,30,26,"uid"],[27,33,30,29],[28,10,31,6,"type"],[28,14,31,10],[28,16,31,12,"alertData"],[28,25,31,21],[28,26,31,22,"type"],[28,30,31,26],[29,10,32,6,"message"],[29,17,32,13],[29,19,32,15,"alertData"],[29,28,32,24],[29,29,32,25,"message"],[29,36,32,32],[30,10,33,6,"location"],[30,18,33,14],[30,20,33,16,"alertData"],[30,29,33,25],[30,30,33,26,"location"],[30,38,33,34],[31,10,34,6,"severity"],[31,18,34,14],[31,20,34,16,"alertData"],[31,29,34,25],[31,30,34,26,"severity"],[31,38,34,34],[32,10,35,6,"timestamp"],[32,19,35,15],[32,21,35,17],[32,25,35,17,"serverTimestamp"],[32,51,35,32],[32,53,35,33],[32,54,35,34],[33,10,36,6,"read"],[33,14,36,10],[33,16,36,12],[34,8,37,4],[34,9,37,5],[35,8,39,4,"console"],[35,15,39,11],[35,16,39,12,"log"],[35,19,39,15],[35,20,39,16],[35,44,39,40],[35,46,39,42,"alert"],[35,51,39,47],[35,52,39,48],[36,8,41,4],[36,12,41,10,"docRef"],[36,18,41,16],[36,27,41,25],[36,31,41,25,"addDoc"],[36,48,41,31],[36,50,41,32],[36,54,41,32,"collection"],[36,75,41,42],[36,77,41,43,"db"],[36,95,41,45],[36,97,41,47],[36,112,41,62],[36,113,41,63],[36,115,41,65,"alert"],[36,120,41,70],[36,121,41,71],[37,8,42,4,"console"],[37,15,42,11],[37,16,42,12,"log"],[37,19,42,15],[37,20,42,16],[37,66,42,62],[37,68,42,64,"docRef"],[37,74,42,70],[37,75,42,71,"id"],[37,77,42,73],[37,78,42,74],[38,8,44,4],[38,15,44,11,"docRef"],[38,21,44,17],[38,22,44,18,"id"],[38,24,44,20],[39,6,45,2],[39,7,45,3],[39,8,45,4],[39,15,45,11,"error"],[39,20,45,16],[39,22,45,18],[40,8,46,4,"console"],[40,15,46,11],[40,16,46,12,"error"],[40,21,46,17],[40,22,46,18],[40,54,46,50],[40,56,46,52,"error"],[40,61,46,57],[40,62,46,58],[41,8,47,4],[41,14,47,10,"error"],[41,19,47,15],[42,6,48,2],[43,4,49,0],[43,5,49,1],[44,4,49,1],[44,20,22,13,"createSafetyAlert"],[44,37,22,30,"createSafetyAlert"],[44,38,22,30,"_x"],[44,40,22,30],[45,6,22,30],[45,13,22,30,"_ref"],[45,17,22,30],[45,18,22,30,"apply"],[45,23,22,30],[45,30,22,30,"arguments"],[45,39,22,30],[46,4,22,30],[47,2,22,30],[47,5,49,1],[49,2,51,0],[50,0,52,0],[51,0,53,0],[52,0,54,0],[53,0,55,0],[54,2,56,7],[54,6,56,13,"subscribeToUserAlerts"],[54,27,56,34],[54,30,56,38,"callback"],[54,38,56,46],[54,42,56,51],[55,4,57,2],[55,8,57,6],[56,6,58,4],[56,10,58,10,"currentUser"],[56,21,58,21],[56,24,58,24,"auth"],[56,44,58,28],[56,45,58,29,"currentUser"],[56,56,58,40],[57,6,59,4],[57,10,59,8],[57,11,59,9,"currentUser"],[57,22,59,20],[57,24,59,22],[58,8,60,6,"console"],[58,15,60,13],[58,16,60,14,"warn"],[58,20,60,18],[58,21,60,19],[58,64,60,62],[58,65,60,63],[59,8,61,6],[59,15,61,13],[59,21,61,19],[59,22,61,20],[59,23,61,21],[60,6,62,4],[61,6,64,4],[61,10,64,10,"q"],[61,11,64,11],[61,14,64,14],[61,18,64,14,"query"],[61,34,64,19],[61,36,65,6],[61,40,65,6,"collection"],[61,61,65,16],[61,63,65,17,"db"],[61,81,65,19],[61,83,65,21],[61,98,65,36],[61,99,65,37],[61,101,66,6],[61,105,66,6,"where"],[61,121,66,11],[61,123,66,12],[61,131,66,20],[61,133,66,22],[61,137,66,26],[61,139,66,28,"currentUser"],[61,150,66,39],[61,151,66,40,"uid"],[61,154,66,43],[61,155,66,44],[61,157,67,6],[61,161,67,6,"orderBy"],[61,179,67,13],[61,181,67,14],[61,192,67,25],[61,194,67,27],[61,200,67,33],[61,201,68,4],[61,202,68,5],[62,6,70,4,"console"],[62,13,70,11],[62,14,70,12,"log"],[62,17,70,15],[62,18,70,16],[62,54,70,52],[62,55,70,53],[63,6,72,4],[63,10,72,10,"unsubscribe"],[63,21,72,21],[63,24,72,24],[63,28,72,24,"onSnapshot"],[63,49,72,34],[63,51,72,35,"q"],[63,52,72,36],[63,54,73,7,"querySnapshot"],[63,67,73,20],[63,71,73,25],[64,8,74,8],[64,12,74,14,"alerts"],[64,18,74,20],[64,21,74,23],[64,23,74,25],[65,8,75,8,"querySnapshot"],[65,21,75,21],[65,22,75,22,"forEach"],[65,29,75,29],[65,30,75,31,"doc"],[65,33,75,34],[65,37,75,39],[66,10,76,10,"alerts"],[66,16,76,16],[66,17,76,17,"push"],[66,21,76,21],[66,22,76,22],[67,12,77,12,"id"],[67,14,77,14],[67,16,77,16,"doc"],[67,19,77,19],[67,20,77,20,"id"],[67,22,77,22],[68,12,78,12],[68,15,78,15,"doc"],[68,18,78,18],[68,19,78,19,"data"],[68,23,78,23],[68,24,78,24],[68,25,78,25],[69,12,79,12,"timestamp"],[69,21,79,21],[69,23,79,23,"doc"],[69,26,79,26],[69,27,79,27,"data"],[69,31,79,31],[69,32,79,32],[69,33,79,33],[69,34,79,34,"timestamp"],[69,43,79,43],[69,45,79,45,"toDate"],[69,51,79,51],[69,52,79,52],[69,53,79,53],[69,57,79,57],[69,61,79,61,"Date"],[69,65,79,65],[69,66,79,66],[70,10,80,10],[70,11,80,11],[70,12,80,12],[71,8,81,8],[71,9,81,9],[71,10,81,10],[72,8,83,8,"console"],[72,15,83,15],[72,16,83,16,"log"],[72,19,83,19],[72,20,83,20],[72,34,83,34,"alerts"],[72,40,83,40],[72,41,83,41,"length"],[72,47,83,47],[72,78,83,78],[72,79,83,79],[73,8,84,8,"callback"],[73,16,84,16],[73,17,84,17,"alerts"],[73,23,84,23],[73,24,84,24],[74,6,85,6],[74,7,85,7],[74,9,86,7,"error"],[74,14,86,12],[74,18,86,17],[75,8,87,8,"console"],[75,15,87,15],[75,16,87,16,"error"],[75,21,87,21],[75,22,87,22],[75,62,87,62],[75,64,87,64,"error"],[75,69,87,69],[75,70,87,70],[76,8,88,8,"callback"],[76,16,88,16],[76,17,88,17],[76,19,88,19],[76,20,88,20],[77,6,89,6],[77,7,90,4],[77,8,90,5],[78,6,92,4],[78,13,92,11,"unsubscribe"],[78,24,92,22],[79,4,93,2],[79,5,93,3],[79,6,93,4],[79,13,93,11,"error"],[79,18,93,16],[79,20,93,18],[80,6,94,4,"console"],[80,13,94,11],[80,14,94,12,"error"],[80,19,94,17],[80,20,94,18],[80,68,94,66],[80,70,94,68,"error"],[80,75,94,73],[80,76,94,74],[81,6,95,4],[81,13,95,11],[81,19,95,17],[81,20,95,18],[81,21,95,19],[82,4,96,2],[83,2,97,0],[83,3,97,1],[85,2,99,0],[86,0,100,0],[87,0,101,0],[88,0,102,0],[89,0,103,0],[90,2,99,0,"exports"],[90,9,99,0],[90,10,99,0,"subscribeToUserAlerts"],[90,31,99,0],[90,34,99,0,"subscribeToUserAlerts"],[90,55,99,0],[91,2,104,7],[91,6,104,13,"getUserAlertCount"],[91,23,104,30],[91,26,104,30,"exports"],[91,33,104,30],[91,34,104,30,"getUserAlertCount"],[91,51,104,30],[92,4,104,30],[92,8,104,30,"_ref2"],[92,13,104,30],[92,20,104,30,"_asyncToGenerator2"],[92,38,104,30],[92,39,104,30,"default"],[92,46,104,30],[92,48,104,33],[92,59,104,40,"userId"],[92,65,104,46],[92,67,104,51],[93,6,105,2],[93,10,105,6],[94,8,106,4],[94,12,106,8],[94,13,106,9,"userId"],[94,19,106,15],[94,21,106,17],[94,28,106,24],[94,29,106,25],[95,8,108,4],[95,12,108,10,"q"],[95,13,108,11],[95,16,108,14],[95,20,108,14,"query"],[95,36,108,19],[95,38,109,6],[95,42,109,6,"collection"],[95,63,109,16],[95,65,109,17,"db"],[95,83,109,19],[95,85,109,21],[95,100,109,36],[95,101,109,37],[95,103,110,6],[95,107,110,6,"where"],[95,123,110,11],[95,125,110,12],[95,133,110,20],[95,135,110,22],[95,139,110,26],[95,141,110,28,"userId"],[95,147,110,34],[95,148,111,4],[95,149,111,5],[96,8,113,4],[96,12,113,10,"querySnapshot"],[96,25,113,23],[96,34,113,32],[96,38,113,32,"getDocs"],[96,56,113,39],[96,58,113,40,"q"],[96,59,113,41],[96,60,113,42],[97,8,114,4],[97,15,114,11,"querySnapshot"],[97,28,114,24],[97,29,114,25,"size"],[97,33,114,29],[98,6,115,2],[98,7,115,3],[98,8,115,4],[98,15,115,11,"error"],[98,20,115,16],[98,22,115,18],[99,8,116,4,"console"],[99,15,116,11],[99,16,116,12,"error"],[99,21,116,17],[99,22,116,18],[99,55,116,51],[99,57,116,53,"error"],[99,62,116,58],[99,63,116,59],[100,8,117,4],[100,15,117,11],[100,16,117,12],[101,6,118,2],[102,4,119,0],[102,5,119,1],[103,4,119,1],[103,20,104,13,"getUserAlertCount"],[103,37,104,30,"getUserAlertCount"],[103,38,104,30,"_x2"],[103,41,104,30],[104,6,104,30],[104,13,104,30,"_ref2"],[104,18,104,30],[104,19,104,30,"apply"],[104,24,104,30],[104,31,104,30,"arguments"],[104,40,104,30],[105,4,104,30],[106,2,104,30],[106,5,119,1],[108,2,121,0],[109,0,122,0],[110,0,123,0],[111,0,124,0],[112,0,125,0],[113,2,126,7],[113,6,126,13,"getUnreadAlertCount"],[113,25,126,32],[113,28,126,32,"exports"],[113,35,126,32],[113,36,126,32,"getUnreadAlertCount"],[113,55,126,32],[114,4,126,32],[114,8,126,32,"_ref3"],[114,13,126,32],[114,20,126,32,"_asyncToGenerator2"],[114,38,126,32],[114,39,126,32,"default"],[114,46,126,32],[114,48,126,35],[114,59,126,42,"userId"],[114,65,126,48],[114,67,126,53],[115,6,127,2],[115,10,127,6],[116,8,128,4],[116,12,128,8],[116,13,128,9,"userId"],[116,19,128,15],[116,21,128,17],[116,28,128,24],[116,29,128,25],[117,8,130,4],[117,12,130,10,"q"],[117,13,130,11],[117,16,130,14],[117,20,130,14,"query"],[117,36,130,19],[117,38,131,6],[117,42,131,6,"collection"],[117,63,131,16],[117,65,131,17,"db"],[117,83,131,19],[117,85,131,21],[117,100,131,36],[117,101,131,37],[117,103,132,6],[117,107,132,6,"where"],[117,123,132,11],[117,125,132,12],[117,133,132,20],[117,135,132,22],[117,139,132,26],[117,141,132,28,"userId"],[117,147,132,34],[117,148,132,35],[117,150,133,6],[117,154,133,6,"where"],[117,170,133,11],[117,172,133,12],[117,178,133,18],[117,180,133,20],[117,184,133,24],[117,186,133,26],[117,191,133,31],[117,192,134,4],[117,193,134,5],[118,8,136,4],[118,12,136,10,"querySnapshot"],[118,25,136,23],[118,34,136,32],[118,38,136,32,"getDocs"],[118,56,136,39],[118,58,136,40,"q"],[118,59,136,41],[118,60,136,42],[119,8,137,4],[119,15,137,11,"querySnapshot"],[119,28,137,24],[119,29,137,25,"size"],[119,33,137,29],[120,6,138,2],[120,7,138,3],[120,8,138,4],[120,15,138,11,"error"],[120,20,138,16],[120,22,138,18],[121,8,139,4,"console"],[121,15,139,11],[121,16,139,12,"error"],[121,21,139,17],[121,22,139,18],[121,57,139,53],[121,59,139,55,"error"],[121,64,139,60],[121,65,139,61],[122,8,140,4],[122,15,140,11],[122,16,140,12],[123,6,141,2],[124,4,142,0],[124,5,142,1],[125,4,142,1],[125,20,126,13,"getUnreadAlertCount"],[125,39,126,32,"getUnreadAlertCount"],[125,40,126,32,"_x3"],[125,43,126,32],[126,6,126,32],[126,13,126,32,"_ref3"],[126,18,126,32],[126,19,126,32,"apply"],[126,24,126,32],[126,31,126,32,"arguments"],[126,40,126,32],[127,4,126,32],[128,2,126,32],[128,5,142,1],[129,0,142,2],[129,3]],"functionMap":{"names":["<global>","createSafetyAlert","subscribeToUserAlerts","<anonymous>","onSnapshot$argument_1","querySnapshot.forEach$argument_0","onSnapshot$argument_2","getUserAlertCount","getUnreadAlertCount"],"mappings":"AAA;iCCqB;CD2B;qCEO;aCK,QD;MEY;8BCE;SDM;OFI;MIC;OJG;WCM,QD;CFE;iCOO;CPe;mCQO;CRgB"}},"type":"js/module"}]}