{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.formatDistance = void 0;\n  var formatDistanceLocale = {\n    lessThanXSeconds: {\n      one: \"less than a second\",\n      other: \"less than {{count}} seconds\"\n    },\n    xSeconds: {\n      one: \"1 second\",\n      other: \"{{count}} seconds\"\n    },\n    halfAMinute: \"half a minute\",\n    lessThanXMinutes: {\n      one: \"less than a minute\",\n      other: \"less than {{count}} minutes\"\n    },\n    xMinutes: {\n      one: \"1 minute\",\n      other: \"{{count}} minutes\"\n    },\n    aboutXHours: {\n      one: \"about 1 hour\",\n      other: \"about {{count}} hours\"\n    },\n    xHours: {\n      one: \"1 hour\",\n      other: \"{{count}} hours\"\n    },\n    xDays: {\n      one: \"1 day\",\n      other: \"{{count}} days\"\n    },\n    aboutXWeeks: {\n      one: \"about 1 week\",\n      other: \"about {{count}} weeks\"\n    },\n    xWeeks: {\n      one: \"1 week\",\n      other: \"{{count}} weeks\"\n    },\n    aboutXMonths: {\n      one: \"about 1 month\",\n      other: \"about {{count}} months\"\n    },\n    xMonths: {\n      one: \"1 month\",\n      other: \"{{count}} months\"\n    },\n    aboutXYears: {\n      one: \"about 1 year\",\n      other: \"about {{count}} years\"\n    },\n    xYears: {\n      one: \"1 year\",\n      other: \"{{count}} years\"\n    },\n    overXYears: {\n      one: \"over 1 year\",\n      other: \"over {{count}} years\"\n    },\n    almostXYears: {\n      one: \"almost 1 year\",\n      other: \"almost {{count}} years\"\n    }\n  };\n  var formatDistance = (token, count, options) => {\n    var result;\n    var tokenValue = formatDistanceLocale[token];\n    if (typeof tokenValue === \"string\") {\n      result = tokenValue;\n    } else if (count === 1) {\n      result = tokenValue.one;\n    } else {\n      result = tokenValue.other.replace(\"{{count}}\", count.toString());\n    }\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return \"in \" + result;\n      } else {\n        return result + \" ago\";\n      }\n    }\n    return result;\n  };\n  exports.formatDistance = formatDistance;\n});","lineCount":89,"map":[[6,2,1,0],[6,6,1,6,"formatDistanceLocale"],[6,26,1,26],[6,29,1,29],[7,4,2,2,"lessThanXSeconds"],[7,20,2,18],[7,22,2,20],[8,6,3,4,"one"],[8,9,3,7],[8,11,3,9],[8,31,3,29],[9,6,4,4,"other"],[9,11,4,9],[9,13,4,11],[10,4,5,2],[10,5,5,3],[11,4,7,2,"xSeconds"],[11,12,7,10],[11,14,7,12],[12,6,8,4,"one"],[12,9,8,7],[12,11,8,9],[12,21,8,19],[13,6,9,4,"other"],[13,11,9,9],[13,13,9,11],[14,4,10,2],[14,5,10,3],[15,4,12,2,"halfAMinute"],[15,15,12,13],[15,17,12,15],[15,32,12,30],[16,4,14,2,"lessThanXMinutes"],[16,20,14,18],[16,22,14,20],[17,6,15,4,"one"],[17,9,15,7],[17,11,15,9],[17,31,15,29],[18,6,16,4,"other"],[18,11,16,9],[18,13,16,11],[19,4,17,2],[19,5,17,3],[20,4,19,2,"xMinutes"],[20,12,19,10],[20,14,19,12],[21,6,20,4,"one"],[21,9,20,7],[21,11,20,9],[21,21,20,19],[22,6,21,4,"other"],[22,11,21,9],[22,13,21,11],[23,4,22,2],[23,5,22,3],[24,4,24,2,"aboutXHours"],[24,15,24,13],[24,17,24,15],[25,6,25,4,"one"],[25,9,25,7],[25,11,25,9],[25,25,25,23],[26,6,26,4,"other"],[26,11,26,9],[26,13,26,11],[27,4,27,2],[27,5,27,3],[28,4,29,2,"xHours"],[28,10,29,8],[28,12,29,10],[29,6,30,4,"one"],[29,9,30,7],[29,11,30,9],[29,19,30,17],[30,6,31,4,"other"],[30,11,31,9],[30,13,31,11],[31,4,32,2],[31,5,32,3],[32,4,34,2,"xDays"],[32,9,34,7],[32,11,34,9],[33,6,35,4,"one"],[33,9,35,7],[33,11,35,9],[33,18,35,16],[34,6,36,4,"other"],[34,11,36,9],[34,13,36,11],[35,4,37,2],[35,5,37,3],[36,4,39,2,"aboutXWeeks"],[36,15,39,13],[36,17,39,15],[37,6,40,4,"one"],[37,9,40,7],[37,11,40,9],[37,25,40,23],[38,6,41,4,"other"],[38,11,41,9],[38,13,41,11],[39,4,42,2],[39,5,42,3],[40,4,44,2,"xWeeks"],[40,10,44,8],[40,12,44,10],[41,6,45,4,"one"],[41,9,45,7],[41,11,45,9],[41,19,45,17],[42,6,46,4,"other"],[42,11,46,9],[42,13,46,11],[43,4,47,2],[43,5,47,3],[44,4,49,2,"aboutXMonths"],[44,16,49,14],[44,18,49,16],[45,6,50,4,"one"],[45,9,50,7],[45,11,50,9],[45,26,50,24],[46,6,51,4,"other"],[46,11,51,9],[46,13,51,11],[47,4,52,2],[47,5,52,3],[48,4,54,2,"xMonths"],[48,11,54,9],[48,13,54,11],[49,6,55,4,"one"],[49,9,55,7],[49,11,55,9],[49,20,55,18],[50,6,56,4,"other"],[50,11,56,9],[50,13,56,11],[51,4,57,2],[51,5,57,3],[52,4,59,2,"aboutXYears"],[52,15,59,13],[52,17,59,15],[53,6,60,4,"one"],[53,9,60,7],[53,11,60,9],[53,25,60,23],[54,6,61,4,"other"],[54,11,61,9],[54,13,61,11],[55,4,62,2],[55,5,62,3],[56,4,64,2,"xYears"],[56,10,64,8],[56,12,64,10],[57,6,65,4,"one"],[57,9,65,7],[57,11,65,9],[57,19,65,17],[58,6,66,4,"other"],[58,11,66,9],[58,13,66,11],[59,4,67,2],[59,5,67,3],[60,4,69,2,"overXYears"],[60,14,69,12],[60,16,69,14],[61,6,70,4,"one"],[61,9,70,7],[61,11,70,9],[61,24,70,22],[62,6,71,4,"other"],[62,11,71,9],[62,13,71,11],[63,4,72,2],[63,5,72,3],[64,4,74,2,"almostXYears"],[64,16,74,14],[64,18,74,16],[65,6,75,4,"one"],[65,9,75,7],[65,11,75,9],[65,26,75,24],[66,6,76,4,"other"],[66,11,76,9],[66,13,76,11],[67,4,77,2],[68,2,78,0],[68,3,78,1],[69,2,80,7],[69,6,80,13,"formatDistance"],[69,20,80,27],[69,23,80,30,"formatDistance"],[69,24,80,31,"token"],[69,29,80,36],[69,31,80,38,"count"],[69,36,80,43],[69,38,80,45,"options"],[69,45,80,52],[69,50,80,57],[70,4,81,2],[70,8,81,6,"result"],[70,14,81,12],[71,4,83,2],[71,8,83,8,"tokenValue"],[71,18,83,18],[71,21,83,21,"formatDistanceLocale"],[71,41,83,41],[71,42,83,42,"token"],[71,47,83,47],[71,48,83,48],[72,4,84,2],[72,8,84,6],[72,15,84,13,"tokenValue"],[72,25,84,23],[72,30,84,28],[72,38,84,36],[72,40,84,38],[73,6,85,4,"result"],[73,12,85,10],[73,15,85,13,"tokenValue"],[73,25,85,23],[74,4,86,2],[74,5,86,3],[74,11,86,9],[74,15,86,13,"count"],[74,20,86,18],[74,25,86,23],[74,26,86,24],[74,28,86,26],[75,6,87,4,"result"],[75,12,87,10],[75,15,87,13,"tokenValue"],[75,25,87,23],[75,26,87,24,"one"],[75,29,87,27],[76,4,88,2],[76,5,88,3],[76,11,88,9],[77,6,89,4,"result"],[77,12,89,10],[77,15,89,13,"tokenValue"],[77,25,89,23],[77,26,89,24,"other"],[77,31,89,29],[77,32,89,30,"replace"],[77,39,89,37],[77,40,89,38],[77,51,89,49],[77,53,89,51,"count"],[77,58,89,56],[77,59,89,57,"toString"],[77,67,89,65],[77,68,89,66],[77,69,89,67],[77,70,89,68],[78,4,90,2],[79,4,92,2],[79,8,92,6,"options"],[79,15,92,13],[79,17,92,15,"addSuffix"],[79,26,92,24],[79,28,92,26],[80,6,93,4],[80,10,93,8,"options"],[80,17,93,15],[80,18,93,16,"comparison"],[80,28,93,26],[80,32,93,30,"options"],[80,39,93,37],[80,40,93,38,"comparison"],[80,50,93,48],[80,53,93,51],[80,54,93,52],[80,56,93,54],[81,8,94,6],[81,15,94,13],[81,20,94,18],[81,23,94,21,"result"],[81,29,94,27],[82,6,95,4],[82,7,95,5],[82,13,95,11],[83,8,96,6],[83,15,96,13,"result"],[83,21,96,19],[83,24,96,22],[83,30,96,28],[84,6,97,4],[85,4,98,2],[86,4,100,2],[86,11,100,9,"result"],[86,17,100,15],[87,2,101,0],[87,3,101,1],[88,2,101,2,"exports"],[88,9,101,2],[88,10,101,2,"formatDistance"],[88,24,101,2],[88,27,101,2,"formatDistance"],[88,41,101,2],[89,0,101,2],[89,3]],"functionMap":{"names":["<global>","formatDistance"],"mappings":"AAA;8BC+E;CDqB"}},"type":"js/module"}]}