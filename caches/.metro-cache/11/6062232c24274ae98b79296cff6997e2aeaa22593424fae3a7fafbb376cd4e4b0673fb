{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.endOfYear = endOfYear;\n  var _toDate = require(_dependencyMap[0], \"./toDate.js\");\n  /**\n   * The {@link endOfYear} function options.\n   */\n\n  /**\n   * @name endOfYear\n   * @category Year Helpers\n   * @summary Return the end of a year for the given date.\n   *\n   * @description\n   * Return the end of a year for the given date.\n   * The result will be in the local timezone.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The original date\n   * @param options - The options\n   *\n   * @returns The end of a year\n   *\n   * @example\n   * // The end of a year for 2 September 2014 11:55:00:\n   * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 0))\n   * //=> Wed Dec 31 2014 23:59:59.999\n   */\n  function endOfYear(date, options) {\n    var _date = (0, _toDate.toDate)(date, options?.in);\n    var year = _date.getFullYear();\n    _date.setFullYear(year + 1, 0, 0);\n    _date.setHours(23, 59, 59, 999);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = endOfYear;\n});","lineCount":44,"map":[[7,2,1,0],[7,6,1,0,"_toDate"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,2,29,7],[34,11,29,16,"endOfYear"],[34,20,29,25,"endOfYear"],[34,21,29,26,"date"],[34,25,29,30],[34,27,29,32,"options"],[34,34,29,39],[34,36,29,41],[35,4,30,2],[35,8,30,8,"_date"],[35,13,30,13],[35,16,30,16],[35,20,30,16,"toDate"],[35,34,30,22],[35,36,30,23,"date"],[35,40,30,27],[35,42,30,29,"options"],[35,49,30,36],[35,51,30,38,"in"],[35,53,30,40],[35,54,30,41],[36,4,31,2],[36,8,31,8,"year"],[36,12,31,12],[36,15,31,15,"_date"],[36,20,31,20],[36,21,31,21,"getFullYear"],[36,32,31,32],[36,33,31,33],[36,34,31,34],[37,4,32,2,"_date"],[37,9,32,7],[37,10,32,8,"setFullYear"],[37,21,32,19],[37,22,32,20,"year"],[37,26,32,24],[37,29,32,27],[37,30,32,28],[37,32,32,30],[37,33,32,31],[37,35,32,33],[37,36,32,34],[37,37,32,35],[38,4,33,2,"_date"],[38,9,33,7],[38,10,33,8,"setHours"],[38,18,33,16],[38,19,33,17],[38,21,33,19],[38,23,33,21],[38,25,33,23],[38,27,33,25],[38,29,33,27],[38,31,33,29],[38,34,33,32],[38,35,33,33],[39,4,34,2],[39,11,34,9,"_date"],[39,16,34,14],[40,2,35,0],[42,2,37,0],[43,2,37,0],[43,6,37,0,"_default"],[43,14,37,0],[43,17,37,0,"exports"],[43,24,37,0],[43,25,37,0,"default"],[43,32,37,0],[43,35,38,15,"endOfYear"],[43,44,38,24],[44,0,38,24],[44,3]],"functionMap":{"names":["<global>","endOfYear"],"mappings":"AAA;OC4B;CDM"}},"type":"js/module"}]}