{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}},{"name":"./startOfWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":47,"index":106}}],"key":"P3QLf1gnhZwOwCLzrccpsspoyVY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameWeek = isSameWeek;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _normalizeDates3 = require(_dependencyMap[2], \"./_lib/normalizeDates.js\");\n  var _startOfWeek = require(_dependencyMap[3], \"./startOfWeek.js\");\n  /**\n   * The {@link isSameWeek} function options.\n   */\n\n  /**\n   * @name isSameWeek\n   * @category Week Helpers\n   * @summary Are the given dates in the same week (and month and year)?\n   *\n   * @description\n   * Are the given dates in the same week (and month and year)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same week (and month and year)\n   *\n   * @example\n   * // Are 31 August 2014 and 4 September 2014 in the same week?\n   * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n   * //=> true\n   *\n   * @example\n   * // If week starts with Monday,\n   * // are 31 August 2014 and 4 September 2014 in the same week?\n   * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n   *   weekStartsOn: 1\n   * })\n   * //=> false\n   *\n   * @example\n   * // Are 1 January 2014 and 1 January 2015 in the same week?\n   * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n   * //=> false\n   */\n  function isSameWeek(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _normalizeDates3.normalizeDates)(options?.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    return +(0, _startOfWeek.startOfWeek)(laterDate_, options) === +(0, _startOfWeek.startOfWeek)(earlierDate_, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameWeek;\n});","lineCount":57,"map":[[9,2,1,0],[9,6,1,0,"_normalizeDates3"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,2,0],[10,6,2,0,"_startOfWeek"],[10,18,2,0],[10,21,2,0,"require"],[10,28,2,0],[10,29,2,0,"_dependencyMap"],[10,43,2,0],[11,2,4,0],[12,0,5,0],[13,0,6,0],[15,2,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,0,34,0],[42,0,35,0],[43,0,36,0],[44,0,37,0],[45,0,38,0],[46,0,39,0],[47,2,40,7],[47,11,40,16,"isSameWeek"],[47,21,40,26,"isSameWeek"],[47,22,40,27,"laterDate"],[47,31,40,36],[47,33,40,38,"earlierDate"],[47,44,40,49],[47,46,40,51,"options"],[47,53,40,58],[47,55,40,60],[48,4,41,2],[48,8,41,2,"_normalizeDates"],[48,23,41,2],[48,26,41,37],[48,30,41,37,"normalizeDates"],[48,61,41,51],[48,63,42,4,"options"],[48,70,42,11],[48,72,42,13,"in"],[48,74,42,15],[48,76,43,4,"laterDate"],[48,85,43,13],[48,87,44,4,"earlierDate"],[48,98,45,2],[48,99,45,3],[49,6,45,3,"_normalizeDates2"],[49,22,45,3],[49,29,45,3,"_slicedToArray2"],[49,44,45,3],[49,45,45,3,"default"],[49,52,45,3],[49,54,45,3,"_normalizeDates"],[49,69,45,3],[50,6,41,9,"laterDate_"],[50,16,41,19],[50,19,41,19,"_normalizeDates2"],[50,35,41,19],[51,6,41,21,"earlierDate_"],[51,18,41,33],[51,21,41,33,"_normalizeDates2"],[51,37,41,33],[52,4,46,2],[52,11,47,4],[52,12,47,5],[52,16,47,5,"startOfWeek"],[52,40,47,16],[52,42,47,17,"laterDate_"],[52,52,47,27],[52,54,47,29,"options"],[52,61,47,36],[52,62,47,37],[52,67,47,42],[52,68,47,43],[52,72,47,43,"startOfWeek"],[52,96,47,54],[52,98,47,55,"earlierDate_"],[52,110,47,67],[52,112,47,69,"options"],[52,119,47,76],[52,120,47,77],[53,2,49,0],[55,2,51,0],[56,2,51,0],[56,6,51,0,"_default"],[56,14,51,0],[56,17,51,0,"exports"],[56,24,51,0],[56,25,51,0,"default"],[56,32,51,0],[56,35,52,15,"isSameWeek"],[56,45,52,25],[57,0,52,25],[57,3]],"functionMap":{"names":["<global>","isSameWeek"],"mappings":"AAA;OCuC;CDS"}},"type":"js/module"}]}