{"dependencies":[{"name":"./_lib/addLeadingZeros.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"nr19Y2AxEUlGdF0WaI8ULOMy6Cc=","exportNames":["*"]}},{"name":"./isValid.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":39,"index":100}}],"key":"Sst1buy9uBfV7bjRtTAEggSwFYs=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":37,"index":138}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.formatISO9075 = formatISO9075;\n  var _addLeadingZeros = require(_dependencyMap[0], \"./_lib/addLeadingZeros.js\");\n  var _isValid = require(_dependencyMap[1], \"./isValid.js\");\n  var _toDate = require(_dependencyMap[2], \"./toDate.js\");\n  /**\n   * The {@link formatISO9075} function options.\n   */\n\n  /**\n   * @name formatISO9075\n   * @category Common Helpers\n   * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n   *\n   * @description\n   * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n   *\n   * @param date - The original date\n   * @param options - An object with options.\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 9075 format:\n   * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n   * //=> '2019-09-18 19:00:52'\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 9075, short format:\n   * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n   * //=> '20190918 190052'\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 9075 format, date only:\n   * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n   * //=> '2019-09-18'\n   *\n   * @example\n   * // Represent 18 September 2019 in ISO 9075 format, time only:\n   * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n   * //=> '19:00:52'\n   */\n  function formatISO9075(date, options) {\n    var date_ = (0, _toDate.toDate)(date, options?.in);\n    if (!(0, _isValid.isValid)(date_)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    var format = options?.format ?? \"extended\";\n    var representation = options?.representation ?? \"complete\";\n    var result = \"\";\n    var dateDelimiter = format === \"extended\" ? \"-\" : \"\";\n    var timeDelimiter = format === \"extended\" ? \":\" : \"\";\n\n    // Representation is either 'date' or 'complete'\n    if (representation !== \"time\") {\n      var day = (0, _addLeadingZeros.addLeadingZeros)(date_.getDate(), 2);\n      var month = (0, _addLeadingZeros.addLeadingZeros)(date_.getMonth() + 1, 2);\n      var year = (0, _addLeadingZeros.addLeadingZeros)(date_.getFullYear(), 4);\n\n      // yyyyMMdd or yyyy-MM-dd.\n      result = `${year}${dateDelimiter}${month}${dateDelimiter}${day}`;\n    }\n\n    // Representation is either 'time' or 'complete'\n    if (representation !== \"date\") {\n      var hour = (0, _addLeadingZeros.addLeadingZeros)(date_.getHours(), 2);\n      var minute = (0, _addLeadingZeros.addLeadingZeros)(date_.getMinutes(), 2);\n      var second = (0, _addLeadingZeros.addLeadingZeros)(date_.getSeconds(), 2);\n\n      // If there's also date, separate it with time with a space\n      var separator = result === \"\" ? \"\" : \" \";\n\n      // HHmmss or HH:mm:ss.\n      result = `${result}${separator}${hour}${timeDelimiter}${minute}${timeDelimiter}${second}`;\n    }\n    return result;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = formatISO9075;\n});","lineCount":87,"map":[[7,2,1,0],[7,6,1,0,"_addLeadingZeros"],[7,22,1,0],[7,25,1,0,"require"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,2,0],[8,6,2,0,"_isValid"],[8,14,2,0],[8,17,2,0,"require"],[8,24,2,0],[8,25,2,0,"_dependencyMap"],[8,39,2,0],[9,2,3,0],[9,6,3,0,"_toDate"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,2,44,7],[49,11,44,16,"formatISO9075"],[49,24,44,29,"formatISO9075"],[49,25,44,30,"date"],[49,29,44,34],[49,31,44,36,"options"],[49,38,44,43],[49,40,44,45],[50,4,45,2],[50,8,45,8,"date_"],[50,13,45,13],[50,16,45,16],[50,20,45,16,"toDate"],[50,34,45,22],[50,36,45,23,"date"],[50,40,45,27],[50,42,45,29,"options"],[50,49,45,36],[50,51,45,38,"in"],[50,53,45,40],[50,54,45,41],[51,4,47,2],[51,8,47,6],[51,9,47,7],[51,13,47,7,"isValid"],[51,29,47,14],[51,31,47,15,"date_"],[51,36,47,20],[51,37,47,21],[51,39,47,23],[52,6,48,4],[52,12,48,10],[52,16,48,14,"RangeError"],[52,26,48,24],[52,27,48,25],[52,47,48,45],[52,48,48,46],[53,4,49,2],[54,4,51,2],[54,8,51,8,"format"],[54,14,51,14],[54,17,51,17,"options"],[54,24,51,24],[54,26,51,26,"format"],[54,32,51,32],[54,36,51,36],[54,46,51,46],[55,4,52,2],[55,8,52,8,"representation"],[55,22,52,22],[55,25,52,25,"options"],[55,32,52,32],[55,34,52,34,"representation"],[55,48,52,48],[55,52,52,52],[55,62,52,62],[56,4,54,2],[56,8,54,6,"result"],[56,14,54,12],[56,17,54,15],[56,19,54,17],[57,4,56,2],[57,8,56,8,"dateDelimiter"],[57,21,56,21],[57,24,56,24,"format"],[57,30,56,30],[57,35,56,35],[57,45,56,45],[57,48,56,48],[57,51,56,51],[57,54,56,54],[57,56,56,56],[58,4,57,2],[58,8,57,8,"timeDelimiter"],[58,21,57,21],[58,24,57,24,"format"],[58,30,57,30],[58,35,57,35],[58,45,57,45],[58,48,57,48],[58,51,57,51],[58,54,57,54],[58,56,57,56],[60,4,59,2],[61,4,60,2],[61,8,60,6,"representation"],[61,22,60,20],[61,27,60,25],[61,33,60,31],[61,35,60,33],[62,6,61,4],[62,10,61,10,"day"],[62,13,61,13],[62,16,61,16],[62,20,61,16,"addLeadingZeros"],[62,52,61,31],[62,54,61,32,"date_"],[62,59,61,37],[62,60,61,38,"getDate"],[62,67,61,45],[62,68,61,46],[62,69,61,47],[62,71,61,49],[62,72,61,50],[62,73,61,51],[63,6,62,4],[63,10,62,10,"month"],[63,15,62,15],[63,18,62,18],[63,22,62,18,"addLeadingZeros"],[63,54,62,33],[63,56,62,34,"date_"],[63,61,62,39],[63,62,62,40,"getMonth"],[63,70,62,48],[63,71,62,49],[63,72,62,50],[63,75,62,53],[63,76,62,54],[63,78,62,56],[63,79,62,57],[63,80,62,58],[64,6,63,4],[64,10,63,10,"year"],[64,14,63,14],[64,17,63,17],[64,21,63,17,"addLeadingZeros"],[64,53,63,32],[64,55,63,33,"date_"],[64,60,63,38],[64,61,63,39,"getFullYear"],[64,72,63,50],[64,73,63,51],[64,74,63,52],[64,76,63,54],[64,77,63,55],[64,78,63,56],[66,6,65,4],[67,6,66,4,"result"],[67,12,66,10],[67,15,66,13],[67,18,66,16,"year"],[67,22,66,20],[67,25,66,23,"dateDelimiter"],[67,38,66,36],[67,41,66,39,"month"],[67,46,66,44],[67,49,66,47,"dateDelimiter"],[67,62,66,60],[67,65,66,63,"day"],[67,68,66,66],[67,70,66,68],[68,4,67,2],[70,4,69,2],[71,4,70,2],[71,8,70,6,"representation"],[71,22,70,20],[71,27,70,25],[71,33,70,31],[71,35,70,33],[72,6,71,4],[72,10,71,10,"hour"],[72,14,71,14],[72,17,71,17],[72,21,71,17,"addLeadingZeros"],[72,53,71,32],[72,55,71,33,"date_"],[72,60,71,38],[72,61,71,39,"getHours"],[72,69,71,47],[72,70,71,48],[72,71,71,49],[72,73,71,51],[72,74,71,52],[72,75,71,53],[73,6,72,4],[73,10,72,10,"minute"],[73,16,72,16],[73,19,72,19],[73,23,72,19,"addLeadingZeros"],[73,55,72,34],[73,57,72,35,"date_"],[73,62,72,40],[73,63,72,41,"getMinutes"],[73,73,72,51],[73,74,72,52],[73,75,72,53],[73,77,72,55],[73,78,72,56],[73,79,72,57],[74,6,73,4],[74,10,73,10,"second"],[74,16,73,16],[74,19,73,19],[74,23,73,19,"addLeadingZeros"],[74,55,73,34],[74,57,73,35,"date_"],[74,62,73,40],[74,63,73,41,"getSeconds"],[74,73,73,51],[74,74,73,52],[74,75,73,53],[74,77,73,55],[74,78,73,56],[74,79,73,57],[76,6,75,4],[77,6,76,4],[77,10,76,10,"separator"],[77,19,76,19],[77,22,76,22,"result"],[77,28,76,28],[77,33,76,33],[77,35,76,35],[77,38,76,38],[77,40,76,40],[77,43,76,43],[77,46,76,46],[79,6,78,4],[80,6,79,4,"result"],[80,12,79,10],[80,15,79,13],[80,18,79,16,"result"],[80,24,79,22],[80,27,79,25,"separator"],[80,36,79,34],[80,39,79,37,"hour"],[80,43,79,41],[80,46,79,44,"timeDelimiter"],[80,59,79,57],[80,62,79,60,"minute"],[80,68,79,66],[80,71,79,69,"timeDelimiter"],[80,84,79,82],[80,87,79,85,"second"],[80,93,79,91],[80,95,79,93],[81,4,80,2],[82,4,82,2],[82,11,82,9,"result"],[82,17,82,15],[83,2,83,0],[85,2,85,0],[86,2,85,0],[86,6,85,0,"_default"],[86,14,85,0],[86,17,85,0,"exports"],[86,24,85,0],[86,25,85,0,"default"],[86,32,85,0],[86,35,86,15,"formatISO9075"],[86,48,86,28],[87,0,86,28],[87,3]],"functionMap":{"names":["<global>","formatISO9075"],"mappings":"AAA;OC2C;CDuC"}},"type":"js/module"}]}