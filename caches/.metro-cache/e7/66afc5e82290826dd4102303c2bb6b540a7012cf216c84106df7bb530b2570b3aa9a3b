{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./BadgeModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":40,"index":107}}],"key":"r7fk+7ZxSOstJNjSYSB8oukiur0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = setBadgeCountAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _BadgeModule = _interopRequireDefault(require(_dependencyMap[3], \"./BadgeModule\"));\n  /**\n   * Sets the badge of the app's icon to the specified number. Setting it to `0` clears the badge. On iOS, this method requires that you have requested\n   * the user's permission for `allowBadge` via [`requestPermissionsAsync`](#requestpermissionsasyncpermissions),\n   * otherwise it will automatically return `false`.\n   * > **Note:** Not all Android launchers support application badges. If the launcher does not support icon badges, the method will resolve to `false`.\n   * @param badgeCount The count which should appear on the badge. A value of `0` will clear the badge.\n   * @param options An object of options configuring behavior applied.\n   * @return It returns a Promise resolving to a boolean representing whether the setting of the badge succeeded.\n   * @header badge\n   */\n  function setBadgeCountAsync(_x, _x2) {\n    return _setBadgeCountAsync.apply(this, arguments);\n  }\n  function _setBadgeCountAsync() {\n    _setBadgeCountAsync = (0, _asyncToGenerator2.default)(function* (badgeCount, options) {\n      if (!_BadgeModule.default.setBadgeCountAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoNotifications', 'setBadgeCountAsync');\n      }\n      var platformOptions = options?.[_expoModulesCore.Platform.OS];\n      return yield _BadgeModule.default.setBadgeCountAsync(badgeCount, platformOptions);\n    });\n    return _setBadgeCountAsync.apply(this, arguments);\n  }\n});","lineCount":33,"map":[[8,2,1,0],[8,6,1,0,"_expoModulesCore"],[8,22,1,0],[8,25,1,0,"require"],[8,32,1,0],[8,33,1,0,"_dependencyMap"],[8,47,1,0],[9,2,2,0],[9,6,2,0,"_BadgeModule"],[9,18,2,0],[9,21,2,0,"_interopRequireDefault"],[9,43,2,0],[9,44,2,0,"require"],[9,51,2,0],[9,52,2,0,"_dependencyMap"],[9,66,2,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,2,3,0],[20,11,13,30,"setBadgeCountAsync"],[20,29,13,48,"setBadgeCountAsync"],[20,30,13,48,"_x"],[20,32,13,48],[20,34,13,48,"_x2"],[20,37,13,48],[21,4,13,48],[21,11,13,48,"_setBadgeCountAsync"],[21,30,13,48],[21,31,13,48,"apply"],[21,36,13,48],[21,43,13,48,"arguments"],[21,52,13,48],[22,2,13,48],[23,2,13,48],[23,11,13,48,"_setBadgeCountAsync"],[23,31,13,48],[24,4,13,48,"_setBadgeCountAsync"],[24,23,13,48],[24,30,13,48,"_asyncToGenerator2"],[24,48,13,48],[24,49,13,48,"default"],[24,56,13,48],[24,58,13,15],[24,69,13,49,"badgeCount"],[24,79,13,59],[24,81,13,61,"options"],[24,88,13,68],[24,90,13,70],[25,6,14,4],[25,10,14,8],[25,11,14,9,"BadgeModule"],[25,31,14,20],[25,32,14,21,"setBadgeCountAsync"],[25,50,14,39],[25,52,14,41],[26,8,15,8],[26,14,15,14],[26,18,15,18,"UnavailabilityError"],[26,54,15,37],[26,55,15,38],[26,74,15,57],[26,76,15,59],[26,96,15,79],[26,97,15,80],[27,6,16,4],[28,6,17,4],[28,10,17,10,"platformOptions"],[28,25,17,25],[28,28,17,28,"options"],[28,35,17,35],[28,38,17,38,"Platform"],[28,63,17,46],[28,64,17,47,"OS"],[28,66,17,49],[28,67,17,50],[29,6,18,4],[29,19,18,17,"BadgeModule"],[29,39,18,28],[29,40,18,29,"setBadgeCountAsync"],[29,58,18,47],[29,59,18,48,"badgeCount"],[29,69,18,58],[29,71,18,60,"platformOptions"],[29,86,18,75],[29,87,18,76],[30,4,19,0],[30,5,19,1],[31,4,19,1],[31,11,19,1,"_setBadgeCountAsync"],[31,30,19,1],[31,31,19,1,"apply"],[31,36,19,1],[31,43,19,1,"arguments"],[31,52,19,1],[32,2,19,1],[33,0,19,1],[33,3]],"functionMap":{"names":["<global>","setBadgeCountAsync"],"mappings":"AAA;eCY;CDM"}},"type":"js/module"}]}