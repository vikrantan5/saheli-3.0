{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"./startOfISOWeekYear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"X77L8nGP6Z9X4UBs3Gj0ppPEop0=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":63},"end":{"line":3,"column":58,"index":121}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameISOWeekYear = isSameISOWeekYear;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _startOfISOWeekYear = require(_dependencyMap[2], \"./startOfISOWeekYear.js\");\n  var _normalizeDates3 = require(_dependencyMap[3], \"./_lib/normalizeDates.js\");\n  /**\n   * The {@link isSameISOWeekYear} function options.\n   */\n\n  /**\n   * @name isSameISOWeekYear\n   * @category ISO Week-Numbering Year Helpers\n   * @summary Are the given dates in the same ISO week-numbering year?\n   *\n   * @description\n   * Are the given dates in the same ISO week-numbering year?\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same ISO week-numbering year\n   *\n   * @example\n   * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n   * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n   * //=> true\n   */\n  function isSameISOWeekYear(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _normalizeDates3.normalizeDates)(options?.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    return +(0, _startOfISOWeekYear.startOfISOWeekYear)(laterDate_) === +(0, _startOfISOWeekYear.startOfISOWeekYear)(earlierDate_);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameISOWeekYear;\n});","lineCount":46,"map":[[9,2,1,0],[9,6,1,0,"_startOfISOWeekYear"],[9,25,1,0],[9,28,1,0,"require"],[9,35,1,0],[9,36,1,0,"_dependencyMap"],[9,50,1,0],[10,2,3,0],[10,6,3,0,"_normalizeDates3"],[10,22,3,0],[10,25,3,0,"require"],[10,32,3,0],[10,33,3,0,"_dependencyMap"],[10,47,3,0],[11,2,5,0],[12,0,6,0],[13,0,7,0],[15,2,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,2,30,7],[36,11,30,16,"isSameISOWeekYear"],[36,28,30,33,"isSameISOWeekYear"],[36,29,30,34,"laterDate"],[36,38,30,43],[36,40,30,45,"earlierDate"],[36,51,30,56],[36,53,30,58,"options"],[36,60,30,65],[36,62,30,67],[37,4,31,2],[37,8,31,2,"_normalizeDates"],[37,23,31,2],[37,26,31,37],[37,30,31,37,"normalizeDates"],[37,61,31,51],[37,63,32,4,"options"],[37,70,32,11],[37,72,32,13,"in"],[37,74,32,15],[37,76,33,4,"laterDate"],[37,85,33,13],[37,87,34,4,"earlierDate"],[37,98,35,2],[37,99,35,3],[38,6,35,3,"_normalizeDates2"],[38,22,35,3],[38,29,35,3,"_slicedToArray2"],[38,44,35,3],[38,45,35,3,"default"],[38,52,35,3],[38,54,35,3,"_normalizeDates"],[38,69,35,3],[39,6,31,9,"laterDate_"],[39,16,31,19],[39,19,31,19,"_normalizeDates2"],[39,35,31,19],[40,6,31,21,"earlierDate_"],[40,18,31,33],[40,21,31,33,"_normalizeDates2"],[40,37,31,33],[41,4,36,2],[41,11,36,9],[41,12,36,10],[41,16,36,10,"startOfISOWeekYear"],[41,54,36,28],[41,56,36,29,"laterDate_"],[41,66,36,39],[41,67,36,40],[41,72,36,45],[41,73,36,46],[41,77,36,46,"startOfISOWeekYear"],[41,115,36,64],[41,117,36,65,"earlierDate_"],[41,129,36,77],[41,130,36,78],[42,2,37,0],[44,2,39,0],[45,2,39,0],[45,6,39,0,"_default"],[45,14,39,0],[45,17,39,0,"exports"],[45,24,39,0],[45,25,39,0,"default"],[45,32,39,0],[45,35,40,15,"isSameISOWeekYear"],[45,52,40,32],[46,0,40,32],[46,3]],"functionMap":{"names":["<global>","isSameISOWeekYear"],"mappings":"AAA;OC6B;CDO"}},"type":"js/module"}]}