{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"firebase/firestore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":14,"column":28,"index":201}}],"key":"n8ZdwTgQb9oFW01pH/SKxYwC/nA=","exportNames":["*"]}},{"name":"../config/firebaseConfig","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":203},"end":{"line":15,"column":52,"index":255}}],"key":"c2ktbavwtrva9DBC5I1TB1Fz260=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.upvoteSafetyMarker = exports.subscribeToSafetyMarkers = exports.isLocationInDangerZone = exports.hasUserUpvotedMarker = exports.getMarkersByStatus = exports.createSafetyMarker = exports.calculateDistance = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _firestore = require(_dependencyMap[2], \"firebase/firestore\");\n  var _firebaseConfig = require(_dependencyMap[3], \"../config/firebaseConfig\");\n  /**\r\n   * Create a new safety marker\r\n   * @param {Object} markerData - Marker data\r\n   * @param {Object} markerData.coordinates - {latitude, longitude}\r\n   * @param {string} markerData.status - 'safe', 'caution', or 'unsafe'\r\n   * @param {string} markerData.note - Optional description\r\n   * @returns {Promise<string>} - Document ID of created marker\r\n   */\n  var createSafetyMarker = exports.createSafetyMarker = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* (markerData) {\n      try {\n        var currentUser = _firebaseConfig.auth.currentUser;\n        if (!currentUser) {\n          throw new Error('User must be logged in to create a safety marker');\n        }\n        var marker = {\n          userId: currentUser.uid,\n          coordinates: markerData.coordinates,\n          status: markerData.status,\n          // 'safe', 'caution', 'unsafe'\n          note: markerData.note || '',\n          timestamp: (0, _firestore.serverTimestamp)(),\n          upvotes: 0,\n          upvoters: [],\n          verified: false\n        };\n        console.log('Creating safety marker:', marker);\n        var docRef = yield (0, _firestore.addDoc)((0, _firestore.collection)(_firebaseConfig.db, 'safety_markers'), marker);\n        console.log('✅ Safety marker created successfully with ID:', docRef.id);\n        return docRef.id;\n      } catch (error) {\n        console.error('❌ Error creating safety marker:', error);\n        throw error;\n      }\n    });\n    return function createSafetyMarker(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Subscribe to real-time safety markers updates\r\n   * @param {Function} callback - Callback function that receives markers array\r\n   * @returns {Function} - Unsubscribe function\r\n   */\n  var subscribeToSafetyMarkers = callback => {\n    try {\n      var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_markers'), (0, _firestore.orderBy)('timestamp', 'desc'));\n      console.log('📡 Subscribing to safety markers...');\n      var unsubscribe = (0, _firestore.onSnapshot)(q, querySnapshot => {\n        var markers = [];\n        querySnapshot.forEach(doc => {\n          markers.push({\n            id: doc.id,\n            ...doc.data(),\n            timestamp: doc.data().timestamp?.toDate() || new Date()\n          });\n        });\n        console.log(`✅ Received ${markers.length} safety markers from Firestore`);\n        callback(markers);\n      }, error => {\n        console.error('❌ Error in safety markers subscription:', error);\n        callback([]);\n      });\n      return unsubscribe;\n    } catch (error) {\n      console.error('❌ Error setting up safety markers subscription:', error);\n      return () => {};\n    }\n  };\n\n  /**\r\n   * Upvote a safety marker (atomic operation)\r\n   * @param {string} markerId - Marker document ID\r\n   * @returns {Promise<void>}\r\n   */\n  exports.subscribeToSafetyMarkers = subscribeToSafetyMarkers;\n  var upvoteSafetyMarker = exports.upvoteSafetyMarker = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (markerId) {\n      try {\n        var currentUser = _firebaseConfig.auth.currentUser;\n        if (!currentUser) {\n          throw new Error('User must be logged in to upvote');\n        }\n        var markerRef = (0, _firestore.doc)(_firebaseConfig.db, 'safety_markers', markerId);\n        yield (0, _firestore.runTransaction)(_firebaseConfig.db, /*#__PURE__*/function () {\n          var _ref3 = (0, _asyncToGenerator2.default)(function* (transaction) {\n            var markerDoc = yield transaction.get(markerRef);\n            if (!markerDoc.exists()) {\n              throw new Error('Marker does not exist');\n            }\n            var markerData = markerDoc.data();\n            var upvoters = markerData.upvoters || [];\n            var currentUpvotes = markerData.upvotes || 0;\n            if (upvoters.includes(currentUser.uid)) {\n              // Remove upvote\n              transaction.update(markerRef, {\n                upvotes: currentUpvotes - 1,\n                upvoters: upvoters.filter(uid => uid !== currentUser.uid),\n                verified: currentUpvotes - 1 >= 5\n              });\n              console.log('👎 Removed upvote from marker:', markerId);\n            } else {\n              // Add upvote\n              transaction.update(markerRef, {\n                upvotes: currentUpvotes + 1,\n                upvoters: [...upvoters, currentUser.uid],\n                verified: currentUpvotes + 1 >= 5\n              });\n              console.log('👍 Added upvote to marker:', markerId);\n            }\n          });\n          return function (_x3) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n        console.log('✅ Upvote transaction completed successfully');\n      } catch (error) {\n        console.error('❌ Error upvoting marker:', error);\n        throw error;\n      }\n    });\n    return function upvoteSafetyMarker(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Check if current user has upvoted a marker\r\n   * @param {Array} upvoters - Array of user IDs who upvoted\r\n   * @returns {boolean}\r\n   */\n  var hasUserUpvotedMarker = upvoters => {\n    var currentUser = _firebaseConfig.auth.currentUser;\n    if (!currentUser || !upvoters) return false;\n    return upvoters.includes(currentUser.uid);\n  };\n\n  /**\r\n   * Get markers by status\r\n   * @param {string} status - 'safe', 'caution', or 'unsafe'\r\n   * @returns {Promise<Array>}\r\n   */\n  exports.hasUserUpvotedMarker = hasUserUpvotedMarker;\n  var getMarkersByStatus = exports.getMarkersByStatus = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (status) {\n      try {\n        var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_markers'), (0, _firestore.where)('status', '==', status));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        var markers = [];\n        querySnapshot.forEach(doc => {\n          markers.push({\n            id: doc.id,\n            ...doc.data(),\n            timestamp: doc.data().timestamp?.toDate() || new Date()\n          });\n        });\n        return markers;\n      } catch (error) {\n        console.error('Error getting markers by status:', error);\n        return [];\n      }\n    });\n    return function getMarkersByStatus(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Calculate if a location is within danger zone\r\n   * @param {Object} location - {latitude, longitude}\r\n   * @param {Array} unsafeMarkers - Array of unsafe markers\r\n   * @param {number} radiusKm - Radius in kilometers\r\n   * @returns {Object|null} - Returns closest unsafe marker if within radius\r\n   */\n  var isLocationInDangerZone = function (location, unsafeMarkers) {\n    var radiusKm = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n    for (var marker of unsafeMarkers) {\n      var distance = calculateDistance(location.latitude, location.longitude, marker.coordinates.latitude, marker.coordinates.longitude);\n      if (distance <= radiusKm) {\n        return {\n          ...marker,\n          distance\n        };\n      }\n    }\n    return null;\n  };\n\n  /**\r\n   * Calculate distance between two coordinates using Haversine formula\r\n   * @param {number} lat1 - Latitude 1\r\n   * @param {number} lon1 - Longitude 1\r\n   * @param {number} lat2 - Latitude 2\r\n   * @param {number} lon2 - Longitude 2\r\n   * @returns {number} - Distance in kilometers\r\n   */\n  exports.isLocationInDangerZone = isLocationInDangerZone;\n  var calculateDistance = (lat1, lon1, lat2, lon2) => {\n    var R = 6371; // Earth's radius in km\n    var dLat = toRad(lat2 - lat1);\n    var dLon = toRad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var distance = R * c;\n    return distance;\n  };\n  exports.calculateDistance = calculateDistance;\n  var toRad = degrees => {\n    return degrees * (Math.PI / 180);\n  };\n});","lineCount":221,"map":[[8,2,1,0],[8,6,1,0,"_firestore"],[8,16,1,0],[8,19,1,0,"require"],[8,26,1,0],[8,27,1,0,"_dependencyMap"],[8,41,1,0],[9,2,15,0],[9,6,15,0,"_firebaseConfig"],[9,21,15,0],[9,24,15,0,"require"],[9,31,15,0],[9,32,15,0,"_dependencyMap"],[9,46,15,0],[10,2,17,0],[11,0,18,0],[12,0,19,0],[13,0,20,0],[14,0,21,0],[15,0,22,0],[16,0,23,0],[17,0,24,0],[18,2,25,7],[18,6,25,13,"createSafetyMarker"],[18,24,25,31],[18,27,25,31,"exports"],[18,34,25,31],[18,35,25,31,"createSafetyMarker"],[18,53,25,31],[19,4,25,31],[19,8,25,31,"_ref"],[19,12,25,31],[19,19,25,31,"_asyncToGenerator2"],[19,37,25,31],[19,38,25,31,"default"],[19,45,25,31],[19,47,25,34],[19,58,25,41,"markerData"],[19,68,25,51],[19,70,25,56],[20,6,26,2],[20,10,26,6],[21,8,27,4],[21,12,27,10,"currentUser"],[21,23,27,21],[21,26,27,24,"auth"],[21,46,27,28],[21,47,27,29,"currentUser"],[21,58,27,40],[22,8,28,4],[22,12,28,8],[22,13,28,9,"currentUser"],[22,24,28,20],[22,26,28,22],[23,10,29,6],[23,16,29,12],[23,20,29,16,"Error"],[23,25,29,21],[23,26,29,22],[23,76,29,72],[23,77,29,73],[24,8,30,4],[25,8,32,4],[25,12,32,10,"marker"],[25,18,32,16],[25,21,32,19],[26,10,33,6,"userId"],[26,16,33,12],[26,18,33,14,"currentUser"],[26,29,33,25],[26,30,33,26,"uid"],[26,33,33,29],[27,10,34,6,"coordinates"],[27,21,34,17],[27,23,34,19,"markerData"],[27,33,34,29],[27,34,34,30,"coordinates"],[27,45,34,41],[28,10,35,6,"status"],[28,16,35,12],[28,18,35,14,"markerData"],[28,28,35,24],[28,29,35,25,"status"],[28,35,35,31],[29,10,35,33],[30,10,36,6,"note"],[30,14,36,10],[30,16,36,12,"markerData"],[30,26,36,22],[30,27,36,23,"note"],[30,31,36,27],[30,35,36,31],[30,37,36,33],[31,10,37,6,"timestamp"],[31,19,37,15],[31,21,37,17],[31,25,37,17,"serverTimestamp"],[31,51,37,32],[31,53,37,33],[31,54,37,34],[32,10,38,6,"upvotes"],[32,17,38,13],[32,19,38,15],[32,20,38,16],[33,10,39,6,"upvoters"],[33,18,39,14],[33,20,39,16],[33,22,39,18],[34,10,40,6,"verified"],[34,18,40,14],[34,20,40,16],[35,8,41,4],[35,9,41,5],[36,8,43,4,"console"],[36,15,43,11],[36,16,43,12,"log"],[36,19,43,15],[36,20,43,16],[36,45,43,41],[36,47,43,43,"marker"],[36,53,43,49],[36,54,43,50],[37,8,45,4],[37,12,45,10,"docRef"],[37,18,45,16],[37,27,45,25],[37,31,45,25,"addDoc"],[37,48,45,31],[37,50,45,32],[37,54,45,32,"collection"],[37,75,45,42],[37,77,45,43,"db"],[37,95,45,45],[37,97,45,47],[37,113,45,63],[37,114,45,64],[37,116,45,66,"marker"],[37,122,45,72],[37,123,45,73],[38,8,46,4,"console"],[38,15,46,11],[38,16,46,12,"log"],[38,19,46,15],[38,20,46,16],[38,67,46,63],[38,69,46,65,"docRef"],[38,75,46,71],[38,76,46,72,"id"],[38,78,46,74],[38,79,46,75],[39,8,48,4],[39,15,48,11,"docRef"],[39,21,48,17],[39,22,48,18,"id"],[39,24,48,20],[40,6,49,2],[40,7,49,3],[40,8,49,4],[40,15,49,11,"error"],[40,20,49,16],[40,22,49,18],[41,8,50,4,"console"],[41,15,50,11],[41,16,50,12,"error"],[41,21,50,17],[41,22,50,18],[41,55,50,51],[41,57,50,53,"error"],[41,62,50,58],[41,63,50,59],[42,8,51,4],[42,14,51,10,"error"],[42,19,51,15],[43,6,52,2],[44,4,53,0],[44,5,53,1],[45,4,53,1],[45,20,25,13,"createSafetyMarker"],[45,38,25,31,"createSafetyMarker"],[45,39,25,31,"_x"],[45,41,25,31],[46,6,25,31],[46,13,25,31,"_ref"],[46,17,25,31],[46,18,25,31,"apply"],[46,23,25,31],[46,30,25,31,"arguments"],[46,39,25,31],[47,4,25,31],[48,2,25,31],[48,5,53,1],[50,2,55,0],[51,0,56,0],[52,0,57,0],[53,0,58,0],[54,0,59,0],[55,2,60,7],[55,6,60,13,"subscribeToSafetyMarkers"],[55,30,60,37],[55,33,60,41,"callback"],[55,41,60,49],[55,45,60,54],[56,4,61,2],[56,8,61,6],[57,6,62,4],[57,10,62,10,"q"],[57,11,62,11],[57,14,62,14],[57,18,62,14,"query"],[57,34,62,19],[57,36,63,6],[57,40,63,6,"collection"],[57,61,63,16],[57,63,63,17,"db"],[57,81,63,19],[57,83,63,21],[57,99,63,37],[57,100,63,38],[57,102,64,6],[57,106,64,6,"orderBy"],[57,124,64,13],[57,126,64,14],[57,137,64,25],[57,139,64,27],[57,145,64,33],[57,146,65,4],[57,147,65,5],[58,6,67,4,"console"],[58,13,67,11],[58,14,67,12,"log"],[58,17,67,15],[58,18,67,16],[58,55,67,53],[58,56,67,54],[59,6,69,4],[59,10,69,10,"unsubscribe"],[59,21,69,21],[59,24,69,24],[59,28,69,24,"onSnapshot"],[59,49,69,34],[59,51,69,35,"q"],[59,52,69,36],[59,54,70,7,"querySnapshot"],[59,67,70,20],[59,71,70,25],[60,8,71,8],[60,12,71,14,"markers"],[60,19,71,21],[60,22,71,24],[60,24,71,26],[61,8,72,8,"querySnapshot"],[61,21,72,21],[61,22,72,22,"forEach"],[61,29,72,29],[61,30,72,31,"doc"],[61,33,72,34],[61,37,72,39],[62,10,73,10,"markers"],[62,17,73,17],[62,18,73,18,"push"],[62,22,73,22],[62,23,73,23],[63,12,74,12,"id"],[63,14,74,14],[63,16,74,16,"doc"],[63,19,74,19],[63,20,74,20,"id"],[63,22,74,22],[64,12,75,12],[64,15,75,15,"doc"],[64,18,75,18],[64,19,75,19,"data"],[64,23,75,23],[64,24,75,24],[64,25,75,25],[65,12,76,12,"timestamp"],[65,21,76,21],[65,23,76,23,"doc"],[65,26,76,26],[65,27,76,27,"data"],[65,31,76,31],[65,32,76,32],[65,33,76,33],[65,34,76,34,"timestamp"],[65,43,76,43],[65,45,76,45,"toDate"],[65,51,76,51],[65,52,76,52],[65,53,76,53],[65,57,76,57],[65,61,76,61,"Date"],[65,65,76,65],[65,66,76,66],[66,10,77,10],[66,11,77,11],[66,12,77,12],[67,8,78,8],[67,9,78,9],[67,10,78,10],[68,8,80,8,"console"],[68,15,80,15],[68,16,80,16,"log"],[68,19,80,19],[68,20,80,20],[68,34,80,34,"markers"],[68,41,80,41],[68,42,80,42,"length"],[68,48,80,48],[68,80,80,80],[68,81,80,81],[69,8,81,8,"callback"],[69,16,81,16],[69,17,81,17,"markers"],[69,24,81,24],[69,25,81,25],[70,6,82,6],[70,7,82,7],[70,9,83,7,"error"],[70,14,83,12],[70,18,83,17],[71,8,84,8,"console"],[71,15,84,15],[71,16,84,16,"error"],[71,21,84,21],[71,22,84,22],[71,63,84,63],[71,65,84,65,"error"],[71,70,84,70],[71,71,84,71],[72,8,85,8,"callback"],[72,16,85,16],[72,17,85,17],[72,19,85,19],[72,20,85,20],[73,6,86,6],[73,7,87,4],[73,8,87,5],[74,6,89,4],[74,13,89,11,"unsubscribe"],[74,24,89,22],[75,4,90,2],[75,5,90,3],[75,6,90,4],[75,13,90,11,"error"],[75,18,90,16],[75,20,90,18],[76,6,91,4,"console"],[76,13,91,11],[76,14,91,12,"error"],[76,19,91,17],[76,20,91,18],[76,69,91,67],[76,71,91,69,"error"],[76,76,91,74],[76,77,91,75],[77,6,92,4],[77,13,92,11],[77,19,92,17],[77,20,92,18],[77,21,92,19],[78,4,93,2],[79,2,94,0],[79,3,94,1],[81,2,96,0],[82,0,97,0],[83,0,98,0],[84,0,99,0],[85,0,100,0],[86,2,96,0,"exports"],[86,9,96,0],[86,10,96,0,"subscribeToSafetyMarkers"],[86,34,96,0],[86,37,96,0,"subscribeToSafetyMarkers"],[86,61,96,0],[87,2,101,7],[87,6,101,13,"upvoteSafetyMarker"],[87,24,101,31],[87,27,101,31,"exports"],[87,34,101,31],[87,35,101,31,"upvoteSafetyMarker"],[87,53,101,31],[88,4,101,31],[88,8,101,31,"_ref2"],[88,13,101,31],[88,20,101,31,"_asyncToGenerator2"],[88,38,101,31],[88,39,101,31,"default"],[88,46,101,31],[88,48,101,34],[88,59,101,41,"markerId"],[88,67,101,49],[88,69,101,54],[89,6,102,2],[89,10,102,6],[90,8,103,4],[90,12,103,10,"currentUser"],[90,23,103,21],[90,26,103,24,"auth"],[90,46,103,28],[90,47,103,29,"currentUser"],[90,58,103,40],[91,8,104,4],[91,12,104,8],[91,13,104,9,"currentUser"],[91,24,104,20],[91,26,104,22],[92,10,105,6],[92,16,105,12],[92,20,105,16,"Error"],[92,25,105,21],[92,26,105,22],[92,60,105,56],[92,61,105,57],[93,8,106,4],[94,8,108,4],[94,12,108,10,"markerRef"],[94,21,108,19],[94,24,108,22],[94,28,108,22,"doc"],[94,42,108,25],[94,44,108,26,"db"],[94,62,108,28],[94,64,108,30],[94,80,108,46],[94,82,108,48,"markerId"],[94,90,108,56],[94,91,108,57],[95,8,110,4],[95,14,110,10],[95,18,110,10,"runTransaction"],[95,43,110,24],[95,45,110,25,"db"],[95,63,110,27],[96,10,110,27],[96,14,110,27,"_ref3"],[96,19,110,27],[96,26,110,27,"_asyncToGenerator2"],[96,44,110,27],[96,45,110,27,"default"],[96,52,110,27],[96,54,110,29],[96,65,110,36,"transaction"],[96,76,110,47],[96,78,110,52],[97,12,111,6],[97,16,111,12,"markerDoc"],[97,25,111,21],[97,34,111,30,"transaction"],[97,45,111,41],[97,46,111,42,"get"],[97,49,111,45],[97,50,111,46,"markerRef"],[97,59,111,55],[97,60,111,56],[98,12,113,6],[98,16,113,10],[98,17,113,11,"markerDoc"],[98,26,113,20],[98,27,113,21,"exists"],[98,33,113,27],[98,34,113,28],[98,35,113,29],[98,37,113,31],[99,14,114,8],[99,20,114,14],[99,24,114,18,"Error"],[99,29,114,23],[99,30,114,24],[99,53,114,47],[99,54,114,48],[100,12,115,6],[101,12,117,6],[101,16,117,12,"markerData"],[101,26,117,22],[101,29,117,25,"markerDoc"],[101,38,117,34],[101,39,117,35,"data"],[101,43,117,39],[101,44,117,40],[101,45,117,41],[102,12,118,6],[102,16,118,12,"upvoters"],[102,24,118,20],[102,27,118,23,"markerData"],[102,37,118,33],[102,38,118,34,"upvoters"],[102,46,118,42],[102,50,118,46],[102,52,118,48],[103,12,119,6],[103,16,119,12,"currentUpvotes"],[103,30,119,26],[103,33,119,29,"markerData"],[103,43,119,39],[103,44,119,40,"upvotes"],[103,51,119,47],[103,55,119,51],[103,56,119,52],[104,12,121,6],[104,16,121,10,"upvoters"],[104,24,121,18],[104,25,121,19,"includes"],[104,33,121,27],[104,34,121,28,"currentUser"],[104,45,121,39],[104,46,121,40,"uid"],[104,49,121,43],[104,50,121,44],[104,52,121,46],[105,14,122,8],[106,14,123,8,"transaction"],[106,25,123,19],[106,26,123,20,"update"],[106,32,123,26],[106,33,123,27,"markerRef"],[106,42,123,36],[106,44,123,38],[107,16,124,10,"upvotes"],[107,23,124,17],[107,25,124,19,"currentUpvotes"],[107,39,124,33],[107,42,124,36],[107,43,124,37],[108,16,125,10,"upvoters"],[108,24,125,18],[108,26,125,20,"upvoters"],[108,34,125,28],[108,35,125,29,"filter"],[108,41,125,35],[108,42,125,36,"uid"],[108,45,125,39],[108,49,125,43,"uid"],[108,52,125,46],[108,57,125,51,"currentUser"],[108,68,125,62],[108,69,125,63,"uid"],[108,72,125,66],[108,73,125,67],[109,16,126,10,"verified"],[109,24,126,18],[109,26,126,21,"currentUpvotes"],[109,40,126,35],[109,43,126,38],[109,44,126,39],[109,48,126,44],[110,14,127,8],[110,15,127,9],[110,16,127,10],[111,14,128,8,"console"],[111,21,128,15],[111,22,128,16,"log"],[111,25,128,19],[111,26,128,20],[111,58,128,52],[111,60,128,54,"markerId"],[111,68,128,62],[111,69,128,63],[112,12,129,6],[112,13,129,7],[112,19,129,13],[113,14,130,8],[114,14,131,8,"transaction"],[114,25,131,19],[114,26,131,20,"update"],[114,32,131,26],[114,33,131,27,"markerRef"],[114,42,131,36],[114,44,131,38],[115,16,132,10,"upvotes"],[115,23,132,17],[115,25,132,19,"currentUpvotes"],[115,39,132,33],[115,42,132,36],[115,43,132,37],[116,16,133,10,"upvoters"],[116,24,133,18],[116,26,133,20],[116,27,133,21],[116,30,133,24,"upvoters"],[116,38,133,32],[116,40,133,34,"currentUser"],[116,51,133,45],[116,52,133,46,"uid"],[116,55,133,49],[116,56,133,50],[117,16,134,10,"verified"],[117,24,134,18],[117,26,134,21,"currentUpvotes"],[117,40,134,35],[117,43,134,38],[117,44,134,39],[117,48,134,44],[118,14,135,8],[118,15,135,9],[118,16,135,10],[119,14,136,8,"console"],[119,21,136,15],[119,22,136,16,"log"],[119,25,136,19],[119,26,136,20],[119,54,136,48],[119,56,136,50,"markerId"],[119,64,136,58],[119,65,136,59],[120,12,137,6],[121,10,138,4],[121,11,138,5],[122,10,138,5],[122,27,138,5,"_x3"],[122,30,138,5],[123,12,138,5],[123,19,138,5,"_ref3"],[123,24,138,5],[123,25,138,5,"apply"],[123,30,138,5],[123,37,138,5,"arguments"],[123,46,138,5],[124,10,138,5],[125,8,138,5],[125,12,138,6],[126,8,140,4,"console"],[126,15,140,11],[126,16,140,12,"log"],[126,19,140,15],[126,20,140,16],[126,65,140,61],[126,66,140,62],[127,6,141,2],[127,7,141,3],[127,8,141,4],[127,15,141,11,"error"],[127,20,141,16],[127,22,141,18],[128,8,142,4,"console"],[128,15,142,11],[128,16,142,12,"error"],[128,21,142,17],[128,22,142,18],[128,48,142,44],[128,50,142,46,"error"],[128,55,142,51],[128,56,142,52],[129,8,143,4],[129,14,143,10,"error"],[129,19,143,15],[130,6,144,2],[131,4,145,0],[131,5,145,1],[132,4,145,1],[132,20,101,13,"upvoteSafetyMarker"],[132,38,101,31,"upvoteSafetyMarker"],[132,39,101,31,"_x2"],[132,42,101,31],[133,6,101,31],[133,13,101,31,"_ref2"],[133,18,101,31],[133,19,101,31,"apply"],[133,24,101,31],[133,31,101,31,"arguments"],[133,40,101,31],[134,4,101,31],[135,2,101,31],[135,5,145,1],[137,2,147,0],[138,0,148,0],[139,0,149,0],[140,0,150,0],[141,0,151,0],[142,2,152,7],[142,6,152,13,"hasUserUpvotedMarker"],[142,26,152,33],[142,29,152,37,"upvoters"],[142,37,152,45],[142,41,152,50],[143,4,153,2],[143,8,153,8,"currentUser"],[143,19,153,19],[143,22,153,22,"auth"],[143,42,153,26],[143,43,153,27,"currentUser"],[143,54,153,38],[144,4,154,2],[144,8,154,6],[144,9,154,7,"currentUser"],[144,20,154,18],[144,24,154,22],[144,25,154,23,"upvoters"],[144,33,154,31],[144,35,154,33],[144,42,154,40],[144,47,154,45],[145,4,155,2],[145,11,155,9,"upvoters"],[145,19,155,17],[145,20,155,18,"includes"],[145,28,155,26],[145,29,155,27,"currentUser"],[145,40,155,38],[145,41,155,39,"uid"],[145,44,155,42],[145,45,155,43],[146,2,156,0],[146,3,156,1],[148,2,158,0],[149,0,159,0],[150,0,160,0],[151,0,161,0],[152,0,162,0],[153,2,158,0,"exports"],[153,9,158,0],[153,10,158,0,"hasUserUpvotedMarker"],[153,30,158,0],[153,33,158,0,"hasUserUpvotedMarker"],[153,53,158,0],[154,2,163,7],[154,6,163,13,"getMarkersByStatus"],[154,24,163,31],[154,27,163,31,"exports"],[154,34,163,31],[154,35,163,31,"getMarkersByStatus"],[154,53,163,31],[155,4,163,31],[155,8,163,31,"_ref4"],[155,13,163,31],[155,20,163,31,"_asyncToGenerator2"],[155,38,163,31],[155,39,163,31,"default"],[155,46,163,31],[155,48,163,34],[155,59,163,41,"status"],[155,65,163,47],[155,67,163,52],[156,6,164,2],[156,10,164,6],[157,8,165,4],[157,12,165,10,"q"],[157,13,165,11],[157,16,165,14],[157,20,165,14,"query"],[157,36,165,19],[157,38,166,6],[157,42,166,6,"collection"],[157,63,166,16],[157,65,166,17,"db"],[157,83,166,19],[157,85,166,21],[157,101,166,37],[157,102,166,38],[157,104,167,6],[157,108,167,6,"where"],[157,124,167,11],[157,126,167,12],[157,134,167,20],[157,136,167,22],[157,140,167,26],[157,142,167,28,"status"],[157,148,167,34],[157,149,168,4],[157,150,168,5],[158,8,170,4],[158,12,170,10,"querySnapshot"],[158,25,170,23],[158,34,170,32],[158,38,170,32,"getDocs"],[158,56,170,39],[158,58,170,40,"q"],[158,59,170,41],[158,60,170,42],[159,8,171,4],[159,12,171,10,"markers"],[159,19,171,17],[159,22,171,20],[159,24,171,22],[160,8,172,4,"querySnapshot"],[160,21,172,17],[160,22,172,18,"forEach"],[160,29,172,25],[160,30,172,27,"doc"],[160,33,172,30],[160,37,172,35],[161,10,173,6,"markers"],[161,17,173,13],[161,18,173,14,"push"],[161,22,173,18],[161,23,173,19],[162,12,174,8,"id"],[162,14,174,10],[162,16,174,12,"doc"],[162,19,174,15],[162,20,174,16,"id"],[162,22,174,18],[163,12,175,8],[163,15,175,11,"doc"],[163,18,175,14],[163,19,175,15,"data"],[163,23,175,19],[163,24,175,20],[163,25,175,21],[164,12,176,8,"timestamp"],[164,21,176,17],[164,23,176,19,"doc"],[164,26,176,22],[164,27,176,23,"data"],[164,31,176,27],[164,32,176,28],[164,33,176,29],[164,34,176,30,"timestamp"],[164,43,176,39],[164,45,176,41,"toDate"],[164,51,176,47],[164,52,176,48],[164,53,176,49],[164,57,176,53],[164,61,176,57,"Date"],[164,65,176,61],[164,66,176,62],[165,10,177,6],[165,11,177,7],[165,12,177,8],[166,8,178,4],[166,9,178,5],[166,10,178,6],[167,8,180,4],[167,15,180,11,"markers"],[167,22,180,18],[168,6,181,2],[168,7,181,3],[168,8,181,4],[168,15,181,11,"error"],[168,20,181,16],[168,22,181,18],[169,8,182,4,"console"],[169,15,182,11],[169,16,182,12,"error"],[169,21,182,17],[169,22,182,18],[169,56,182,52],[169,58,182,54,"error"],[169,63,182,59],[169,64,182,60],[170,8,183,4],[170,15,183,11],[170,17,183,13],[171,6,184,2],[172,4,185,0],[172,5,185,1],[173,4,185,1],[173,20,163,13,"getMarkersByStatus"],[173,38,163,31,"getMarkersByStatus"],[173,39,163,31,"_x4"],[173,42,163,31],[174,6,163,31],[174,13,163,31,"_ref4"],[174,18,163,31],[174,19,163,31,"apply"],[174,24,163,31],[174,31,163,31,"arguments"],[174,40,163,31],[175,4,163,31],[176,2,163,31],[176,5,185,1],[178,2,187,0],[179,0,188,0],[180,0,189,0],[181,0,190,0],[182,0,191,0],[183,0,192,0],[184,0,193,0],[185,2,194,7],[185,6,194,13,"isLocationInDangerZone"],[185,28,194,35],[185,31,194,38],[185,40,194,38,"isLocationInDangerZone"],[185,41,194,39,"location"],[185,49,194,47],[185,51,194,49,"unsafeMarkers"],[185,64,194,62],[185,66,194,83],[186,4,194,83],[186,8,194,64,"radiusKm"],[186,16,194,72],[186,19,194,72,"arguments"],[186,28,194,72],[186,29,194,72,"length"],[186,35,194,72],[186,43,194,72,"arguments"],[186,52,194,72],[186,60,194,72,"undefined"],[186,69,194,72],[186,72,194,72,"arguments"],[186,81,194,72],[186,87,194,75],[186,90,194,78],[187,4,195,2],[187,9,195,7],[187,13,195,13,"marker"],[187,19,195,19],[187,23,195,23,"unsafeMarkers"],[187,36,195,36],[187,38,195,38],[188,6,196,4],[188,10,196,10,"distance"],[188,18,196,18],[188,21,196,21,"calculateDistance"],[188,38,196,38],[188,39,197,6,"location"],[188,47,197,14],[188,48,197,15,"latitude"],[188,56,197,23],[188,58,198,6,"location"],[188,66,198,14],[188,67,198,15,"longitude"],[188,76,198,24],[188,78,199,6,"marker"],[188,84,199,12],[188,85,199,13,"coordinates"],[188,96,199,24],[188,97,199,25,"latitude"],[188,105,199,33],[188,107,200,6,"marker"],[188,113,200,12],[188,114,200,13,"coordinates"],[188,125,200,24],[188,126,200,25,"longitude"],[188,135,201,4],[188,136,201,5],[189,6,203,4],[189,10,203,8,"distance"],[189,18,203,16],[189,22,203,20,"radiusKm"],[189,30,203,28],[189,32,203,30],[190,8,204,6],[190,15,204,13],[191,10,204,15],[191,13,204,18,"marker"],[191,19,204,24],[192,10,204,26,"distance"],[193,8,204,35],[193,9,204,36],[194,6,205,4],[195,4,206,2],[196,4,207,2],[196,11,207,9],[196,15,207,13],[197,2,208,0],[197,3,208,1],[199,2,210,0],[200,0,211,0],[201,0,212,0],[202,0,213,0],[203,0,214,0],[204,0,215,0],[205,0,216,0],[206,0,217,0],[207,2,210,0,"exports"],[207,9,210,0],[207,10,210,0,"isLocationInDangerZone"],[207,32,210,0],[207,35,210,0,"isLocationInDangerZone"],[207,57,210,0],[208,2,218,7],[208,6,218,13,"calculateDistance"],[208,23,218,30],[208,26,218,33,"calculateDistance"],[208,27,218,34,"lat1"],[208,31,218,38],[208,33,218,40,"lon1"],[208,37,218,44],[208,39,218,46,"lat2"],[208,43,218,50],[208,45,218,52,"lon2"],[208,49,218,56],[208,54,218,61],[209,4,219,2],[209,8,219,8,"R"],[209,9,219,9],[209,12,219,12],[209,16,219,16],[209,17,219,17],[209,18,219,18],[210,4,220,2],[210,8,220,8,"dLat"],[210,12,220,12],[210,15,220,15,"toRad"],[210,20,220,20],[210,21,220,21,"lat2"],[210,25,220,25],[210,28,220,28,"lat1"],[210,32,220,32],[210,33,220,33],[211,4,221,2],[211,8,221,8,"dLon"],[211,12,221,12],[211,15,221,15,"toRad"],[211,20,221,20],[211,21,221,21,"lon2"],[211,25,221,25],[211,28,221,28,"lon1"],[211,32,221,32],[211,33,221,33],[212,4,223,2],[212,8,223,8,"a"],[212,9,223,9],[212,12,224,4,"Math"],[212,16,224,8],[212,17,224,9,"sin"],[212,20,224,12],[212,21,224,13,"dLat"],[212,25,224,17],[212,28,224,20],[212,29,224,21],[212,30,224,22],[212,33,224,25,"Math"],[212,37,224,29],[212,38,224,30,"sin"],[212,41,224,33],[212,42,224,34,"dLat"],[212,46,224,38],[212,49,224,41],[212,50,224,42],[212,51,224,43],[212,54,225,4,"Math"],[212,58,225,8],[212,59,225,9,"cos"],[212,62,225,12],[212,63,225,13,"toRad"],[212,68,225,18],[212,69,225,19,"lat1"],[212,73,225,23],[212,74,225,24],[212,75,225,25],[212,78,225,28,"Math"],[212,82,225,32],[212,83,225,33,"cos"],[212,86,225,36],[212,87,225,37,"toRad"],[212,92,225,42],[212,93,225,43,"lat2"],[212,97,225,47],[212,98,225,48],[212,99,225,49],[212,102,226,4,"Math"],[212,106,226,8],[212,107,226,9,"sin"],[212,110,226,12],[212,111,226,13,"dLon"],[212,115,226,17],[212,118,226,20],[212,119,226,21],[212,120,226,22],[212,123,226,25,"Math"],[212,127,226,29],[212,128,226,30,"sin"],[212,131,226,33],[212,132,226,34,"dLon"],[212,136,226,38],[212,139,226,41],[212,140,226,42],[212,141,226,43],[213,4,228,2],[213,8,228,8,"c"],[213,9,228,9],[213,12,228,12],[213,13,228,13],[213,16,228,16,"Math"],[213,20,228,20],[213,21,228,21,"atan2"],[213,26,228,26],[213,27,228,27,"Math"],[213,31,228,31],[213,32,228,32,"sqrt"],[213,36,228,36],[213,37,228,37,"a"],[213,38,228,38],[213,39,228,39],[213,41,228,41,"Math"],[213,45,228,45],[213,46,228,46,"sqrt"],[213,50,228,50],[213,51,228,51],[213,52,228,52],[213,55,228,55,"a"],[213,56,228,56],[213,57,228,57],[213,58,228,58],[214,4,229,2],[214,8,229,8,"distance"],[214,16,229,16],[214,19,229,19,"R"],[214,20,229,20],[214,23,229,23,"c"],[214,24,229,24],[215,4,231,2],[215,11,231,9,"distance"],[215,19,231,17],[216,2,232,0],[216,3,232,1],[217,2,232,2,"exports"],[217,9,232,2],[217,10,232,2,"calculateDistance"],[217,27,232,2],[217,30,232,2,"calculateDistance"],[217,47,232,2],[218,2,234,0],[218,6,234,6,"toRad"],[218,11,234,11],[218,14,234,15,"degrees"],[218,21,234,22],[218,25,234,27],[219,4,235,2],[219,11,235,9,"degrees"],[219,18,235,16],[219,22,235,20,"Math"],[219,26,235,24],[219,27,235,25,"PI"],[219,29,235,27],[219,32,235,30],[219,35,235,33],[219,36,235,34],[220,2,236,0],[220,3,236,1],[221,0,236,2],[221,3]],"functionMap":{"names":["<global>","createSafetyMarker","subscribeToSafetyMarkers","onSnapshot$argument_1","querySnapshot.forEach$argument_0","onSnapshot$argument_2","<anonymous>","upvoteSafetyMarker","runTransaction$argument_1","upvoters.filter$argument_0","hasUserUpvotedMarker","getMarkersByStatus","isLocationInDangerZone","calculateDistance","toRad"],"mappings":"AAA;kCCwB;CD4B;wCEO;MCU;8BCE;SDM;ODI;MGC;OHG;WIM,QJ;CFE;kCOO;6BCS;oCCe,8BD;KDa;CPO;oCUO;CVI;kCWO;0BPS;KOM;CXO;sCYS;CZc;iCaU;Cbc;ccE;CdE"}},"type":"js/module"}]}