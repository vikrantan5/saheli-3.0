{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"firebase/firestore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":14,"column":28,"index":201}}],"key":"n8ZdwTgQb9oFW01pH/SKxYwC/nA=","exportNames":["*"]}},{"name":"../config/firebaseConfig","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":203},"end":{"line":15,"column":52,"index":255}}],"key":"c2ktbavwtrva9DBC5I1TB1Fz260=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.verifySafetyMarker = exports.upvoteSafetyMarker = exports.subscribeToSafetyMarkers = exports.isLocationInDangerZone = exports.hasUserVerifiedMarker = exports.hasUserUpvotedMarker = exports.getSafetyScoreCategory = exports.getPendingVerificationMarkers = exports.getMarkersByStatus = exports.createSafetyMarker = exports.calculateSafetyScore = exports.calculateDistance = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _firestore = require(_dependencyMap[2], \"firebase/firestore\");\n  var _firebaseConfig = require(_dependencyMap[3], \"../config/firebaseConfig\");\n  /**\r\n   * Create a new safety marker with attributes\r\n   * @param {Object} markerData - Marker data\r\n   * @param {Object} markerData.coordinates - {latitude, longitude}\r\n   * @param {string} markerData.status - 'safe', 'caution', or 'unsafe'\r\n   * @param {string} markerData.note - Optional description\r\n   * @param {Object} markerData.attributes - Safety attributes\r\n   * @returns {Promise<string>} - Document ID of created marker\r\n   */\n  var createSafetyMarker = exports.createSafetyMarker = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* (markerData) {\n      try {\n        var currentUser = _firebaseConfig.auth.currentUser;\n        if (!currentUser) {\n          throw new Error('User must be logged in to create a safety marker');\n        }\n\n        // Default attributes if not provided\n        var defaultAttributes = {\n          streetLighting: null,\n          // 'good', 'poor', 'none'\n          networkConnectivity: null,\n          // 'excellent', 'good', 'poor', 'none'\n          areaType: null,\n          // 'residential', 'commercial', 'slum', 'isolated'\n          policeSecurity: null,\n          // 'present', 'absent'\n          crowdActivity: null // 'crowded', 'moderate', 'deserted'\n        };\n        var marker = {\n          userId: currentUser.uid,\n          coordinates: markerData.coordinates,\n          status: markerData.status,\n          // 'safe', 'caution', 'unsafe'\n          note: markerData.note || '',\n          attributes: markerData.attributes || defaultAttributes,\n          timestamp: (0, _firestore.serverTimestamp)(),\n          upvotes: 0,\n          upvoters: [],\n          verified: false,\n          verificationCount: 0,\n          verifications: [],\n          // Array of {userId, timestamp, attributes}\n          safetyScore: calculateSafetyScore(markerData.status, markerData.attributes || defaultAttributes),\n          verificationStatus: 'pending' // 'pending', 'verified', 'disputed'\n        };\n        console.log('Creating safety marker:', marker);\n        var docRef = yield (0, _firestore.addDoc)((0, _firestore.collection)(_firebaseConfig.db, 'safety_markers'), marker);\n        console.log('✅ Safety marker created successfully with ID:', docRef.id);\n        return docRef.id;\n      } catch (error) {\n        console.error('❌ Error creating safety marker:', error);\n        throw error;\n      }\n    });\n    return function createSafetyMarker(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Subscribe to real-time safety markers updates\r\n   * @param {Function} callback - Callback function that receives markers array\r\n   * @returns {Function} - Unsubscribe function\r\n   */\n  var subscribeToSafetyMarkers = callback => {\n    try {\n      var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_markers'), (0, _firestore.orderBy)('timestamp', 'desc'));\n      console.log('📡 Subscribing to safety markers...');\n      var unsubscribe = (0, _firestore.onSnapshot)(q, querySnapshot => {\n        var markers = [];\n        querySnapshot.forEach(doc => {\n          markers.push({\n            id: doc.id,\n            ...doc.data(),\n            timestamp: doc.data().timestamp?.toDate() || new Date()\n          });\n        });\n        console.log(`✅ Received ${markers.length} safety markers from Firestore`);\n        callback(markers);\n      }, error => {\n        console.error('❌ Error in safety markers subscription:', error);\n        callback([]);\n      });\n      return unsubscribe;\n    } catch (error) {\n      console.error('❌ Error setting up safety markers subscription:', error);\n      return () => {};\n    }\n  };\n\n  /**\r\n   * Upvote a safety marker (atomic operation)\r\n   * @param {string} markerId - Marker document ID\r\n   * @returns {Promise<void>}\r\n   */\n  exports.subscribeToSafetyMarkers = subscribeToSafetyMarkers;\n  var upvoteSafetyMarker = exports.upvoteSafetyMarker = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (markerId) {\n      try {\n        var currentUser = _firebaseConfig.auth.currentUser;\n        if (!currentUser) {\n          throw new Error('User must be logged in to upvote');\n        }\n        var markerRef = (0, _firestore.doc)(_firebaseConfig.db, 'safety_markers', markerId);\n        yield (0, _firestore.runTransaction)(_firebaseConfig.db, /*#__PURE__*/function () {\n          var _ref3 = (0, _asyncToGenerator2.default)(function* (transaction) {\n            var markerDoc = yield transaction.get(markerRef);\n            if (!markerDoc.exists()) {\n              throw new Error('Marker does not exist');\n            }\n            var markerData = markerDoc.data();\n            var upvoters = markerData.upvoters || [];\n            var currentUpvotes = markerData.upvotes || 0;\n            if (upvoters.includes(currentUser.uid)) {\n              // Remove upvote\n              transaction.update(markerRef, {\n                upvotes: currentUpvotes - 1,\n                upvoters: upvoters.filter(uid => uid !== currentUser.uid),\n                verified: currentUpvotes - 1 >= 5\n              });\n              console.log('👎 Removed upvote from marker:', markerId);\n            } else {\n              // Add upvote\n              transaction.update(markerRef, {\n                upvotes: currentUpvotes + 1,\n                upvoters: [...upvoters, currentUser.uid],\n                verified: currentUpvotes + 1 >= 5\n              });\n              console.log('👍 Added upvote to marker:', markerId);\n            }\n          });\n          return function (_x3) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n        console.log('✅ Upvote transaction completed successfully');\n      } catch (error) {\n        console.error('❌ Error upvoting marker:', error);\n        throw error;\n      }\n    });\n    return function upvoteSafetyMarker(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Check if current user has upvoted a marker\r\n   * @param {Array} upvoters - Array of user IDs who upvoted\r\n   * @returns {boolean}\r\n   */\n  var hasUserUpvotedMarker = upvoters => {\n    var currentUser = _firebaseConfig.auth.currentUser;\n    if (!currentUser || !upvoters) return false;\n    return upvoters.includes(currentUser.uid);\n  };\n\n  /**\r\n   * Get markers by status\r\n   * @param {string} status - 'safe', 'caution', or 'unsafe'\r\n   * @returns {Promise<Array>}\r\n   */\n  exports.hasUserUpvotedMarker = hasUserUpvotedMarker;\n  var getMarkersByStatus = exports.getMarkersByStatus = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (status) {\n      try {\n        var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_markers'), (0, _firestore.where)('status', '==', status));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        var markers = [];\n        querySnapshot.forEach(doc => {\n          markers.push({\n            id: doc.id,\n            ...doc.data(),\n            timestamp: doc.data().timestamp?.toDate() || new Date()\n          });\n        });\n        return markers;\n      } catch (error) {\n        console.error('Error getting markers by status:', error);\n        return [];\n      }\n    });\n    return function getMarkersByStatus(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Calculate if a location is within danger zone\r\n   * @param {Object} location - {latitude, longitude}\r\n   * @param {Array} unsafeMarkers - Array of unsafe markers\r\n   * @param {number} radiusKm - Radius in kilometers\r\n   * @returns {Object|null} - Returns closest unsafe marker if within radius\r\n   */\n  var isLocationInDangerZone = function (location, unsafeMarkers) {\n    var radiusKm = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n    for (var marker of unsafeMarkers) {\n      var distance = calculateDistance(location.latitude, location.longitude, marker.coordinates.latitude, marker.coordinates.longitude);\n      if (distance <= radiusKm) {\n        return {\n          ...marker,\n          distance\n        };\n      }\n    }\n    return null;\n  };\n\n  /**\r\n   * Calculate distance between two coordinates using Haversine formula\r\n   * @param {number} lat1 - Latitude 1\r\n   * @param {number} lon1 - Longitude 1\r\n   * @param {number} lat2 - Latitude 2\r\n   * @param {number} lon2 - Longitude 2\r\n   * @returns {number} - Distance in kilometers\r\n   */\n  exports.isLocationInDangerZone = isLocationInDangerZone;\n  var calculateDistance = (lat1, lon1, lat2, lon2) => {\n    var R = 6371; // Earth's radius in km\n    var dLat = toRad(lat2 - lat1);\n    var dLon = toRad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var distance = R * c;\n    return distance;\n  };\n\n  /**\r\n   * Calculate safety score based on attributes (0-100)\r\n   * @param {string} status - 'safe', 'caution', 'unsafe'\r\n   * @param {Object} attributes - Safety attributes\r\n   * @returns {number} Safety score (0-100)\r\n   */\n  exports.calculateDistance = calculateDistance;\n  var calculateSafetyScore = (status, attributes) => {\n    var score = 50; // Base score\n\n    // Adjust base score by status\n    if (status === 'safe') score = 70;else if (status === 'caution') score = 50;else if (status === 'unsafe') score = 30;\n\n    // Adjust based on attributes\n    if (attributes.streetLighting === 'good') score += 10;else if (attributes.streetLighting === 'poor') score -= 5;else if (attributes.streetLighting === 'none') score -= 15;\n    if (attributes.networkConnectivity === 'excellent') score += 5;else if (attributes.networkConnectivity === 'good') score += 3;else if (attributes.networkConnectivity === 'poor') score -= 3;else if (attributes.networkConnectivity === 'none') score -= 10;\n    if (attributes.areaType === 'residential') score += 10;else if (attributes.areaType === 'commercial') score += 5;else if (attributes.areaType === 'slum') score -= 10;else if (attributes.areaType === 'isolated') score -= 15;\n    if (attributes.policeSecurity === 'present') score += 15;else if (attributes.policeSecurity === 'absent') score -= 10;\n    if (attributes.crowdActivity === 'crowded') score += 10;else if (attributes.crowdActivity === 'moderate') score += 5;else if (attributes.crowdActivity === 'deserted') score -= 15;\n\n    // Ensure score is within 0-100 range\n    return Math.max(0, Math.min(100, score));\n  };\n\n  /**\r\n   * Submit verification for a safety marker\r\n   * @param {string} markerId - Marker document ID\r\n   * @param {boolean} isVerifying - true if verifying, false if disputing\r\n   * @param {Object} userAttributes - User's observation of safety attributes\r\n   * @returns {Promise<void>}\r\n   */\n  exports.calculateSafetyScore = calculateSafetyScore;\n  var verifySafetyMarker = exports.verifySafetyMarker = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (markerId, isVerifying) {\n      var userAttributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      try {\n        var currentUser = _firebaseConfig.auth.currentUser;\n        if (!currentUser) {\n          throw new Error('User must be logged in to verify');\n        }\n        var markerRef = (0, _firestore.doc)(_firebaseConfig.db, 'safety_markers', markerId);\n        yield (0, _firestore.runTransaction)(_firebaseConfig.db, /*#__PURE__*/function () {\n          var _ref6 = (0, _asyncToGenerator2.default)(function* (transaction) {\n            var markerDoc = yield transaction.get(markerRef);\n            if (!markerDoc.exists()) {\n              throw new Error('Marker does not exist');\n            }\n            var markerData = markerDoc.data();\n            var verifications = markerData.verifications || [];\n            var verificationCount = markerData.verificationCount || 0;\n\n            // Check if user already verified\n            var existingVerification = verifications.find(v => v.userId === currentUser.uid);\n            if (existingVerification) {\n              throw new Error('You have already verified this marker');\n            }\n\n            // Add new verification\n            var newVerification = {\n              userId: currentUser.uid,\n              timestamp: new Date().toISOString(),\n              isVerifying,\n              attributes: userAttributes\n            };\n            var updatedVerifications = [...verifications, newVerification];\n            var newVerificationCount = verificationCount + (isVerifying ? 1 : 0);\n\n            // Update verification status\n            var verificationStatus = 'pending';\n            if (newVerificationCount >= 2) {\n              verificationStatus = 'verified';\n            }\n\n            // Recalculate safety score if attributes provided\n            var newSafetyScore = markerData.safetyScore;\n            if (userAttributes) {\n              newSafetyScore = calculateSafetyScore(markerData.status, userAttributes);\n            }\n            transaction.update(markerRef, {\n              verifications: updatedVerifications,\n              verificationCount: newVerificationCount,\n              verificationStatus,\n              verified: verificationStatus === 'verified',\n              safetyScore: newSafetyScore\n            });\n            console.log(`✅ Verification ${isVerifying ? 'added' : 'disputed'} for marker:`, markerId);\n          });\n          return function (_x7) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n      } catch (error) {\n        console.error('❌ Error verifying marker:', error);\n        throw error;\n      }\n    });\n    return function verifySafetyMarker(_x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Check if current user has verified a marker\r\n   * @param {Array} verifications - Array of verification objects\r\n   * @returns {boolean}\r\n   */\n  var hasUserVerifiedMarker = verifications => {\n    var currentUser = _firebaseConfig.auth.currentUser;\n    if (!currentUser || !verifications) return false;\n    return verifications.some(v => v.userId === currentUser.uid);\n  };\n\n  /**\r\n   * Get markers pending verification near a location\r\n   * @param {Object} location - {latitude, longitude}\r\n   * @param {number} radiusKm - Radius in kilometers\r\n   * @returns {Promise<Array>} Array of markers pending verification\r\n   */\n  exports.hasUserVerifiedMarker = hasUserVerifiedMarker;\n  var getPendingVerificationMarkers = exports.getPendingVerificationMarkers = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2.default)(function* (location) {\n      var radiusKm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n      try {\n        var q = (0, _firestore.query)((0, _firestore.collection)(_firebaseConfig.db, 'safety_markers'), (0, _firestore.where)('verificationStatus', '==', 'pending'));\n        var querySnapshot = yield (0, _firestore.getDocs)(q);\n        var markers = [];\n        querySnapshot.forEach(doc => {\n          var markerData = doc.data();\n          var distance = calculateDistance(location.latitude, location.longitude, markerData.coordinates.latitude, markerData.coordinates.longitude);\n          if (distance <= radiusKm) {\n            markers.push({\n              id: doc.id,\n              ...markerData,\n              distance,\n              timestamp: markerData.timestamp?.toDate() || new Date()\n            });\n          }\n        });\n        return markers.sort((a, b) => a.distance - b.distance);\n      } catch (error) {\n        console.error('Error getting pending verification markers:', error);\n        return [];\n      }\n    });\n    return function getPendingVerificationMarkers(_x8) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  /**\r\n   * Get safety score category label\r\n   * @param {number} score - Safety score (0-100)\r\n   * @returns {Object} Category with label and color\r\n   */\n  var getSafetyScoreCategory = score => {\n    if (score >= 90) return {\n      label: 'Very Safe',\n      color: '#10B981',\n      emoji: '✅'\n    };\n    if (score >= 70) return {\n      label: 'Moderately Safe',\n      color: '#3B82F6',\n      emoji: '✔️'\n    };\n    if (score >= 50) return {\n      label: 'Unsafe',\n      color: '#F59E0B',\n      emoji: '⚠️'\n    };\n    return {\n      label: 'Dangerous',\n      color: '#EF4444',\n      emoji: '🚨'\n    };\n  };\n  exports.getSafetyScoreCategory = getSafetyScoreCategory;\n  var toRad = degrees => {\n    return degrees * (Math.PI / 180);\n  };\n});","lineCount":418,"map":[[8,2,1,0],[8,6,1,0,"_firestore"],[8,16,1,0],[8,19,1,0,"require"],[8,26,1,0],[8,27,1,0,"_dependencyMap"],[8,41,1,0],[9,2,15,0],[9,6,15,0,"_firebaseConfig"],[9,21,15,0],[9,24,15,0,"require"],[9,31,15,0],[9,32,15,0,"_dependencyMap"],[9,46,15,0],[10,2,17,0],[11,0,18,0],[12,0,19,0],[13,0,20,0],[14,0,21,0],[15,0,22,0],[16,0,23,0],[17,0,24,0],[18,0,25,0],[19,2,26,7],[19,6,26,13,"createSafetyMarker"],[19,24,26,31],[19,27,26,31,"exports"],[19,34,26,31],[19,35,26,31,"createSafetyMarker"],[19,53,26,31],[20,4,26,31],[20,8,26,31,"_ref"],[20,12,26,31],[20,19,26,31,"_asyncToGenerator2"],[20,37,26,31],[20,38,26,31,"default"],[20,45,26,31],[20,47,26,34],[20,58,26,41,"markerData"],[20,68,26,51],[20,70,26,56],[21,6,27,2],[21,10,27,6],[22,8,28,4],[22,12,28,10,"currentUser"],[22,23,28,21],[22,26,28,24,"auth"],[22,46,28,28],[22,47,28,29,"currentUser"],[22,58,28,40],[23,8,29,4],[23,12,29,8],[23,13,29,9,"currentUser"],[23,24,29,20],[23,26,29,22],[24,10,30,6],[24,16,30,12],[24,20,30,16,"Error"],[24,25,30,21],[24,26,30,22],[24,76,30,72],[24,77,30,73],[25,8,31,4],[27,8,33,4],[28,8,34,4],[28,12,34,10,"defaultAttributes"],[28,29,34,27],[28,32,34,30],[29,10,35,6,"streetLighting"],[29,24,35,20],[29,26,35,22],[29,30,35,26],[30,10,35,28],[31,10,36,6,"networkConnectivity"],[31,29,36,25],[31,31,36,27],[31,35,36,31],[32,10,36,33],[33,10,37,6,"areaType"],[33,18,37,14],[33,20,37,16],[33,24,37,20],[34,10,37,22],[35,10,38,6,"policeSecurity"],[35,24,38,20],[35,26,38,22],[35,30,38,26],[36,10,38,28],[37,10,39,6,"crowdActivity"],[37,23,39,19],[37,25,39,21],[37,29,39,25],[37,30,39,27],[38,8,40,4],[38,9,40,5],[39,8,42,4],[39,12,42,10,"marker"],[39,18,42,16],[39,21,42,19],[40,10,43,6,"userId"],[40,16,43,12],[40,18,43,14,"currentUser"],[40,29,43,25],[40,30,43,26,"uid"],[40,33,43,29],[41,10,44,6,"coordinates"],[41,21,44,17],[41,23,44,19,"markerData"],[41,33,44,29],[41,34,44,30,"coordinates"],[41,45,44,41],[42,10,45,6,"status"],[42,16,45,12],[42,18,45,14,"markerData"],[42,28,45,24],[42,29,45,25,"status"],[42,35,45,31],[43,10,45,33],[44,10,46,6,"note"],[44,14,46,10],[44,16,46,12,"markerData"],[44,26,46,22],[44,27,46,23,"note"],[44,31,46,27],[44,35,46,31],[44,37,46,33],[45,10,47,6,"attributes"],[45,20,47,16],[45,22,47,18,"markerData"],[45,32,47,28],[45,33,47,29,"attributes"],[45,43,47,39],[45,47,47,43,"defaultAttributes"],[45,64,47,60],[46,10,48,6,"timestamp"],[46,19,48,15],[46,21,48,17],[46,25,48,17,"serverTimestamp"],[46,51,48,32],[46,53,48,33],[46,54,48,34],[47,10,49,6,"upvotes"],[47,17,49,13],[47,19,49,15],[47,20,49,16],[48,10,50,6,"upvoters"],[48,18,50,14],[48,20,50,16],[48,22,50,18],[49,10,51,6,"verified"],[49,18,51,14],[49,20,51,16],[49,25,51,21],[50,10,52,6,"verificationCount"],[50,27,52,23],[50,29,52,25],[50,30,52,26],[51,10,53,6,"verifications"],[51,23,53,19],[51,25,53,21],[51,27,53,23],[52,10,53,25],[53,10,54,6,"safetyScore"],[53,21,54,17],[53,23,54,19,"calculateSafetyScore"],[53,43,54,39],[53,44,54,40,"markerData"],[53,54,54,50],[53,55,54,51,"status"],[53,61,54,57],[53,63,54,59,"markerData"],[53,73,54,69],[53,74,54,70,"attributes"],[53,84,54,80],[53,88,54,84,"defaultAttributes"],[53,105,54,101],[53,106,54,102],[54,10,55,6,"verificationStatus"],[54,28,55,24],[54,30,55,26],[54,39,55,35],[54,40,55,37],[55,8,56,4],[55,9,56,5],[56,8,58,4,"console"],[56,15,58,11],[56,16,58,12,"log"],[56,19,58,15],[56,20,58,16],[56,45,58,41],[56,47,58,43,"marker"],[56,53,58,49],[56,54,58,50],[57,8,60,4],[57,12,60,10,"docRef"],[57,18,60,16],[57,27,60,25],[57,31,60,25,"addDoc"],[57,48,60,31],[57,50,60,32],[57,54,60,32,"collection"],[57,75,60,42],[57,77,60,43,"db"],[57,95,60,45],[57,97,60,47],[57,113,60,63],[57,114,60,64],[57,116,60,66,"marker"],[57,122,60,72],[57,123,60,73],[58,8,61,4,"console"],[58,15,61,11],[58,16,61,12,"log"],[58,19,61,15],[58,20,61,16],[58,67,61,63],[58,69,61,65,"docRef"],[58,75,61,71],[58,76,61,72,"id"],[58,78,61,74],[58,79,61,75],[59,8,63,4],[59,15,63,11,"docRef"],[59,21,63,17],[59,22,63,18,"id"],[59,24,63,20],[60,6,64,2],[60,7,64,3],[60,8,64,4],[60,15,64,11,"error"],[60,20,64,16],[60,22,64,18],[61,8,65,4,"console"],[61,15,65,11],[61,16,65,12,"error"],[61,21,65,17],[61,22,65,18],[61,55,65,51],[61,57,65,53,"error"],[61,62,65,58],[61,63,65,59],[62,8,66,4],[62,14,66,10,"error"],[62,19,66,15],[63,6,67,2],[64,4,68,0],[64,5,68,1],[65,4,68,1],[65,20,26,13,"createSafetyMarker"],[65,38,26,31,"createSafetyMarker"],[65,39,26,31,"_x"],[65,41,26,31],[66,6,26,31],[66,13,26,31,"_ref"],[66,17,26,31],[66,18,26,31,"apply"],[66,23,26,31],[66,30,26,31,"arguments"],[66,39,26,31],[67,4,26,31],[68,2,26,31],[68,5,68,1],[70,2,70,0],[71,0,71,0],[72,0,72,0],[73,0,73,0],[74,0,74,0],[75,2,75,7],[75,6,75,13,"subscribeToSafetyMarkers"],[75,30,75,37],[75,33,75,41,"callback"],[75,41,75,49],[75,45,75,54],[76,4,76,2],[76,8,76,6],[77,6,77,4],[77,10,77,10,"q"],[77,11,77,11],[77,14,77,14],[77,18,77,14,"query"],[77,34,77,19],[77,36,78,6],[77,40,78,6,"collection"],[77,61,78,16],[77,63,78,17,"db"],[77,81,78,19],[77,83,78,21],[77,99,78,37],[77,100,78,38],[77,102,79,6],[77,106,79,6,"orderBy"],[77,124,79,13],[77,126,79,14],[77,137,79,25],[77,139,79,27],[77,145,79,33],[77,146,80,4],[77,147,80,5],[78,6,82,4,"console"],[78,13,82,11],[78,14,82,12,"log"],[78,17,82,15],[78,18,82,16],[78,55,82,53],[78,56,82,54],[79,6,84,4],[79,10,84,10,"unsubscribe"],[79,21,84,21],[79,24,84,24],[79,28,84,24,"onSnapshot"],[79,49,84,34],[79,51,84,35,"q"],[79,52,84,36],[79,54,85,7,"querySnapshot"],[79,67,85,20],[79,71,85,25],[80,8,86,8],[80,12,86,14,"markers"],[80,19,86,21],[80,22,86,24],[80,24,86,26],[81,8,87,8,"querySnapshot"],[81,21,87,21],[81,22,87,22,"forEach"],[81,29,87,29],[81,30,87,31,"doc"],[81,33,87,34],[81,37,87,39],[82,10,88,10,"markers"],[82,17,88,17],[82,18,88,18,"push"],[82,22,88,22],[82,23,88,23],[83,12,89,12,"id"],[83,14,89,14],[83,16,89,16,"doc"],[83,19,89,19],[83,20,89,20,"id"],[83,22,89,22],[84,12,90,12],[84,15,90,15,"doc"],[84,18,90,18],[84,19,90,19,"data"],[84,23,90,23],[84,24,90,24],[84,25,90,25],[85,12,91,12,"timestamp"],[85,21,91,21],[85,23,91,23,"doc"],[85,26,91,26],[85,27,91,27,"data"],[85,31,91,31],[85,32,91,32],[85,33,91,33],[85,34,91,34,"timestamp"],[85,43,91,43],[85,45,91,45,"toDate"],[85,51,91,51],[85,52,91,52],[85,53,91,53],[85,57,91,57],[85,61,91,61,"Date"],[85,65,91,65],[85,66,91,66],[86,10,92,10],[86,11,92,11],[86,12,92,12],[87,8,93,8],[87,9,93,9],[87,10,93,10],[88,8,95,8,"console"],[88,15,95,15],[88,16,95,16,"log"],[88,19,95,19],[88,20,95,20],[88,34,95,34,"markers"],[88,41,95,41],[88,42,95,42,"length"],[88,48,95,48],[88,80,95,80],[88,81,95,81],[89,8,96,8,"callback"],[89,16,96,16],[89,17,96,17,"markers"],[89,24,96,24],[89,25,96,25],[90,6,97,6],[90,7,97,7],[90,9,98,7,"error"],[90,14,98,12],[90,18,98,17],[91,8,99,8,"console"],[91,15,99,15],[91,16,99,16,"error"],[91,21,99,21],[91,22,99,22],[91,63,99,63],[91,65,99,65,"error"],[91,70,99,70],[91,71,99,71],[92,8,100,8,"callback"],[92,16,100,16],[92,17,100,17],[92,19,100,19],[92,20,100,20],[93,6,101,6],[93,7,102,4],[93,8,102,5],[94,6,104,4],[94,13,104,11,"unsubscribe"],[94,24,104,22],[95,4,105,2],[95,5,105,3],[95,6,105,4],[95,13,105,11,"error"],[95,18,105,16],[95,20,105,18],[96,6,106,4,"console"],[96,13,106,11],[96,14,106,12,"error"],[96,19,106,17],[96,20,106,18],[96,69,106,67],[96,71,106,69,"error"],[96,76,106,74],[96,77,106,75],[97,6,107,4],[97,13,107,11],[97,19,107,17],[97,20,107,18],[97,21,107,19],[98,4,108,2],[99,2,109,0],[99,3,109,1],[101,2,111,0],[102,0,112,0],[103,0,113,0],[104,0,114,0],[105,0,115,0],[106,2,111,0,"exports"],[106,9,111,0],[106,10,111,0,"subscribeToSafetyMarkers"],[106,34,111,0],[106,37,111,0,"subscribeToSafetyMarkers"],[106,61,111,0],[107,2,116,7],[107,6,116,13,"upvoteSafetyMarker"],[107,24,116,31],[107,27,116,31,"exports"],[107,34,116,31],[107,35,116,31,"upvoteSafetyMarker"],[107,53,116,31],[108,4,116,31],[108,8,116,31,"_ref2"],[108,13,116,31],[108,20,116,31,"_asyncToGenerator2"],[108,38,116,31],[108,39,116,31,"default"],[108,46,116,31],[108,48,116,34],[108,59,116,41,"markerId"],[108,67,116,49],[108,69,116,54],[109,6,117,2],[109,10,117,6],[110,8,118,4],[110,12,118,10,"currentUser"],[110,23,118,21],[110,26,118,24,"auth"],[110,46,118,28],[110,47,118,29,"currentUser"],[110,58,118,40],[111,8,119,4],[111,12,119,8],[111,13,119,9,"currentUser"],[111,24,119,20],[111,26,119,22],[112,10,120,6],[112,16,120,12],[112,20,120,16,"Error"],[112,25,120,21],[112,26,120,22],[112,60,120,56],[112,61,120,57],[113,8,121,4],[114,8,123,4],[114,12,123,10,"markerRef"],[114,21,123,19],[114,24,123,22],[114,28,123,22,"doc"],[114,42,123,25],[114,44,123,26,"db"],[114,62,123,28],[114,64,123,30],[114,80,123,46],[114,82,123,48,"markerId"],[114,90,123,56],[114,91,123,57],[115,8,125,4],[115,14,125,10],[115,18,125,10,"runTransaction"],[115,43,125,24],[115,45,125,25,"db"],[115,63,125,27],[116,10,125,27],[116,14,125,27,"_ref3"],[116,19,125,27],[116,26,125,27,"_asyncToGenerator2"],[116,44,125,27],[116,45,125,27,"default"],[116,52,125,27],[116,54,125,29],[116,65,125,36,"transaction"],[116,76,125,47],[116,78,125,52],[117,12,126,6],[117,16,126,12,"markerDoc"],[117,25,126,21],[117,34,126,30,"transaction"],[117,45,126,41],[117,46,126,42,"get"],[117,49,126,45],[117,50,126,46,"markerRef"],[117,59,126,55],[117,60,126,56],[118,12,128,6],[118,16,128,10],[118,17,128,11,"markerDoc"],[118,26,128,20],[118,27,128,21,"exists"],[118,33,128,27],[118,34,128,28],[118,35,128,29],[118,37,128,31],[119,14,129,8],[119,20,129,14],[119,24,129,18,"Error"],[119,29,129,23],[119,30,129,24],[119,53,129,47],[119,54,129,48],[120,12,130,6],[121,12,132,6],[121,16,132,12,"markerData"],[121,26,132,22],[121,29,132,25,"markerDoc"],[121,38,132,34],[121,39,132,35,"data"],[121,43,132,39],[121,44,132,40],[121,45,132,41],[122,12,133,6],[122,16,133,12,"upvoters"],[122,24,133,20],[122,27,133,23,"markerData"],[122,37,133,33],[122,38,133,34,"upvoters"],[122,46,133,42],[122,50,133,46],[122,52,133,48],[123,12,134,6],[123,16,134,12,"currentUpvotes"],[123,30,134,26],[123,33,134,29,"markerData"],[123,43,134,39],[123,44,134,40,"upvotes"],[123,51,134,47],[123,55,134,51],[123,56,134,52],[124,12,136,6],[124,16,136,10,"upvoters"],[124,24,136,18],[124,25,136,19,"includes"],[124,33,136,27],[124,34,136,28,"currentUser"],[124,45,136,39],[124,46,136,40,"uid"],[124,49,136,43],[124,50,136,44],[124,52,136,46],[125,14,137,8],[126,14,138,8,"transaction"],[126,25,138,19],[126,26,138,20,"update"],[126,32,138,26],[126,33,138,27,"markerRef"],[126,42,138,36],[126,44,138,38],[127,16,139,10,"upvotes"],[127,23,139,17],[127,25,139,19,"currentUpvotes"],[127,39,139,33],[127,42,139,36],[127,43,139,37],[128,16,140,10,"upvoters"],[128,24,140,18],[128,26,140,20,"upvoters"],[128,34,140,28],[128,35,140,29,"filter"],[128,41,140,35],[128,42,140,36,"uid"],[128,45,140,39],[128,49,140,43,"uid"],[128,52,140,46],[128,57,140,51,"currentUser"],[128,68,140,62],[128,69,140,63,"uid"],[128,72,140,66],[128,73,140,67],[129,16,141,10,"verified"],[129,24,141,18],[129,26,141,21,"currentUpvotes"],[129,40,141,35],[129,43,141,38],[129,44,141,39],[129,48,141,44],[130,14,142,8],[130,15,142,9],[130,16,142,10],[131,14,143,8,"console"],[131,21,143,15],[131,22,143,16,"log"],[131,25,143,19],[131,26,143,20],[131,58,143,52],[131,60,143,54,"markerId"],[131,68,143,62],[131,69,143,63],[132,12,144,6],[132,13,144,7],[132,19,144,13],[133,14,145,8],[134,14,146,8,"transaction"],[134,25,146,19],[134,26,146,20,"update"],[134,32,146,26],[134,33,146,27,"markerRef"],[134,42,146,36],[134,44,146,38],[135,16,147,10,"upvotes"],[135,23,147,17],[135,25,147,19,"currentUpvotes"],[135,39,147,33],[135,42,147,36],[135,43,147,37],[136,16,148,10,"upvoters"],[136,24,148,18],[136,26,148,20],[136,27,148,21],[136,30,148,24,"upvoters"],[136,38,148,32],[136,40,148,34,"currentUser"],[136,51,148,45],[136,52,148,46,"uid"],[136,55,148,49],[136,56,148,50],[137,16,149,10,"verified"],[137,24,149,18],[137,26,149,21,"currentUpvotes"],[137,40,149,35],[137,43,149,38],[137,44,149,39],[137,48,149,44],[138,14,150,8],[138,15,150,9],[138,16,150,10],[139,14,151,8,"console"],[139,21,151,15],[139,22,151,16,"log"],[139,25,151,19],[139,26,151,20],[139,54,151,48],[139,56,151,50,"markerId"],[139,64,151,58],[139,65,151,59],[140,12,152,6],[141,10,153,4],[141,11,153,5],[142,10,153,5],[142,27,153,5,"_x3"],[142,30,153,5],[143,12,153,5],[143,19,153,5,"_ref3"],[143,24,153,5],[143,25,153,5,"apply"],[143,30,153,5],[143,37,153,5,"arguments"],[143,46,153,5],[144,10,153,5],[145,8,153,5],[145,12,153,6],[146,8,155,4,"console"],[146,15,155,11],[146,16,155,12,"log"],[146,19,155,15],[146,20,155,16],[146,65,155,61],[146,66,155,62],[147,6,156,2],[147,7,156,3],[147,8,156,4],[147,15,156,11,"error"],[147,20,156,16],[147,22,156,18],[148,8,157,4,"console"],[148,15,157,11],[148,16,157,12,"error"],[148,21,157,17],[148,22,157,18],[148,48,157,44],[148,50,157,46,"error"],[148,55,157,51],[148,56,157,52],[149,8,158,4],[149,14,158,10,"error"],[149,19,158,15],[150,6,159,2],[151,4,160,0],[151,5,160,1],[152,4,160,1],[152,20,116,13,"upvoteSafetyMarker"],[152,38,116,31,"upvoteSafetyMarker"],[152,39,116,31,"_x2"],[152,42,116,31],[153,6,116,31],[153,13,116,31,"_ref2"],[153,18,116,31],[153,19,116,31,"apply"],[153,24,116,31],[153,31,116,31,"arguments"],[153,40,116,31],[154,4,116,31],[155,2,116,31],[155,5,160,1],[157,2,162,0],[158,0,163,0],[159,0,164,0],[160,0,165,0],[161,0,166,0],[162,2,167,7],[162,6,167,13,"hasUserUpvotedMarker"],[162,26,167,33],[162,29,167,37,"upvoters"],[162,37,167,45],[162,41,167,50],[163,4,168,2],[163,8,168,8,"currentUser"],[163,19,168,19],[163,22,168,22,"auth"],[163,42,168,26],[163,43,168,27,"currentUser"],[163,54,168,38],[164,4,169,2],[164,8,169,6],[164,9,169,7,"currentUser"],[164,20,169,18],[164,24,169,22],[164,25,169,23,"upvoters"],[164,33,169,31],[164,35,169,33],[164,42,169,40],[164,47,169,45],[165,4,170,2],[165,11,170,9,"upvoters"],[165,19,170,17],[165,20,170,18,"includes"],[165,28,170,26],[165,29,170,27,"currentUser"],[165,40,170,38],[165,41,170,39,"uid"],[165,44,170,42],[165,45,170,43],[166,2,171,0],[166,3,171,1],[168,2,173,0],[169,0,174,0],[170,0,175,0],[171,0,176,0],[172,0,177,0],[173,2,173,0,"exports"],[173,9,173,0],[173,10,173,0,"hasUserUpvotedMarker"],[173,30,173,0],[173,33,173,0,"hasUserUpvotedMarker"],[173,53,173,0],[174,2,178,7],[174,6,178,13,"getMarkersByStatus"],[174,24,178,31],[174,27,178,31,"exports"],[174,34,178,31],[174,35,178,31,"getMarkersByStatus"],[174,53,178,31],[175,4,178,31],[175,8,178,31,"_ref4"],[175,13,178,31],[175,20,178,31,"_asyncToGenerator2"],[175,38,178,31],[175,39,178,31,"default"],[175,46,178,31],[175,48,178,34],[175,59,178,41,"status"],[175,65,178,47],[175,67,178,52],[176,6,179,2],[176,10,179,6],[177,8,180,4],[177,12,180,10,"q"],[177,13,180,11],[177,16,180,14],[177,20,180,14,"query"],[177,36,180,19],[177,38,181,6],[177,42,181,6,"collection"],[177,63,181,16],[177,65,181,17,"db"],[177,83,181,19],[177,85,181,21],[177,101,181,37],[177,102,181,38],[177,104,182,6],[177,108,182,6,"where"],[177,124,182,11],[177,126,182,12],[177,134,182,20],[177,136,182,22],[177,140,182,26],[177,142,182,28,"status"],[177,148,182,34],[177,149,183,4],[177,150,183,5],[178,8,185,4],[178,12,185,10,"querySnapshot"],[178,25,185,23],[178,34,185,32],[178,38,185,32,"getDocs"],[178,56,185,39],[178,58,185,40,"q"],[178,59,185,41],[178,60,185,42],[179,8,186,4],[179,12,186,10,"markers"],[179,19,186,17],[179,22,186,20],[179,24,186,22],[180,8,187,4,"querySnapshot"],[180,21,187,17],[180,22,187,18,"forEach"],[180,29,187,25],[180,30,187,27,"doc"],[180,33,187,30],[180,37,187,35],[181,10,188,6,"markers"],[181,17,188,13],[181,18,188,14,"push"],[181,22,188,18],[181,23,188,19],[182,12,189,8,"id"],[182,14,189,10],[182,16,189,12,"doc"],[182,19,189,15],[182,20,189,16,"id"],[182,22,189,18],[183,12,190,8],[183,15,190,11,"doc"],[183,18,190,14],[183,19,190,15,"data"],[183,23,190,19],[183,24,190,20],[183,25,190,21],[184,12,191,8,"timestamp"],[184,21,191,17],[184,23,191,19,"doc"],[184,26,191,22],[184,27,191,23,"data"],[184,31,191,27],[184,32,191,28],[184,33,191,29],[184,34,191,30,"timestamp"],[184,43,191,39],[184,45,191,41,"toDate"],[184,51,191,47],[184,52,191,48],[184,53,191,49],[184,57,191,53],[184,61,191,57,"Date"],[184,65,191,61],[184,66,191,62],[185,10,192,6],[185,11,192,7],[185,12,192,8],[186,8,193,4],[186,9,193,5],[186,10,193,6],[187,8,195,4],[187,15,195,11,"markers"],[187,22,195,18],[188,6,196,2],[188,7,196,3],[188,8,196,4],[188,15,196,11,"error"],[188,20,196,16],[188,22,196,18],[189,8,197,4,"console"],[189,15,197,11],[189,16,197,12,"error"],[189,21,197,17],[189,22,197,18],[189,56,197,52],[189,58,197,54,"error"],[189,63,197,59],[189,64,197,60],[190,8,198,4],[190,15,198,11],[190,17,198,13],[191,6,199,2],[192,4,200,0],[192,5,200,1],[193,4,200,1],[193,20,178,13,"getMarkersByStatus"],[193,38,178,31,"getMarkersByStatus"],[193,39,178,31,"_x4"],[193,42,178,31],[194,6,178,31],[194,13,178,31,"_ref4"],[194,18,178,31],[194,19,178,31,"apply"],[194,24,178,31],[194,31,178,31,"arguments"],[194,40,178,31],[195,4,178,31],[196,2,178,31],[196,5,200,1],[198,2,202,0],[199,0,203,0],[200,0,204,0],[201,0,205,0],[202,0,206,0],[203,0,207,0],[204,0,208,0],[205,2,209,7],[205,6,209,13,"isLocationInDangerZone"],[205,28,209,35],[205,31,209,38],[205,40,209,38,"isLocationInDangerZone"],[205,41,209,39,"location"],[205,49,209,47],[205,51,209,49,"unsafeMarkers"],[205,64,209,62],[205,66,209,83],[206,4,209,83],[206,8,209,64,"radiusKm"],[206,16,209,72],[206,19,209,72,"arguments"],[206,28,209,72],[206,29,209,72,"length"],[206,35,209,72],[206,43,209,72,"arguments"],[206,52,209,72],[206,60,209,72,"undefined"],[206,69,209,72],[206,72,209,72,"arguments"],[206,81,209,72],[206,87,209,75],[206,90,209,78],[207,4,210,2],[207,9,210,7],[207,13,210,13,"marker"],[207,19,210,19],[207,23,210,23,"unsafeMarkers"],[207,36,210,36],[207,38,210,38],[208,6,211,4],[208,10,211,10,"distance"],[208,18,211,18],[208,21,211,21,"calculateDistance"],[208,38,211,38],[208,39,212,6,"location"],[208,47,212,14],[208,48,212,15,"latitude"],[208,56,212,23],[208,58,213,6,"location"],[208,66,213,14],[208,67,213,15,"longitude"],[208,76,213,24],[208,78,214,6,"marker"],[208,84,214,12],[208,85,214,13,"coordinates"],[208,96,214,24],[208,97,214,25,"latitude"],[208,105,214,33],[208,107,215,6,"marker"],[208,113,215,12],[208,114,215,13,"coordinates"],[208,125,215,24],[208,126,215,25,"longitude"],[208,135,216,4],[208,136,216,5],[209,6,218,4],[209,10,218,8,"distance"],[209,18,218,16],[209,22,218,20,"radiusKm"],[209,30,218,28],[209,32,218,30],[210,8,219,6],[210,15,219,13],[211,10,219,15],[211,13,219,18,"marker"],[211,19,219,24],[212,10,219,26,"distance"],[213,8,219,35],[213,9,219,36],[214,6,220,4],[215,4,221,2],[216,4,222,2],[216,11,222,9],[216,15,222,13],[217,2,223,0],[217,3,223,1],[219,2,225,0],[220,0,226,0],[221,0,227,0],[222,0,228,0],[223,0,229,0],[224,0,230,0],[225,0,231,0],[226,0,232,0],[227,2,225,0,"exports"],[227,9,225,0],[227,10,225,0,"isLocationInDangerZone"],[227,32,225,0],[227,35,225,0,"isLocationInDangerZone"],[227,57,225,0],[228,2,233,7],[228,6,233,13,"calculateDistance"],[228,23,233,30],[228,26,233,33,"calculateDistance"],[228,27,233,34,"lat1"],[228,31,233,38],[228,33,233,40,"lon1"],[228,37,233,44],[228,39,233,46,"lat2"],[228,43,233,50],[228,45,233,52,"lon2"],[228,49,233,56],[228,54,233,61],[229,4,234,2],[229,8,234,8,"R"],[229,9,234,9],[229,12,234,12],[229,16,234,16],[229,17,234,17],[229,18,234,18],[230,4,235,2],[230,8,235,8,"dLat"],[230,12,235,12],[230,15,235,15,"toRad"],[230,20,235,20],[230,21,235,21,"lat2"],[230,25,235,25],[230,28,235,28,"lat1"],[230,32,235,32],[230,33,235,33],[231,4,236,2],[231,8,236,8,"dLon"],[231,12,236,12],[231,15,236,15,"toRad"],[231,20,236,20],[231,21,236,21,"lon2"],[231,25,236,25],[231,28,236,28,"lon1"],[231,32,236,32],[231,33,236,33],[232,4,238,2],[232,8,238,8,"a"],[232,9,238,9],[232,12,239,4,"Math"],[232,16,239,8],[232,17,239,9,"sin"],[232,20,239,12],[232,21,239,13,"dLat"],[232,25,239,17],[232,28,239,20],[232,29,239,21],[232,30,239,22],[232,33,239,25,"Math"],[232,37,239,29],[232,38,239,30,"sin"],[232,41,239,33],[232,42,239,34,"dLat"],[232,46,239,38],[232,49,239,41],[232,50,239,42],[232,51,239,43],[232,54,240,4,"Math"],[232,58,240,8],[232,59,240,9,"cos"],[232,62,240,12],[232,63,240,13,"toRad"],[232,68,240,18],[232,69,240,19,"lat1"],[232,73,240,23],[232,74,240,24],[232,75,240,25],[232,78,240,28,"Math"],[232,82,240,32],[232,83,240,33,"cos"],[232,86,240,36],[232,87,240,37,"toRad"],[232,92,240,42],[232,93,240,43,"lat2"],[232,97,240,47],[232,98,240,48],[232,99,240,49],[232,102,241,4,"Math"],[232,106,241,8],[232,107,241,9,"sin"],[232,110,241,12],[232,111,241,13,"dLon"],[232,115,241,17],[232,118,241,20],[232,119,241,21],[232,120,241,22],[232,123,241,25,"Math"],[232,127,241,29],[232,128,241,30,"sin"],[232,131,241,33],[232,132,241,34,"dLon"],[232,136,241,38],[232,139,241,41],[232,140,241,42],[232,141,241,43],[233,4,243,2],[233,8,243,8,"c"],[233,9,243,9],[233,12,243,12],[233,13,243,13],[233,16,243,16,"Math"],[233,20,243,20],[233,21,243,21,"atan2"],[233,26,243,26],[233,27,243,27,"Math"],[233,31,243,31],[233,32,243,32,"sqrt"],[233,36,243,36],[233,37,243,37,"a"],[233,38,243,38],[233,39,243,39],[233,41,243,41,"Math"],[233,45,243,45],[233,46,243,46,"sqrt"],[233,50,243,50],[233,51,243,51],[233,52,243,52],[233,55,243,55,"a"],[233,56,243,56],[233,57,243,57],[233,58,243,58],[234,4,244,2],[234,8,244,8,"distance"],[234,16,244,16],[234,19,244,19,"R"],[234,20,244,20],[234,23,244,23,"c"],[234,24,244,24],[235,4,246,2],[235,11,246,9,"distance"],[235,19,246,17],[236,2,247,0],[236,3,247,1],[238,2,249,0],[239,0,250,0],[240,0,251,0],[241,0,252,0],[242,0,253,0],[243,0,254,0],[244,2,249,0,"exports"],[244,9,249,0],[244,10,249,0,"calculateDistance"],[244,27,249,0],[244,30,249,0,"calculateDistance"],[244,47,249,0],[245,2,255,7],[245,6,255,13,"calculateSafetyScore"],[245,26,255,33],[245,29,255,36,"calculateSafetyScore"],[245,30,255,37,"status"],[245,36,255,43],[245,38,255,45,"attributes"],[245,48,255,55],[245,53,255,60],[246,4,256,2],[246,8,256,6,"score"],[246,13,256,11],[246,16,256,14],[246,18,256,16],[246,19,256,17],[246,20,256,18],[248,4,258,2],[249,4,259,2],[249,8,259,6,"status"],[249,14,259,12],[249,19,259,17],[249,25,259,23],[249,27,259,25,"score"],[249,32,259,30],[249,35,259,33],[249,37,259,35],[249,38,259,36],[249,43,260,7],[249,47,260,11,"status"],[249,53,260,17],[249,58,260,22],[249,67,260,31],[249,69,260,33,"score"],[249,74,260,38],[249,77,260,41],[249,79,260,43],[249,80,260,44],[249,85,261,7],[249,89,261,11,"status"],[249,95,261,17],[249,100,261,22],[249,108,261,30],[249,110,261,32,"score"],[249,115,261,37],[249,118,261,40],[249,120,261,42],[251,4,263,2],[252,4,264,2],[252,8,264,6,"attributes"],[252,18,264,16],[252,19,264,17,"streetLighting"],[252,33,264,31],[252,38,264,36],[252,44,264,42],[252,46,264,44,"score"],[252,51,264,49],[252,55,264,53],[252,57,264,55],[252,58,264,56],[252,63,265,7],[252,67,265,11,"attributes"],[252,77,265,21],[252,78,265,22,"streetLighting"],[252,92,265,36],[252,97,265,41],[252,103,265,47],[252,105,265,49,"score"],[252,110,265,54],[252,114,265,58],[252,115,265,59],[252,116,265,60],[252,121,266,7],[252,125,266,11,"attributes"],[252,135,266,21],[252,136,266,22,"streetLighting"],[252,150,266,36],[252,155,266,41],[252,161,266,47],[252,163,266,49,"score"],[252,168,266,54],[252,172,266,58],[252,174,266,60],[253,4,268,2],[253,8,268,6,"attributes"],[253,18,268,16],[253,19,268,17,"networkConnectivity"],[253,38,268,36],[253,43,268,41],[253,54,268,52],[253,56,268,54,"score"],[253,61,268,59],[253,65,268,63],[253,66,268,64],[253,67,268,65],[253,72,269,7],[253,76,269,11,"attributes"],[253,86,269,21],[253,87,269,22,"networkConnectivity"],[253,106,269,41],[253,111,269,46],[253,117,269,52],[253,119,269,54,"score"],[253,124,269,59],[253,128,269,63],[253,129,269,64],[253,130,269,65],[253,135,270,7],[253,139,270,11,"attributes"],[253,149,270,21],[253,150,270,22,"networkConnectivity"],[253,169,270,41],[253,174,270,46],[253,180,270,52],[253,182,270,54,"score"],[253,187,270,59],[253,191,270,63],[253,192,270,64],[253,193,270,65],[253,198,271,7],[253,202,271,11,"attributes"],[253,212,271,21],[253,213,271,22,"networkConnectivity"],[253,232,271,41],[253,237,271,46],[253,243,271,52],[253,245,271,54,"score"],[253,250,271,59],[253,254,271,63],[253,256,271,65],[254,4,273,2],[254,8,273,6,"attributes"],[254,18,273,16],[254,19,273,17,"areaType"],[254,27,273,25],[254,32,273,30],[254,45,273,43],[254,47,273,45,"score"],[254,52,273,50],[254,56,273,54],[254,58,273,56],[254,59,273,57],[254,64,274,7],[254,68,274,11,"attributes"],[254,78,274,21],[254,79,274,22,"areaType"],[254,87,274,30],[254,92,274,35],[254,104,274,47],[254,106,274,49,"score"],[254,111,274,54],[254,115,274,58],[254,116,274,59],[254,117,274,60],[254,122,275,7],[254,126,275,11,"attributes"],[254,136,275,21],[254,137,275,22,"areaType"],[254,145,275,30],[254,150,275,35],[254,156,275,41],[254,158,275,43,"score"],[254,163,275,48],[254,167,275,52],[254,169,275,54],[254,170,275,55],[254,175,276,7],[254,179,276,11,"attributes"],[254,189,276,21],[254,190,276,22,"areaType"],[254,198,276,30],[254,203,276,35],[254,213,276,45],[254,215,276,47,"score"],[254,220,276,52],[254,224,276,56],[254,226,276,58],[255,4,278,2],[255,8,278,6,"attributes"],[255,18,278,16],[255,19,278,17,"policeSecurity"],[255,33,278,31],[255,38,278,36],[255,47,278,45],[255,49,278,47,"score"],[255,54,278,52],[255,58,278,56],[255,60,278,58],[255,61,278,59],[255,66,279,7],[255,70,279,11,"attributes"],[255,80,279,21],[255,81,279,22,"policeSecurity"],[255,95,279,36],[255,100,279,41],[255,108,279,49],[255,110,279,51,"score"],[255,115,279,56],[255,119,279,60],[255,121,279,62],[256,4,281,2],[256,8,281,6,"attributes"],[256,18,281,16],[256,19,281,17,"crowdActivity"],[256,32,281,30],[256,37,281,35],[256,46,281,44],[256,48,281,46,"score"],[256,53,281,51],[256,57,281,55],[256,59,281,57],[256,60,281,58],[256,65,282,7],[256,69,282,11,"attributes"],[256,79,282,21],[256,80,282,22,"crowdActivity"],[256,93,282,35],[256,98,282,40],[256,108,282,50],[256,110,282,52,"score"],[256,115,282,57],[256,119,282,61],[256,120,282,62],[256,121,282,63],[256,126,283,7],[256,130,283,11,"attributes"],[256,140,283,21],[256,141,283,22,"crowdActivity"],[256,154,283,35],[256,159,283,40],[256,169,283,50],[256,171,283,52,"score"],[256,176,283,57],[256,180,283,61],[256,182,283,63],[258,4,285,2],[259,4,286,2],[259,11,286,9,"Math"],[259,15,286,13],[259,16,286,14,"max"],[259,19,286,17],[259,20,286,18],[259,21,286,19],[259,23,286,21,"Math"],[259,27,286,25],[259,28,286,26,"min"],[259,31,286,29],[259,32,286,30],[259,35,286,33],[259,37,286,35,"score"],[259,42,286,40],[259,43,286,41],[259,44,286,42],[260,2,287,0],[260,3,287,1],[262,2,289,0],[263,0,290,0],[264,0,291,0],[265,0,292,0],[266,0,293,0],[267,0,294,0],[268,0,295,0],[269,2,289,0,"exports"],[269,9,289,0],[269,10,289,0,"calculateSafetyScore"],[269,30,289,0],[269,33,289,0,"calculateSafetyScore"],[269,53,289,0],[270,2,296,7],[270,6,296,13,"verifySafetyMarker"],[270,24,296,31],[270,27,296,31,"exports"],[270,34,296,31],[270,35,296,31,"verifySafetyMarker"],[270,53,296,31],[271,4,296,31],[271,8,296,31,"_ref5"],[271,13,296,31],[271,20,296,31,"_asyncToGenerator2"],[271,38,296,31],[271,39,296,31,"default"],[271,46,296,31],[271,48,296,34],[271,59,296,41,"markerId"],[271,67,296,49],[271,69,296,51,"isVerifying"],[271,80,296,62],[271,82,296,90],[272,6,296,90],[272,10,296,64,"userAttributes"],[272,24,296,78],[272,27,296,78,"arguments"],[272,36,296,78],[272,37,296,78,"length"],[272,43,296,78],[272,51,296,78,"arguments"],[272,60,296,78],[272,68,296,78,"undefined"],[272,77,296,78],[272,80,296,78,"arguments"],[272,89,296,78],[272,95,296,81],[272,99,296,85],[273,6,297,2],[273,10,297,6],[274,8,298,4],[274,12,298,10,"currentUser"],[274,23,298,21],[274,26,298,24,"auth"],[274,46,298,28],[274,47,298,29,"currentUser"],[274,58,298,40],[275,8,299,4],[275,12,299,8],[275,13,299,9,"currentUser"],[275,24,299,20],[275,26,299,22],[276,10,300,6],[276,16,300,12],[276,20,300,16,"Error"],[276,25,300,21],[276,26,300,22],[276,60,300,56],[276,61,300,57],[277,8,301,4],[278,8,303,4],[278,12,303,10,"markerRef"],[278,21,303,19],[278,24,303,22],[278,28,303,22,"doc"],[278,42,303,25],[278,44,303,26,"db"],[278,62,303,28],[278,64,303,30],[278,80,303,46],[278,82,303,48,"markerId"],[278,90,303,56],[278,91,303,57],[279,8,305,4],[279,14,305,10],[279,18,305,10,"runTransaction"],[279,43,305,24],[279,45,305,25,"db"],[279,63,305,27],[280,10,305,27],[280,14,305,27,"_ref6"],[280,19,305,27],[280,26,305,27,"_asyncToGenerator2"],[280,44,305,27],[280,45,305,27,"default"],[280,52,305,27],[280,54,305,29],[280,65,305,36,"transaction"],[280,76,305,47],[280,78,305,52],[281,12,306,6],[281,16,306,12,"markerDoc"],[281,25,306,21],[281,34,306,30,"transaction"],[281,45,306,41],[281,46,306,42,"get"],[281,49,306,45],[281,50,306,46,"markerRef"],[281,59,306,55],[281,60,306,56],[282,12,308,6],[282,16,308,10],[282,17,308,11,"markerDoc"],[282,26,308,20],[282,27,308,21,"exists"],[282,33,308,27],[282,34,308,28],[282,35,308,29],[282,37,308,31],[283,14,309,8],[283,20,309,14],[283,24,309,18,"Error"],[283,29,309,23],[283,30,309,24],[283,53,309,47],[283,54,309,48],[284,12,310,6],[285,12,312,6],[285,16,312,12,"markerData"],[285,26,312,22],[285,29,312,25,"markerDoc"],[285,38,312,34],[285,39,312,35,"data"],[285,43,312,39],[285,44,312,40],[285,45,312,41],[286,12,313,6],[286,16,313,12,"verifications"],[286,29,313,25],[286,32,313,28,"markerData"],[286,42,313,38],[286,43,313,39,"verifications"],[286,56,313,52],[286,60,313,56],[286,62,313,58],[287,12,314,6],[287,16,314,12,"verificationCount"],[287,33,314,29],[287,36,314,32,"markerData"],[287,46,314,42],[287,47,314,43,"verificationCount"],[287,64,314,60],[287,68,314,64],[287,69,314,65],[289,12,316,6],[290,12,317,6],[290,16,317,12,"existingVerification"],[290,36,317,32],[290,39,317,35,"verifications"],[290,52,317,48],[290,53,317,49,"find"],[290,57,317,53],[290,58,317,54,"v"],[290,59,317,55],[290,63,317,59,"v"],[290,64,317,60],[290,65,317,61,"userId"],[290,71,317,67],[290,76,317,72,"currentUser"],[290,87,317,83],[290,88,317,84,"uid"],[290,91,317,87],[290,92,317,88],[291,12,319,6],[291,16,319,10,"existingVerification"],[291,36,319,30],[291,38,319,32],[292,14,320,8],[292,20,320,14],[292,24,320,18,"Error"],[292,29,320,23],[292,30,320,24],[292,69,320,63],[292,70,320,64],[293,12,321,6],[295,12,323,6],[296,12,324,6],[296,16,324,12,"newVerification"],[296,31,324,27],[296,34,324,30],[297,14,325,8,"userId"],[297,20,325,14],[297,22,325,16,"currentUser"],[297,33,325,27],[297,34,325,28,"uid"],[297,37,325,31],[298,14,326,8,"timestamp"],[298,23,326,17],[298,25,326,19],[298,29,326,23,"Date"],[298,33,326,27],[298,34,326,28],[298,35,326,29],[298,36,326,30,"toISOString"],[298,47,326,41],[298,48,326,42],[298,49,326,43],[299,14,327,8,"isVerifying"],[299,25,327,19],[300,14,328,8,"attributes"],[300,24,328,18],[300,26,328,20,"userAttributes"],[301,12,329,6],[301,13,329,7],[302,12,331,6],[302,16,331,12,"updatedVerifications"],[302,36,331,32],[302,39,331,35],[302,40,331,36],[302,43,331,39,"verifications"],[302,56,331,52],[302,58,331,54,"newVerification"],[302,73,331,69],[302,74,331,70],[303,12,332,6],[303,16,332,12,"newVerificationCount"],[303,36,332,32],[303,39,332,35,"verificationCount"],[303,56,332,52],[303,60,332,56,"isVerifying"],[303,71,332,67],[303,74,332,70],[303,75,332,71],[303,78,332,74],[303,79,332,75],[303,80,332,76],[305,12,334,6],[306,12,335,6],[306,16,335,10,"verificationStatus"],[306,34,335,28],[306,37,335,31],[306,46,335,40],[307,12,336,6],[307,16,336,10,"newVerificationCount"],[307,36,336,30],[307,40,336,34],[307,41,336,35],[307,43,336,37],[308,14,337,8,"verificationStatus"],[308,32,337,26],[308,35,337,29],[308,45,337,39],[309,12,338,6],[311,12,340,6],[312,12,341,6],[312,16,341,10,"newSafetyScore"],[312,30,341,24],[312,33,341,27,"markerData"],[312,43,341,37],[312,44,341,38,"safetyScore"],[312,55,341,49],[313,12,342,6],[313,16,342,10,"userAttributes"],[313,30,342,24],[313,32,342,26],[314,14,343,8,"newSafetyScore"],[314,28,343,22],[314,31,343,25,"calculateSafetyScore"],[314,51,343,45],[314,52,343,46,"markerData"],[314,62,343,56],[314,63,343,57,"status"],[314,69,343,63],[314,71,343,65,"userAttributes"],[314,85,343,79],[314,86,343,80],[315,12,344,6],[316,12,346,6,"transaction"],[316,23,346,17],[316,24,346,18,"update"],[316,30,346,24],[316,31,346,25,"markerRef"],[316,40,346,34],[316,42,346,36],[317,14,347,8,"verifications"],[317,27,347,21],[317,29,347,23,"updatedVerifications"],[317,49,347,43],[318,14,348,8,"verificationCount"],[318,31,348,25],[318,33,348,27,"newVerificationCount"],[318,53,348,47],[319,14,349,8,"verificationStatus"],[319,32,349,26],[320,14,350,8,"verified"],[320,22,350,16],[320,24,350,18,"verificationStatus"],[320,42,350,36],[320,47,350,41],[320,57,350,51],[321,14,351,8,"safetyScore"],[321,25,351,19],[321,27,351,21,"newSafetyScore"],[322,12,352,6],[322,13,352,7],[322,14,352,8],[323,12,354,6,"console"],[323,19,354,13],[323,20,354,14,"log"],[323,23,354,17],[323,24,354,18],[323,42,354,36,"isVerifying"],[323,53,354,47],[323,56,354,50],[323,63,354,57],[323,66,354,60],[323,76,354,70],[323,90,354,84],[323,92,354,86,"markerId"],[323,100,354,94],[323,101,354,95],[324,10,355,4],[324,11,355,5],[325,10,355,5],[325,27,355,5,"_x7"],[325,30,355,5],[326,12,355,5],[326,19,355,5,"_ref6"],[326,24,355,5],[326,25,355,5,"apply"],[326,30,355,5],[326,37,355,5,"arguments"],[326,46,355,5],[327,10,355,5],[328,8,355,5],[328,12,355,6],[329,6,356,2],[329,7,356,3],[329,8,356,4],[329,15,356,11,"error"],[329,20,356,16],[329,22,356,18],[330,8,357,4,"console"],[330,15,357,11],[330,16,357,12,"error"],[330,21,357,17],[330,22,357,18],[330,49,357,45],[330,51,357,47,"error"],[330,56,357,52],[330,57,357,53],[331,8,358,4],[331,14,358,10,"error"],[331,19,358,15],[332,6,359,2],[333,4,360,0],[333,5,360,1],[334,4,360,1],[334,20,296,13,"verifySafetyMarker"],[334,38,296,31,"verifySafetyMarker"],[334,39,296,31,"_x5"],[334,42,296,31],[334,44,296,31,"_x6"],[334,47,296,31],[335,6,296,31],[335,13,296,31,"_ref5"],[335,18,296,31],[335,19,296,31,"apply"],[335,24,296,31],[335,31,296,31,"arguments"],[335,40,296,31],[336,4,296,31],[337,2,296,31],[337,5,360,1],[339,2,362,0],[340,0,363,0],[341,0,364,0],[342,0,365,0],[343,0,366,0],[344,2,367,7],[344,6,367,13,"hasUserVerifiedMarker"],[344,27,367,34],[344,30,367,38,"verifications"],[344,43,367,51],[344,47,367,56],[345,4,368,2],[345,8,368,8,"currentUser"],[345,19,368,19],[345,22,368,22,"auth"],[345,42,368,26],[345,43,368,27,"currentUser"],[345,54,368,38],[346,4,369,2],[346,8,369,6],[346,9,369,7,"currentUser"],[346,20,369,18],[346,24,369,22],[346,25,369,23,"verifications"],[346,38,369,36],[346,40,369,38],[346,47,369,45],[346,52,369,50],[347,4,370,2],[347,11,370,9,"verifications"],[347,24,370,22],[347,25,370,23,"some"],[347,29,370,27],[347,30,370,28,"v"],[347,31,370,29],[347,35,370,33,"v"],[347,36,370,34],[347,37,370,35,"userId"],[347,43,370,41],[347,48,370,46,"currentUser"],[347,59,370,57],[347,60,370,58,"uid"],[347,63,370,61],[347,64,370,62],[348,2,371,0],[348,3,371,1],[350,2,373,0],[351,0,374,0],[352,0,375,0],[353,0,376,0],[354,0,377,0],[355,0,378,0],[356,2,373,0,"exports"],[356,9,373,0],[356,10,373,0,"hasUserVerifiedMarker"],[356,31,373,0],[356,34,373,0,"hasUserVerifiedMarker"],[356,55,373,0],[357,2,379,7],[357,6,379,13,"getPendingVerificationMarkers"],[357,35,379,42],[357,38,379,42,"exports"],[357,45,379,42],[357,46,379,42,"getPendingVerificationMarkers"],[357,75,379,42],[358,4,379,42],[358,8,379,42,"_ref7"],[358,13,379,42],[358,20,379,42,"_asyncToGenerator2"],[358,38,379,42],[358,39,379,42,"default"],[358,46,379,42],[358,48,379,45],[358,59,379,52,"location"],[358,67,379,60],[358,69,379,81],[359,6,379,81],[359,10,379,62,"radiusKm"],[359,18,379,70],[359,21,379,70,"arguments"],[359,30,379,70],[359,31,379,70,"length"],[359,37,379,70],[359,45,379,70,"arguments"],[359,54,379,70],[359,62,379,70,"undefined"],[359,71,379,70],[359,74,379,70,"arguments"],[359,83,379,70],[359,89,379,73],[359,92,379,76],[360,6,380,2],[360,10,380,6],[361,8,381,4],[361,12,381,10,"q"],[361,13,381,11],[361,16,381,14],[361,20,381,14,"query"],[361,36,381,19],[361,38,382,6],[361,42,382,6,"collection"],[361,63,382,16],[361,65,382,17,"db"],[361,83,382,19],[361,85,382,21],[361,101,382,37],[361,102,382,38],[361,104,383,6],[361,108,383,6,"where"],[361,124,383,11],[361,126,383,12],[361,146,383,32],[361,148,383,34],[361,152,383,38],[361,154,383,40],[361,163,383,49],[361,164,384,4],[361,165,384,5],[362,8,386,4],[362,12,386,10,"querySnapshot"],[362,25,386,23],[362,34,386,32],[362,38,386,32,"getDocs"],[362,56,386,39],[362,58,386,40,"q"],[362,59,386,41],[362,60,386,42],[363,8,387,4],[363,12,387,10,"markers"],[363,19,387,17],[363,22,387,20],[363,24,387,22],[364,8,389,4,"querySnapshot"],[364,21,389,17],[364,22,389,18,"forEach"],[364,29,389,25],[364,30,389,27,"doc"],[364,33,389,30],[364,37,389,35],[365,10,390,6],[365,14,390,12,"markerData"],[365,24,390,22],[365,27,390,25,"doc"],[365,30,390,28],[365,31,390,29,"data"],[365,35,390,33],[365,36,390,34],[365,37,390,35],[366,10,391,6],[366,14,391,12,"distance"],[366,22,391,20],[366,25,391,23,"calculateDistance"],[366,42,391,40],[366,43,392,8,"location"],[366,51,392,16],[366,52,392,17,"latitude"],[366,60,392,25],[366,62,393,8,"location"],[366,70,393,16],[366,71,393,17,"longitude"],[366,80,393,26],[366,82,394,8,"markerData"],[366,92,394,18],[366,93,394,19,"coordinates"],[366,104,394,30],[366,105,394,31,"latitude"],[366,113,394,39],[366,115,395,8,"markerData"],[366,125,395,18],[366,126,395,19,"coordinates"],[366,137,395,30],[366,138,395,31,"longitude"],[366,147,396,6],[366,148,396,7],[367,10,398,6],[367,14,398,10,"distance"],[367,22,398,18],[367,26,398,22,"radiusKm"],[367,34,398,30],[367,36,398,32],[368,12,399,8,"markers"],[368,19,399,15],[368,20,399,16,"push"],[368,24,399,20],[368,25,399,21],[369,14,400,10,"id"],[369,16,400,12],[369,18,400,14,"doc"],[369,21,400,17],[369,22,400,18,"id"],[369,24,400,20],[370,14,401,10],[370,17,401,13,"markerData"],[370,27,401,23],[371,14,402,10,"distance"],[371,22,402,18],[372,14,403,10,"timestamp"],[372,23,403,19],[372,25,403,21,"markerData"],[372,35,403,31],[372,36,403,32,"timestamp"],[372,45,403,41],[372,47,403,43,"toDate"],[372,53,403,49],[372,54,403,50],[372,55,403,51],[372,59,403,55],[372,63,403,59,"Date"],[372,67,403,63],[372,68,403,64],[373,12,404,8],[373,13,404,9],[373,14,404,10],[374,10,405,6],[375,8,406,4],[375,9,406,5],[375,10,406,6],[376,8,408,4],[376,15,408,11,"markers"],[376,22,408,18],[376,23,408,19,"sort"],[376,27,408,23],[376,28,408,24],[376,29,408,25,"a"],[376,30,408,26],[376,32,408,28,"b"],[376,33,408,29],[376,38,408,34,"a"],[376,39,408,35],[376,40,408,36,"distance"],[376,48,408,44],[376,51,408,47,"b"],[376,52,408,48],[376,53,408,49,"distance"],[376,61,408,57],[376,62,408,58],[377,6,409,2],[377,7,409,3],[377,8,409,4],[377,15,409,11,"error"],[377,20,409,16],[377,22,409,18],[378,8,410,4,"console"],[378,15,410,11],[378,16,410,12,"error"],[378,21,410,17],[378,22,410,18],[378,67,410,63],[378,69,410,65,"error"],[378,74,410,70],[378,75,410,71],[379,8,411,4],[379,15,411,11],[379,17,411,13],[380,6,412,2],[381,4,413,0],[381,5,413,1],[382,4,413,1],[382,20,379,13,"getPendingVerificationMarkers"],[382,49,379,42,"getPendingVerificationMarkers"],[382,50,379,42,"_x8"],[382,53,379,42],[383,6,379,42],[383,13,379,42,"_ref7"],[383,18,379,42],[383,19,379,42,"apply"],[383,24,379,42],[383,31,379,42,"arguments"],[383,40,379,42],[384,4,379,42],[385,2,379,42],[385,5,413,1],[387,2,415,0],[388,0,416,0],[389,0,417,0],[390,0,418,0],[391,0,419,0],[392,2,420,7],[392,6,420,13,"getSafetyScoreCategory"],[392,28,420,35],[392,31,420,39,"score"],[392,36,420,44],[392,40,420,49],[393,4,421,2],[393,8,421,6,"score"],[393,13,421,11],[393,17,421,15],[393,19,421,17],[393,21,421,19],[393,28,421,26],[394,6,421,28,"label"],[394,11,421,33],[394,13,421,35],[394,24,421,46],[395,6,421,48,"color"],[395,11,421,53],[395,13,421,55],[395,22,421,64],[396,6,421,66,"emoji"],[396,11,421,71],[396,13,421,73],[397,4,421,77],[397,5,421,78],[398,4,422,2],[398,8,422,6,"score"],[398,13,422,11],[398,17,422,15],[398,19,422,17],[398,21,422,19],[398,28,422,26],[399,6,422,28,"label"],[399,11,422,33],[399,13,422,35],[399,30,422,52],[400,6,422,54,"color"],[400,11,422,59],[400,13,422,61],[400,22,422,70],[401,6,422,72,"emoji"],[401,11,422,77],[401,13,422,79],[402,4,422,84],[402,5,422,85],[403,4,423,2],[403,8,423,6,"score"],[403,13,423,11],[403,17,423,15],[403,19,423,17],[403,21,423,19],[403,28,423,26],[404,6,423,28,"label"],[404,11,423,33],[404,13,423,35],[404,21,423,43],[405,6,423,45,"color"],[405,11,423,50],[405,13,423,52],[405,22,423,61],[406,6,423,63,"emoji"],[406,11,423,68],[406,13,423,70],[407,4,423,75],[407,5,423,76],[408,4,424,2],[408,11,424,9],[409,6,424,11,"label"],[409,11,424,16],[409,13,424,18],[409,24,424,29],[410,6,424,31,"color"],[410,11,424,36],[410,13,424,38],[410,22,424,47],[411,6,424,49,"emoji"],[411,11,424,54],[411,13,424,56],[412,4,424,61],[412,5,424,62],[413,2,425,0],[413,3,425,1],[414,2,425,2,"exports"],[414,9,425,2],[414,10,425,2,"getSafetyScoreCategory"],[414,32,425,2],[414,35,425,2,"getSafetyScoreCategory"],[414,57,425,2],[415,2,428,0],[415,6,428,6,"toRad"],[415,11,428,11],[415,14,428,15,"degrees"],[415,21,428,22],[415,25,428,27],[416,4,429,2],[416,11,429,9,"degrees"],[416,18,429,16],[416,22,429,20,"Math"],[416,26,429,24],[416,27,429,25,"PI"],[416,29,429,27],[416,32,429,30],[416,35,429,33],[416,36,429,34],[417,2,430,0],[417,3,430,1],[418,0,430,2],[418,3]],"functionMap":{"names":["<global>","createSafetyMarker","subscribeToSafetyMarkers","onSnapshot$argument_1","querySnapshot.forEach$argument_0","onSnapshot$argument_2","<anonymous>","upvoteSafetyMarker","runTransaction$argument_1","upvoters.filter$argument_0","hasUserUpvotedMarker","getMarkersByStatus","isLocationInDangerZone","calculateDistance","calculateSafetyScore","verifySafetyMarker","verifications.find$argument_0","hasUserVerifiedMarker","verifications.some$argument_0","getPendingVerificationMarkers","markers.sort$argument_0","getSafetyScoreCategory","toRad"],"mappings":"AAA;kCCyB;CD0C;wCEO;MCU;8BCE;SDM;ODI;MGC;OHG;WIM,QJ;CFE;kCOO;6BCS;oCCe,8BD;KDa;CPO;oCUO;CVI;kCWO;0BPS;KOM;CXO;sCYS;CZc;iCaU;Cbc;oCcQ;CdgC;kCeS;6BPS;sDQY,iCR;KOsC;CfK;qCiBO;4BCG,iCD;CjBC;6CmBQ;0BfU;KeiB;wBCE,iCD;CnBK;sCqBO;CrBK;csBG;CtBE"}},"type":"js/module"}]}