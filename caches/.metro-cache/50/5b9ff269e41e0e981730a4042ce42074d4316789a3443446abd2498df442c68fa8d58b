{"dependencies":[{"name":"./getDay.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"v0KkbM2Q30GAqJt8AxbKgcmXmt0=","exportNames":["*"]}},{"name":"./subDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":38},"end":{"line":2,"column":39,"index":77}}],"key":"+UYdoCKrOuIqNVW70QO6I4gzfqE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.previousDay = previousDay;\n  var _getDay = require(_dependencyMap[0], \"./getDay.js\");\n  var _subDays = require(_dependencyMap[1], \"./subDays.js\");\n  /**\n   * The {@link previousDay} function options.\n   */\n\n  /**\n   * @name previousDay\n   * @category Weekday Helpers\n   * @summary When is the previous day of the week?\n   *\n   * @description\n   * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to check\n   * @param day - The day of the week\n   * @param options - An object with options\n   *\n   * @returns The date is the previous day of week\n   *\n   * @example\n   * // When is the previous Monday before Mar, 20, 2020?\n   * const result = previousDay(new Date(2020, 2, 20), 1)\n   * //=> Mon Mar 16 2020 00:00:00\n   *\n   * @example\n   * // When is the previous Tuesday before Mar, 21, 2020?\n   * const result = previousDay(new Date(2020, 2, 21), 2)\n   * //=> Tue Mar 17 2020 00:00:00\n   */\n  function previousDay(date, day, options) {\n    var delta = (0, _getDay.getDay)(date, options) - day;\n    if (delta <= 0) delta += 7;\n    return (0, _subDays.subDays)(date, delta, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = previousDay;\n});","lineCount":48,"map":[[7,2,1,0],[7,6,1,0,"_getDay"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,2,0],[8,6,2,0,"_subDays"],[8,14,2,0],[8,17,2,0,"require"],[8,24,2,0],[8,25,2,0,"_dependencyMap"],[8,39,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,2,35,7],[40,11,35,16,"previousDay"],[40,22,35,27,"previousDay"],[40,23,35,28,"date"],[40,27,35,32],[40,29,35,34,"day"],[40,32,35,37],[40,34,35,39,"options"],[40,41,35,46],[40,43,35,48],[41,4,36,2],[41,8,36,6,"delta"],[41,13,36,11],[41,16,36,14],[41,20,36,14,"getDay"],[41,34,36,20],[41,36,36,21,"date"],[41,40,36,25],[41,42,36,27,"options"],[41,49,36,34],[41,50,36,35],[41,53,36,38,"day"],[41,56,36,41],[42,4,37,2],[42,8,37,6,"delta"],[42,13,37,11],[42,17,37,15],[42,18,37,16],[42,20,37,18,"delta"],[42,25,37,23],[42,29,37,27],[42,30,37,28],[43,4,39,2],[43,11,39,9],[43,15,39,9,"subDays"],[43,31,39,16],[43,33,39,17,"date"],[43,37,39,21],[43,39,39,23,"delta"],[43,44,39,28],[43,46,39,30,"options"],[43,53,39,37],[43,54,39,38],[44,2,40,0],[46,2,42,0],[47,2,42,0],[47,6,42,0,"_default"],[47,14,42,0],[47,17,42,0,"exports"],[47,24,42,0],[47,25,42,0,"default"],[47,32,42,0],[47,35,43,15,"previousDay"],[47,46,43,26],[48,0,43,26],[48,3]],"functionMap":{"names":["<global>","previousDay"],"mappings":"AAA;OCkC;CDK"}},"type":"js/module"}]}