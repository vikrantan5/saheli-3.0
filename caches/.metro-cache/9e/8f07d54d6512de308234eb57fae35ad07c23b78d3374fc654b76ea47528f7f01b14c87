{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./PushTokenManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":50,"index":96}}],"key":"/U/z9wvFThAkR9FZ1qxFHdWzZ18=","exportNames":["*"]}},{"name":"./warnOfExpoGoPushUsage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":64,"index":161}}],"key":"JoKHHQXXGY91wSaWh9AbqdpRHBQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addPushTokenListener = addPushTokenListener;\n  exports.removePushTokenSubscription = removePushTokenSubscription;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _PushTokenManager = _interopRequireDefault(require(_dependencyMap[2], \"./PushTokenManager\"));\n  var _warnOfExpoGoPushUsage = require(_dependencyMap[3], \"./warnOfExpoGoPushUsage\");\n  // Web uses SyntheticEventEmitter\n  var newTokenEventName = 'onDevicePushToken';\n  /**\n   * In rare situations, a push token may be changed by the push notification service while the app is running.\n   * When a token is rolled, the old one becomes invalid and sending notifications to it will fail.\n   * A push token listener will let you handle this situation gracefully by registering the new token with your backend right away.\n   * @param listener A function accepting a push token as an argument, it will be called whenever the push token changes.\n   * @return An [`EventSubscription`](#eventsubscription) object represents the subscription of the provided listener.\n   * @header fetch\n   * @example Registering a push token listener using a React hook.\n   * ```jsx\n   * import React from 'react';\n   * import * as Notifications from 'expo-notifications';\n   *\n   * import { registerDevicePushTokenAsync } from '../api';\n   *\n   * export default function App() {\n   *   React.useEffect(() => {\n   *     const subscription = Notifications.addPushTokenListener(registerDevicePushTokenAsync);\n   *     return () => subscription.remove();\n   *   }, []);\n   *\n   *   return (\n   *     // Your app content\n   *   );\n   * }\n   * ```\n   */\n  function addPushTokenListener(listener) {\n    (0, _warnOfExpoGoPushUsage.warnOfExpoGoPushUsage)();\n    return _PushTokenManager.default.addListener(newTokenEventName, _ref => {\n      var devicePushToken = _ref.devicePushToken;\n      return listener({\n        data: devicePushToken,\n        type: _expoModulesCore.Platform.OS\n      });\n    });\n  }\n  /**\n   * @deprecated call `remove()` on the subscription object instead.\n   *\n   * Removes a push token subscription returned by an `addPushTokenListener` call.\n   * @param subscription A subscription returned by `addPushTokenListener` method.\n   * @header fetch\n   */\n  function removePushTokenSubscription(subscription) {\n    console.warn('`removePushTokenSubscription` is deprecated. Call `subscription.remove()` instead.');\n    subscription.remove();\n  }\n});","lineCount":60,"map":[[8,2,1,0],[8,6,1,0,"_expoModulesCore"],[8,22,1,0],[8,25,1,0,"require"],[8,32,1,0],[8,33,1,0,"_dependencyMap"],[8,47,1,0],[9,2,2,0],[9,6,2,0,"_PushTokenManager"],[9,23,2,0],[9,26,2,0,"_interopRequireDefault"],[9,48,2,0],[9,49,2,0,"require"],[9,56,2,0],[9,57,2,0,"_dependencyMap"],[9,71,2,0],[10,2,3,0],[10,6,3,0,"_warnOfExpoGoPushUsage"],[10,28,3,0],[10,31,3,0,"require"],[10,38,3,0],[10,39,3,0,"_dependencyMap"],[10,53,3,0],[11,2,4,0],[12,2,5,0],[12,6,5,6,"newTokenEventName"],[12,23,5,23],[12,26,5,26],[12,45,5,45],[13,2,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,2,32,7],[39,11,32,16,"addPushTokenListener"],[39,31,32,36,"addPushTokenListener"],[39,32,32,37,"listener"],[39,40,32,45],[39,42,32,47],[40,4,33,4],[40,8,33,4,"warnOfExpoGoPushUsage"],[40,52,33,25],[40,54,33,26],[40,55,33,27],[41,4,34,4],[41,11,34,11,"PushTokenManager"],[41,36,34,27],[41,37,34,28,"addListener"],[41,48,34,39],[41,49,34,40,"newTokenEventName"],[41,66,34,57],[41,68,34,59,"_ref"],[41,72,34,59],[42,6,34,59],[42,10,34,62,"devicePushToken"],[42,25,34,77],[42,28,34,77,"_ref"],[42,32,34,77],[42,33,34,62,"devicePushToken"],[42,48,34,77],[43,6,34,77],[43,13,34,84,"listener"],[43,21,34,92],[43,22,34,93],[44,8,34,95,"data"],[44,12,34,99],[44,14,34,101,"devicePushToken"],[44,29,34,116],[45,8,34,118,"type"],[45,12,34,122],[45,14,34,124,"Platform"],[45,39,34,132],[45,40,34,133,"OS"],[46,6,34,136],[46,7,34,137],[46,8,34,138],[47,4,34,138],[47,6,34,139],[48,2,35,0],[49,2,36,0],[50,0,37,0],[51,0,38,0],[52,0,39,0],[53,0,40,0],[54,0,41,0],[55,0,42,0],[56,2,43,7],[56,11,43,16,"removePushTokenSubscription"],[56,38,43,43,"removePushTokenSubscription"],[56,39,43,44,"subscription"],[56,51,43,56],[56,53,43,58],[57,4,44,4,"console"],[57,11,44,11],[57,12,44,12,"warn"],[57,16,44,16],[57,17,44,17],[57,101,44,101],[57,102,44,102],[58,4,45,4,"subscription"],[58,16,45,16],[58,17,45,17,"remove"],[58,23,45,23],[58,24,45,24],[58,25,45,25],[59,2,46,0],[60,0,46,1],[60,3]],"functionMap":{"names":["<global>","addPushTokenListener","PushTokenManager.addListener$argument_1","removePushTokenSubscription"],"mappings":"AAA;OC+B;2DCE,+ED;CDC;OGQ;CHG"}},"type":"js/module"}]}