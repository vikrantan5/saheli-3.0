{"dependencies":[{"name":"./constructNow.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"KxtQUZbfjGqP9AepKKDBoJJ/4sk=","exportNames":["*"]}},{"name":"./formatDistanceStrict.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":51},"end":{"line":3,"column":65,"index":116}}],"key":"AZpqAUealaqNXkEPt+1HcGx/dP0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.formatDistanceToNowStrict = formatDistanceToNowStrict;\n  var _constructNow = require(_dependencyMap[0], \"./constructNow.js\");\n  var _formatDistanceStrict = require(_dependencyMap[1], \"./formatDistanceStrict.js\");\n  /**\n   * The {@link formatDistanceToNowStrict} function options.\n   */\n\n  /**\n   * @name formatDistanceToNowStrict\n   * @category Common Helpers\n   * @summary Return the distance between the given date and now in words.\n   * @pure false\n   *\n   * @description\n   * Return the distance between the given dates in words, using strict units.\n   * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n   * 'less than' and the like.\n   *\n   * | Distance between dates | Result              |\n   * |------------------------|---------------------|\n   * | 0 ... 59 secs          | [0..59] seconds     |\n   * | 1 ... 59 mins          | [1..59] minutes     |\n   * | 1 ... 23 hrs           | [1..23] hours       |\n   * | 1 ... 29 days          | [1..29] days        |\n   * | 1 ... 11 months        | [1..11] months      |\n   * | 1 ... N years          | [1..N]  years       |\n   *\n   * @param date - The given date\n   * @param options - An object with options.\n   *\n   * @returns The distance in words\n   *\n   * @throws `date` must not be Invalid Date\n   * @throws `options.locale` must contain `formatDistance` property\n   *\n   * @example\n   * // If today is 1 January 2015, what is the distance to 2 July 2014?\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2014, 6, 2)\n   * )\n   * //=> '6 months'\n   *\n   * @example\n   * // If now is 1 January 2015 00:00:00,\n   * // what is the distance to 1 January 2015 00:00:15, including seconds?\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2015, 0, 1, 0, 0, 15)\n   * )\n   * //=> '15 seconds'\n   *\n   * @example\n   * // If today is 1 January 2015,\n   * // what is the distance to 1 January 2016, with a suffix?\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2016, 0, 1),\n   *   {addSuffix: true}\n   * )\n   * //=> 'in 1 year'\n   *\n   * @example\n   * // If today is 28 January 2015,\n   * // what is the distance to 1 January 2015, in months, rounded up??\n   * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n   *   unit: 'month',\n   *   roundingMethod: 'ceil'\n   * })\n   * //=> '1 month'\n   *\n   * @example\n   * // If today is 1 January 2015,\n   * // what is the distance to 1 January 2016 in Esperanto?\n   * const eoLocale = require('date-fns/locale/eo')\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2016, 0, 1),\n   *   {locale: eoLocale}\n   * )\n   * //=> '1 jaro'\n   */\n  function formatDistanceToNowStrict(date, options) {\n    return (0, _formatDistanceStrict.formatDistanceStrict)(date, (0, _constructNow.constructNow)(date), options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = formatDistanceToNowStrict;\n});","lineCount":90,"map":[[7,2,1,0],[7,6,1,0,"_constructNow"],[7,19,1,0],[7,22,1,0,"require"],[7,29,1,0],[7,30,1,0,"_dependencyMap"],[7,44,1,0],[8,2,3,0],[8,6,3,0,"_formatDistanceStrict"],[8,27,3,0],[8,30,3,0,"require"],[8,37,3,0],[8,38,3,0,"_dependencyMap"],[8,52,3,0],[9,2,5,0],[10,0,6,0],[11,0,7,0],[13,2,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,0,55,0],[60,0,56,0],[61,0,57,0],[62,0,58,0],[63,0,59,0],[64,0,60,0],[65,0,61,0],[66,0,62,0],[67,0,63,0],[68,0,64,0],[69,0,65,0],[70,0,66,0],[71,0,67,0],[72,0,68,0],[73,0,69,0],[74,0,70,0],[75,0,71,0],[76,0,72,0],[77,0,73,0],[78,0,74,0],[79,0,75,0],[80,0,76,0],[81,0,77,0],[82,0,78,0],[83,0,79,0],[84,2,80,7],[84,11,80,16,"formatDistanceToNowStrict"],[84,36,80,41,"formatDistanceToNowStrict"],[84,37,80,42,"date"],[84,41,80,46],[84,43,80,48,"options"],[84,50,80,55],[84,52,80,57],[85,4,81,2],[85,11,81,9],[85,15,81,9,"formatDistanceStrict"],[85,57,81,29],[85,59,81,30,"date"],[85,63,81,34],[85,65,81,36],[85,69,81,36,"constructNow"],[85,95,81,48],[85,97,81,49,"date"],[85,101,81,53],[85,102,81,54],[85,104,81,56,"options"],[85,111,81,63],[85,112,81,64],[86,2,82,0],[88,2,84,0],[89,2,84,0],[89,6,84,0,"_default"],[89,14,84,0],[89,17,84,0,"exports"],[89,24,84,0],[89,25,84,0,"default"],[89,32,84,0],[89,35,85,15,"formatDistanceToNowStrict"],[89,60,85,40],[90,0,85,40],[90,3]],"functionMap":{"names":["<global>","formatDistanceToNowStrict"],"mappings":"AAA;OC+E;CDE"}},"type":"js/module"}]}