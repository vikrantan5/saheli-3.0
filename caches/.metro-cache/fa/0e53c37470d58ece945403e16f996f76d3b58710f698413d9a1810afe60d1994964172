{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.secondsInYear = exports.secondsInWeek = exports.secondsInQuarter = exports.secondsInMonth = exports.secondsInMinute = exports.secondsInHour = exports.secondsInDay = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInYear = exports.minutesInMonth = exports.minutesInHour = exports.minutesInDay = exports.minTime = exports.millisecondsInWeek = exports.millisecondsInSecond = exports.millisecondsInMinute = exports.millisecondsInHour = exports.millisecondsInDay = exports.maxTime = exports.daysInYear = exports.daysInWeek = exports.constructFromSymbol = void 0;\n  /**\n   * @module constants\n   * @summary Useful constants\n   * @description\n   * Collection of useful date constants.\n   *\n   * The constants could be imported from `date-fns/constants`:\n   *\n   * ```ts\n   * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n   *\n   * function isAllowedTime(time) {\n   *   return time <= maxTime && time >= minTime;\n   * }\n   * ```\n   */\n\n  /**\n   * @constant\n   * @name daysInWeek\n   * @summary Days in 1 week.\n   */\n  var daysInWeek = exports.daysInWeek = 7;\n\n  /**\n   * @constant\n   * @name daysInYear\n   * @summary Days in 1 year.\n   *\n   * @description\n   * How many days in a year.\n   *\n   * One years equals 365.2425 days according to the formula:\n   *\n   * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n   * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n   */\n  var daysInYear = exports.daysInYear = 365.2425;\n\n  /**\n   * @constant\n   * @name maxTime\n   * @summary Maximum allowed time.\n   *\n   * @example\n   * import { maxTime } from \"./constants/date-fns/constants\";\n   *\n   * const isValid = 8640000000000001 <= maxTime;\n   * //=> false\n   *\n   * new Date(8640000000000001);\n   * //=> Invalid Date\n   */\n  var maxTime = exports.maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n  /**\n   * @constant\n   * @name minTime\n   * @summary Minimum allowed time.\n   *\n   * @example\n   * import { minTime } from \"./constants/date-fns/constants\";\n   *\n   * const isValid = -8640000000000001 >= minTime;\n   * //=> false\n   *\n   * new Date(-8640000000000001)\n   * //=> Invalid Date\n   */\n  var minTime = exports.minTime = -maxTime;\n\n  /**\n   * @constant\n   * @name millisecondsInWeek\n   * @summary Milliseconds in 1 week.\n   */\n  var millisecondsInWeek = exports.millisecondsInWeek = 604800000;\n\n  /**\n   * @constant\n   * @name millisecondsInDay\n   * @summary Milliseconds in 1 day.\n   */\n  var millisecondsInDay = exports.millisecondsInDay = 86400000;\n\n  /**\n   * @constant\n   * @name millisecondsInMinute\n   * @summary Milliseconds in 1 minute\n   */\n  var millisecondsInMinute = exports.millisecondsInMinute = 60000;\n\n  /**\n   * @constant\n   * @name millisecondsInHour\n   * @summary Milliseconds in 1 hour\n   */\n  var millisecondsInHour = exports.millisecondsInHour = 3600000;\n\n  /**\n   * @constant\n   * @name millisecondsInSecond\n   * @summary Milliseconds in 1 second\n   */\n  var millisecondsInSecond = exports.millisecondsInSecond = 1000;\n\n  /**\n   * @constant\n   * @name minutesInYear\n   * @summary Minutes in 1 year.\n   */\n  var minutesInYear = exports.minutesInYear = 525600;\n\n  /**\n   * @constant\n   * @name minutesInMonth\n   * @summary Minutes in 1 month.\n   */\n  var minutesInMonth = exports.minutesInMonth = 43200;\n\n  /**\n   * @constant\n   * @name minutesInDay\n   * @summary Minutes in 1 day.\n   */\n  var minutesInDay = exports.minutesInDay = 1440;\n\n  /**\n   * @constant\n   * @name minutesInHour\n   * @summary Minutes in 1 hour.\n   */\n  var minutesInHour = exports.minutesInHour = 60;\n\n  /**\n   * @constant\n   * @name monthsInQuarter\n   * @summary Months in 1 quarter.\n   */\n  var monthsInQuarter = exports.monthsInQuarter = 3;\n\n  /**\n   * @constant\n   * @name monthsInYear\n   * @summary Months in 1 year.\n   */\n  var monthsInYear = exports.monthsInYear = 12;\n\n  /**\n   * @constant\n   * @name quartersInYear\n   * @summary Quarters in 1 year\n   */\n  var quartersInYear = exports.quartersInYear = 4;\n\n  /**\n   * @constant\n   * @name secondsInHour\n   * @summary Seconds in 1 hour.\n   */\n  var secondsInHour = exports.secondsInHour = 3600;\n\n  /**\n   * @constant\n   * @name secondsInMinute\n   * @summary Seconds in 1 minute.\n   */\n  var secondsInMinute = exports.secondsInMinute = 60;\n\n  /**\n   * @constant\n   * @name secondsInDay\n   * @summary Seconds in 1 day.\n   */\n  var secondsInDay = exports.secondsInDay = secondsInHour * 24;\n\n  /**\n   * @constant\n   * @name secondsInWeek\n   * @summary Seconds in 1 week.\n   */\n  var secondsInWeek = exports.secondsInWeek = secondsInDay * 7;\n\n  /**\n   * @constant\n   * @name secondsInYear\n   * @summary Seconds in 1 year.\n   */\n  var secondsInYear = exports.secondsInYear = secondsInDay * daysInYear;\n\n  /**\n   * @constant\n   * @name secondsInMonth\n   * @summary Seconds in 1 month\n   */\n  var secondsInMonth = exports.secondsInMonth = secondsInYear / 12;\n\n  /**\n   * @constant\n   * @name secondsInQuarter\n   * @summary Seconds in 1 quarter.\n   */\n  var secondsInQuarter = exports.secondsInQuarter = secondsInMonth * 3;\n\n  /**\n   * @constant\n   * @name constructFromSymbol\n   * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n   *\n   * The symbol is used to enable the `constructFrom` function to construct a date\n   * using a reference date and a value. It allows to transfer extra properties\n   * from the reference date to the new date. It's useful for extensions like\n   * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n   * a constructor argument.\n   */\n  var constructFromSymbol = exports.constructFromSymbol = Symbol.for(\"constructDateFrom\");\n});","lineCount":222,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[23,2,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,2,23,7],[28,6,23,13,"daysInWeek"],[28,16,23,23],[28,19,23,23,"exports"],[28,26,23,23],[28,27,23,23,"daysInWeek"],[28,37,23,23],[28,40,23,26],[28,41,23,27],[30,2,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,2,38,7],[43,6,38,13,"daysInYear"],[43,16,38,23],[43,19,38,23,"exports"],[43,26,38,23],[43,27,38,23,"daysInYear"],[43,37,38,23],[43,40,38,26],[43,48,38,34],[45,2,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,0,47,0],[53,0,48,0],[54,0,49,0],[55,0,50,0],[56,0,51,0],[57,0,52,0],[58,0,53,0],[59,2,54,7],[59,6,54,13,"maxTime"],[59,13,54,20],[59,16,54,20,"exports"],[59,23,54,20],[59,24,54,20,"maxTime"],[59,31,54,20],[59,34,54,23,"Math"],[59,38,54,27],[59,39,54,28,"pow"],[59,42,54,31],[59,43,54,32],[59,45,54,34],[59,47,54,36],[59,48,54,37],[59,49,54,38],[59,52,54,41],[59,54,54,43],[59,57,54,46],[59,59,54,48],[59,62,54,51],[59,64,54,53],[59,67,54,56],[59,71,54,60],[61,2,56,0],[62,0,57,0],[63,0,58,0],[64,0,59,0],[65,0,60,0],[66,0,61,0],[67,0,62,0],[68,0,63,0],[69,0,64,0],[70,0,65,0],[71,0,66,0],[72,0,67,0],[73,0,68,0],[74,0,69,0],[75,2,70,7],[75,6,70,13,"minTime"],[75,13,70,20],[75,16,70,20,"exports"],[75,23,70,20],[75,24,70,20,"minTime"],[75,31,70,20],[75,34,70,23],[75,35,70,24,"maxTime"],[75,42,70,31],[77,2,72,0],[78,0,73,0],[79,0,74,0],[80,0,75,0],[81,0,76,0],[82,2,77,7],[82,6,77,13,"millisecondsInWeek"],[82,24,77,31],[82,27,77,31,"exports"],[82,34,77,31],[82,35,77,31,"millisecondsInWeek"],[82,53,77,31],[82,56,77,34],[82,65,77,43],[84,2,79,0],[85,0,80,0],[86,0,81,0],[87,0,82,0],[88,0,83,0],[89,2,84,7],[89,6,84,13,"millisecondsInDay"],[89,23,84,30],[89,26,84,30,"exports"],[89,33,84,30],[89,34,84,30,"millisecondsInDay"],[89,51,84,30],[89,54,84,33],[89,62,84,41],[91,2,86,0],[92,0,87,0],[93,0,88,0],[94,0,89,0],[95,0,90,0],[96,2,91,7],[96,6,91,13,"millisecondsInMinute"],[96,26,91,33],[96,29,91,33,"exports"],[96,36,91,33],[96,37,91,33,"millisecondsInMinute"],[96,57,91,33],[96,60,91,36],[96,65,91,41],[98,2,93,0],[99,0,94,0],[100,0,95,0],[101,0,96,0],[102,0,97,0],[103,2,98,7],[103,6,98,13,"millisecondsInHour"],[103,24,98,31],[103,27,98,31,"exports"],[103,34,98,31],[103,35,98,31,"millisecondsInHour"],[103,53,98,31],[103,56,98,34],[103,63,98,41],[105,2,100,0],[106,0,101,0],[107,0,102,0],[108,0,103,0],[109,0,104,0],[110,2,105,7],[110,6,105,13,"millisecondsInSecond"],[110,26,105,33],[110,29,105,33,"exports"],[110,36,105,33],[110,37,105,33,"millisecondsInSecond"],[110,57,105,33],[110,60,105,36],[110,64,105,40],[112,2,107,0],[113,0,108,0],[114,0,109,0],[115,0,110,0],[116,0,111,0],[117,2,112,7],[117,6,112,13,"minutesInYear"],[117,19,112,26],[117,22,112,26,"exports"],[117,29,112,26],[117,30,112,26,"minutesInYear"],[117,43,112,26],[117,46,112,29],[117,52,112,35],[119,2,114,0],[120,0,115,0],[121,0,116,0],[122,0,117,0],[123,0,118,0],[124,2,119,7],[124,6,119,13,"minutesInMonth"],[124,20,119,27],[124,23,119,27,"exports"],[124,30,119,27],[124,31,119,27,"minutesInMonth"],[124,45,119,27],[124,48,119,30],[124,53,119,35],[126,2,121,0],[127,0,122,0],[128,0,123,0],[129,0,124,0],[130,0,125,0],[131,2,126,7],[131,6,126,13,"minutesInDay"],[131,18,126,25],[131,21,126,25,"exports"],[131,28,126,25],[131,29,126,25,"minutesInDay"],[131,41,126,25],[131,44,126,28],[131,48,126,32],[133,2,128,0],[134,0,129,0],[135,0,130,0],[136,0,131,0],[137,0,132,0],[138,2,133,7],[138,6,133,13,"minutesInHour"],[138,19,133,26],[138,22,133,26,"exports"],[138,29,133,26],[138,30,133,26,"minutesInHour"],[138,43,133,26],[138,46,133,29],[138,48,133,31],[140,2,135,0],[141,0,136,0],[142,0,137,0],[143,0,138,0],[144,0,139,0],[145,2,140,7],[145,6,140,13,"monthsInQuarter"],[145,21,140,28],[145,24,140,28,"exports"],[145,31,140,28],[145,32,140,28,"monthsInQuarter"],[145,47,140,28],[145,50,140,31],[145,51,140,32],[147,2,142,0],[148,0,143,0],[149,0,144,0],[150,0,145,0],[151,0,146,0],[152,2,147,7],[152,6,147,13,"monthsInYear"],[152,18,147,25],[152,21,147,25,"exports"],[152,28,147,25],[152,29,147,25,"monthsInYear"],[152,41,147,25],[152,44,147,28],[152,46,147,30],[154,2,149,0],[155,0,150,0],[156,0,151,0],[157,0,152,0],[158,0,153,0],[159,2,154,7],[159,6,154,13,"quartersInYear"],[159,20,154,27],[159,23,154,27,"exports"],[159,30,154,27],[159,31,154,27,"quartersInYear"],[159,45,154,27],[159,48,154,30],[159,49,154,31],[161,2,156,0],[162,0,157,0],[163,0,158,0],[164,0,159,0],[165,0,160,0],[166,2,161,7],[166,6,161,13,"secondsInHour"],[166,19,161,26],[166,22,161,26,"exports"],[166,29,161,26],[166,30,161,26,"secondsInHour"],[166,43,161,26],[166,46,161,29],[166,50,161,33],[168,2,163,0],[169,0,164,0],[170,0,165,0],[171,0,166,0],[172,0,167,0],[173,2,168,7],[173,6,168,13,"secondsInMinute"],[173,21,168,28],[173,24,168,28,"exports"],[173,31,168,28],[173,32,168,28,"secondsInMinute"],[173,47,168,28],[173,50,168,31],[173,52,168,33],[175,2,170,0],[176,0,171,0],[177,0,172,0],[178,0,173,0],[179,0,174,0],[180,2,175,7],[180,6,175,13,"secondsInDay"],[180,18,175,25],[180,21,175,25,"exports"],[180,28,175,25],[180,29,175,25,"secondsInDay"],[180,41,175,25],[180,44,175,28,"secondsInHour"],[180,57,175,41],[180,60,175,44],[180,62,175,46],[182,2,177,0],[183,0,178,0],[184,0,179,0],[185,0,180,0],[186,0,181,0],[187,2,182,7],[187,6,182,13,"secondsInWeek"],[187,19,182,26],[187,22,182,26,"exports"],[187,29,182,26],[187,30,182,26,"secondsInWeek"],[187,43,182,26],[187,46,182,29,"secondsInDay"],[187,58,182,41],[187,61,182,44],[187,62,182,45],[189,2,184,0],[190,0,185,0],[191,0,186,0],[192,0,187,0],[193,0,188,0],[194,2,189,7],[194,6,189,13,"secondsInYear"],[194,19,189,26],[194,22,189,26,"exports"],[194,29,189,26],[194,30,189,26,"secondsInYear"],[194,43,189,26],[194,46,189,29,"secondsInDay"],[194,58,189,41],[194,61,189,44,"daysInYear"],[194,71,189,54],[196,2,191,0],[197,0,192,0],[198,0,193,0],[199,0,194,0],[200,0,195,0],[201,2,196,7],[201,6,196,13,"secondsInMonth"],[201,20,196,27],[201,23,196,27,"exports"],[201,30,196,27],[201,31,196,27,"secondsInMonth"],[201,45,196,27],[201,48,196,30,"secondsInYear"],[201,61,196,43],[201,64,196,46],[201,66,196,48],[203,2,198,0],[204,0,199,0],[205,0,200,0],[206,0,201,0],[207,0,202,0],[208,2,203,7],[208,6,203,13,"secondsInQuarter"],[208,22,203,29],[208,25,203,29,"exports"],[208,32,203,29],[208,33,203,29,"secondsInQuarter"],[208,49,203,29],[208,52,203,32,"secondsInMonth"],[208,66,203,46],[208,69,203,49],[208,70,203,50],[210,2,205,0],[211,0,206,0],[212,0,207,0],[213,0,208,0],[214,0,209,0],[215,0,210,0],[216,0,211,0],[217,0,212,0],[218,0,213,0],[219,0,214,0],[220,0,215,0],[221,2,216,7],[221,6,216,13,"constructFromSymbol"],[221,25,216,32],[221,28,216,32,"exports"],[221,35,216,32],[221,36,216,32,"constructFromSymbol"],[221,55,216,32],[221,58,216,35,"Symbol"],[221,64,216,41],[221,65,216,42,"for"],[221,68,216,45],[221,69,216,46],[221,88,216,65],[221,89,216,66],[222,0,216,67],[222,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}