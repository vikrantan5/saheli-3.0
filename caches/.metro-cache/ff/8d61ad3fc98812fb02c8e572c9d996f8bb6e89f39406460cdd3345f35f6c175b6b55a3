{"dependencies":[{"name":"./startOfSecond.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"HNlcIb+K5QgOj8gsTzPUs29f8C4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameSecond = isSameSecond;\n  var _startOfSecond = require(_dependencyMap[0], \"./startOfSecond.js\");\n  /**\n   * @name isSameSecond\n   * @category Second Helpers\n   * @summary Are the given dates in the same second (and hour and day)?\n   *\n   * @description\n   * Are the given dates in the same second (and hour and day)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   *\n   * @returns The dates are in the same second (and hour and day)\n   *\n   * @example\n   * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500 in the same second?\n   * const result = isSameSecond(\n   *   new Date(2014, 8, 4, 6, 30, 15),\n   *   new Date(2014, 8, 4, 6, 30, 15, 500)\n   * )\n   * //=> true\n   *\n   * @example\n   * // Are 4 September 2014 06:00:15.000 and 4 September 2014 06:01.15.000 in the same second?\n   * const result = isSameSecond(\n   *   new Date(2014, 8, 4, 6, 0, 15),\n   *   new Date(2014, 8, 4, 6, 1, 15)\n   * )\n   * //=> false\n   *\n   * @example\n   * // Are 4 September 2014 06:00:15.000 and 5 September 2014 06:00.15.000 in the same second?\n   * const result = isSameSecond(\n   *   new Date(2014, 8, 4, 6, 0, 15),\n   *   new Date(2014, 8, 5, 6, 0, 15)\n   * )\n   * //=> false\n   */\n  function isSameSecond(laterDate, earlierDate) {\n    return +(0, _startOfSecond.startOfSecond)(laterDate) === +(0, _startOfSecond.startOfSecond)(earlierDate);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameSecond;\n});","lineCount":51,"map":[[7,2,1,0],[7,6,1,0,"_startOfSecond"],[7,20,1,0],[7,23,1,0,"require"],[7,30,1,0],[7,31,1,0,"_dependencyMap"],[7,45,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,2,40,7],[45,11,40,16,"isSameSecond"],[45,23,40,28,"isSameSecond"],[45,24,40,29,"laterDate"],[45,33,40,38],[45,35,40,40,"earlierDate"],[45,46,40,51],[45,48,40,53],[46,4,41,2],[46,11,41,9],[46,12,41,10],[46,16,41,10,"startOfSecond"],[46,44,41,23],[46,46,41,24,"laterDate"],[46,55,41,33],[46,56,41,34],[46,61,41,39],[46,62,41,40],[46,66,41,40,"startOfSecond"],[46,94,41,53],[46,96,41,54,"earlierDate"],[46,107,41,65],[46,108,41,66],[47,2,42,0],[49,2,44,0],[50,2,44,0],[50,6,44,0,"_default"],[50,14,44,0],[50,17,44,0,"exports"],[50,24,44,0],[50,25,44,0,"default"],[50,32,44,0],[50,35,45,15,"isSameSecond"],[50,47,45,27],[51,0,45,27],[51,3]],"functionMap":{"names":["<global>","isSameSecond"],"mappings":"AAA;OCuC;CDE"}},"type":"js/module"}]}